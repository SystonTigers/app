"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/[tenant]/layout",{

/***/ "(app-pages-browser)/../packages/sdk/dist/index.js":
/*!*************************************!*\
  !*** ../packages/sdk/dist/index.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\n// packages/sdk/src/index.ts\n// Shared SDK client for team platform API\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.TeamPlatformSDK = void 0;\nexports.createSDK = createSDK;\nconst axios_1 = __importDefault(__webpack_require__(/*! axios */ \"(app-pages-browser)/../packages/sdk/node_modules/axios/dist/browser/axios.cjs\"));\n__exportStar(__webpack_require__(/*! ./types */ \"(app-pages-browser)/../packages/sdk/dist/types.js\"), exports);\nclass TeamPlatformSDK {\n    /**\n     * Set authentication token\n     */ setAuthToken(token) {\n        this.client.defaults.headers.common[\"Authorization\"] = \"Bearer \".concat(token);\n    }\n    /**\n     * Clear authentication token\n     */ clearAuthToken() {\n        delete this.client.defaults.headers.common[\"Authorization\"];\n    }\n    /**\n     * Update tenant ID\n     */ setTenant(tenantId) {\n        this.tenantId = tenantId;\n    }\n    // ==================== BRAND API ====================\n    /**\n     * Get brand kit for current tenant\n     */ async getBrand() {\n        const response = await this.client.get(\"/api/v1/brand\");\n        if (!response.data.success || !response.data.data) {\n            var _response_data_error;\n            throw new Error(((_response_data_error = response.data.error) === null || _response_data_error === void 0 ? void 0 : _response_data_error.message) || \"Failed to get brand\");\n        }\n        return response.data.data;\n    }\n    /**\n     * Update brand kit (admin only)\n     */ async setBrand(brand) {\n        const response = await this.client.post(\"/api/v1/brand\", brand);\n        if (!response.data.success || !response.data.data) {\n            var _response_data_error;\n            throw new Error(((_response_data_error = response.data.error) === null || _response_data_error === void 0 ? void 0 : _response_data_error.message) || \"Failed to set brand\");\n        }\n        return response.data.data;\n    }\n    // ==================== FIXTURES & RESULTS ====================\n    /**\n     * Get upcoming fixtures\n     */ async listFixtures() {\n        var _response_data;\n        const response = await this.client.get(\"/api/v1/fixtures\");\n        return ((_response_data = response.data) === null || _response_data === void 0 ? void 0 : _response_data.fixtures) || response.data || [];\n    }\n    /**\n     * Get past results\n     */ async listResults() {\n        var _response_data;\n        const response = await this.client.get(\"/api/v1/results\");\n        return ((_response_data = response.data) === null || _response_data === void 0 ? void 0 : _response_data.results) || response.data || [];\n    }\n    /**\n     * Get league table\n     */ async getLeagueTable(league, season) {\n        var _response_data;\n        const params = {};\n        if (league) params.league = league;\n        if (season) params.season = season;\n        const response = await this.client.get(\"/api/v1/table\", {\n            params\n        });\n        return ((_response_data = response.data) === null || _response_data === void 0 ? void 0 : _response_data.table) || response.data || [];\n    }\n    /**\n     * Get next fixture with YouTube livestream metadata\n     */ async getNextFixture() {\n        const response = await this.client.get(\"/api/v1/fixtures/next\");\n        if (!response.data.success || !response.data.data) {\n            return null;\n        }\n        return response.data.data;\n    }\n    /**\n     * Get live text updates for a match\n     */ async listLiveUpdates(matchId) {\n        const response = await this.client.get(\"/api/v1/live-updates\", {\n            params: {\n                matchId\n            }\n        });\n        if (!response.data.success || !response.data.data) {\n            return [];\n        }\n        return response.data.data;\n    }\n    /**\n     * Post a live update (goal, card, sub, info)\n     */ async postLiveUpdate(input) {\n        const response = await this.client.post(\"/api/v1/live-updates\", input);\n        if (!response.data.success || !response.data.data) {\n            var _response_data_error;\n            throw new Error(((_response_data_error = response.data.error) === null || _response_data_error === void 0 ? void 0 : _response_data_error.message) || \"Failed to post live update\");\n        }\n        return response.data.data;\n    }\n    /**\n     * Set match state (kickoff, halftime, fulltime)\n     */ async setMatchState(matchId, state) {\n        const response = await this.client.post(\"/api/v1/matches/\".concat(matchId, \"/state\"), state);\n        if (!response.data.success) {\n            var _response_data_error;\n            throw new Error(((_response_data_error = response.data.error) === null || _response_data_error === void 0 ? void 0 : _response_data_error.message) || \"Failed to set match state\");\n        }\n        return {\n            ok: true\n        };\n    }\n    /**\n     * Clean up stale live updates (removes items ~90min after FT)\n     */ async cleanupLive(matchId) {\n        const response = await this.client.post(\"/api/v1/live-updates/cleanup\", {\n            matchId\n        });\n        if (!response.data.success || !response.data.data) {\n            var _response_data_error;\n            throw new Error(((_response_data_error = response.data.error) === null || _response_data_error === void 0 ? void 0 : _response_data_error.message) || \"Failed to cleanup live updates\");\n        }\n        return response.data.data;\n    }\n    // ==================== SQUAD ====================\n    /**\n     * Get team squad\n     */ async getSquad() {\n        var _response_data;\n        const response = await this.client.get(\"/api/v1/squad\");\n        return ((_response_data = response.data) === null || _response_data === void 0 ? void 0 : _response_data.squad) || response.data || [];\n    }\n    /**\n     * Get player details\n     */ async getPlayer(playerId) {\n        var _response_data;\n        const response = await this.client.get(\"/api/v1/squad/\".concat(playerId));\n        return ((_response_data = response.data) === null || _response_data === void 0 ? void 0 : _response_data.player) || response.data;\n    }\n    /**\n     * Get top scorers\n     */ async getTopScorers(limit) {\n        var _response_data;\n        const params = limit ? {\n            limit\n        } : {};\n        const response = await this.client.get(\"/api/v1/stats/top-scorers\", {\n            params\n        });\n        return ((_response_data = response.data) === null || _response_data === void 0 ? void 0 : _response_data.topScorers) || response.data || [];\n    }\n    // ==================== STATS ====================\n    /**\n     * Get team statistics\n     */ async getTeamStats() {\n        var _response_data;\n        const response = await this.client.get(\"/api/v1/stats/team\");\n        return ((_response_data = response.data) === null || _response_data === void 0 ? void 0 : _response_data.stats) || response.data;\n    }\n    /**\n     * Get player statistics\n     */ async getPlayerStats() {\n        var _response_data;\n        const response = await this.client.get(\"/api/v1/stats/players\");\n        return ((_response_data = response.data) === null || _response_data === void 0 ? void 0 : _response_data.players) || response.data || [];\n    }\n    // ==================== FEED/POSTS ====================\n    /**\n     * Get news feed posts\n     */ async listFeed() {\n        let page = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1, limit = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 20;\n        var _response_data;\n        const response = await this.client.get(\"/api/v1/feed\", {\n            params: {\n                page,\n                limit\n            }\n        });\n        return ((_response_data = response.data) === null || _response_data === void 0 ? void 0 : _response_data.posts) || response.data || [];\n    }\n    /**\n     * Create a new post (admin only)\n     */ async createPost(content, channels, media) {\n        var _response_data;\n        const response = await this.client.post(\"/api/v1/feed/create\", {\n            content,\n            channels,\n            media\n        });\n        return ((_response_data = response.data) === null || _response_data === void 0 ? void 0 : _response_data.post) || response.data;\n    }\n    // ==================== EVENTS ====================\n    /**\n     * Get list of events\n     */ async listEvents(limit) {\n        var _response_data;\n        const params = limit ? {\n            limit\n        } : {};\n        const response = await this.client.get(\"/api/v1/events\", {\n            params\n        });\n        return ((_response_data = response.data) === null || _response_data === void 0 ? void 0 : _response_data.events) || response.data || [];\n    }\n    /**\n     * Get event details\n     */ async getEvent(eventId) {\n        var _response_data;\n        const response = await this.client.get(\"/api/v1/events/\".concat(eventId));\n        return ((_response_data = response.data) === null || _response_data === void 0 ? void 0 : _response_data.event) || response.data;\n    }\n    /**\n     * Create event (admin only)\n     */ async createEvent(event) {\n        var _response_data;\n        const response = await this.client.post(\"/api/v1/events\", event);\n        return ((_response_data = response.data) === null || _response_data === void 0 ? void 0 : _response_data.event) || response.data;\n    }\n    /**\n     * Delete event (admin only)\n     */ async deleteEvent(eventId) {\n        await this.client.delete(\"/api/v1/events/\".concat(eventId));\n    }\n    // ==================== LIVE EVENTS ====================\n    /**\n     * Get live events/updates\n     */ async listLive() {\n        var _response_data;\n        const response = await this.client.get(\"/api/v1/events/live\");\n        return ((_response_data = response.data) === null || _response_data === void 0 ? void 0 : _response_data.events) || response.data || [];\n    }\n    /**\n     * Post a live event (admin only)\n     */ async postLive(event) {\n        var _response_data;\n        const response = await this.client.post(\"/api/v1/events/live\", event);\n        return ((_response_data = response.data) === null || _response_data === void 0 ? void 0 : _response_data.event) || response.data;\n    }\n    // ==================== PUSH NOTIFICATIONS ====================\n    /**\n     * Register push notification token\n     */ async registerPush(token) {\n        await this.client.post(\"/api/v1/push/register\", token);\n    }\n    /**\n     * Send push notification (admin only)\n     */ async sendPush(title, body, data) {\n        await this.client.post(\"/api/v1/push/send\", {\n            title,\n            body,\n            data\n        });\n    }\n    /**\n     * Unregister push notification token\n     */ async unregisterPush(token) {\n        await this.client.post(\"/api/v1/push/unregister\", {\n            token\n        });\n    }\n    /**\n     * Get push notification history\n     */ async getPushHistory() {\n        var _response_data;\n        const response = await this.client.get(\"/api/v1/push/history\");\n        return ((_response_data = response.data) === null || _response_data === void 0 ? void 0 : _response_data.history) || response.data || [];\n    }\n    // ==================== USAGE ====================\n    /**\n     * Get usage statistics\n     */ async getUsage() {\n        var _response_data;\n        const response = await this.client.get(\"/api/v1/usage\");\n        return ((_response_data = response.data) === null || _response_data === void 0 ? void 0 : _response_data.usage) || response.data;\n    }\n    /**\n     * Check if Make.com automation is allowed\n     */ async canUseMake() {\n        var _response_data;\n        const response = await this.client.get(\"/api/v1/usage/make/allowed\");\n        return ((_response_data = response.data) === null || _response_data === void 0 ? void 0 : _response_data.allowed) || false;\n    }\n    /**\n     * Increment Make.com usage counter\n     */ async incrementMake() {\n        await this.client.post(\"/api/v1/usage/make/increment\");\n    }\n    // ==================== TENANT CONFIG ====================\n    /**\n     * Get tenant configuration\n     */ async getTenantConfig() {\n        var _response_data;\n        const response = await this.client.get(\"/api/v1/tenant/config\");\n        return ((_response_data = response.data) === null || _response_data === void 0 ? void 0 : _response_data.config) || response.data;\n    }\n    constructor(config){\n        this.tenantId = config.tenantId;\n        this.client = axios_1.default.create({\n            baseURL: config.apiBaseUrl,\n            timeout: config.timeout || 30000,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"x-tenant\": config.tenantId\n            }\n        });\n        // Add auth token if provided\n        if (config.authToken) {\n            this.setAuthToken(config.authToken);\n        }\n        // Add request interceptor for tenant header\n        this.client.interceptors.request.use((config)=>{\n            config.headers[\"x-tenant\"] = this.tenantId;\n            return config;\n        });\n    }\n}\nexports.TeamPlatformSDK = TeamPlatformSDK;\n/**\n * Create SDK instance\n */ function createSDK(config) {\n    return new TeamPlatformSDK(config);\n}\nexports[\"default\"] = TeamPlatformSDK;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/../packages/sdk/dist/index.js\n"));

/***/ })

});