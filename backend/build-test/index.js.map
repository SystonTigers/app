{
  "version": 3,
  "sources": ["../node_modules/unenv/dist/runtime/_internal/utils.mjs", "../node_modules/unenv/dist/runtime/node/internal/perf_hooks/performance.mjs", "../node_modules/unenv/dist/runtime/node/perf_hooks.mjs", "../node_modules/@cloudflare/unenv-preset/dist/runtime/polyfill/performance.mjs", "../node_modules/unenv/dist/runtime/mock/noop.mjs", "../node_modules/unenv/dist/runtime/node/console.mjs", "../node_modules/@cloudflare/unenv-preset/dist/runtime/node/console.mjs", "../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-console", "../node_modules/unenv/dist/runtime/node/internal/process/hrtime.mjs", "../node_modules/unenv/dist/runtime/node/internal/tty/read-stream.mjs", "../node_modules/unenv/dist/runtime/node/internal/tty/write-stream.mjs", "../node_modules/unenv/dist/runtime/node/tty.mjs", "../node_modules/unenv/dist/runtime/node/internal/process/node-version.mjs", "../node_modules/unenv/dist/runtime/node/internal/process/process.mjs", "../node_modules/@cloudflare/unenv-preset/dist/runtime/node/process.mjs", "../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-process", "../node_modules/zod/v3/helpers/util.js", "../node_modules/zod/v3/ZodError.js", "../node_modules/zod/v3/locales/en.js", "../node_modules/zod/v3/errors.js", "../node_modules/zod/v3/helpers/parseUtil.js", "../node_modules/zod/v3/helpers/typeAliases.js", "../node_modules/zod/v3/helpers/errorUtil.js", "../node_modules/zod/v3/types.js", "../node_modules/zod/v3/external.js", "../node_modules/zod/index.js", "../src/services/promoCodes.ts", "../src/services/googleAuth.ts", "../src/services/appsScriptDeployer.ts", "../src/services/playerImages.ts", "../src/services/autoPostsMatrix.ts", "../src/services/clubConfig.ts", "../src/services/brand.ts", "../src/index.ts", "../node_modules/jose/dist/webapi/index.js", "../node_modules/jose/dist/webapi/util/base64url.js", "../node_modules/jose/dist/webapi/lib/buffer_utils.js", "../node_modules/jose/dist/webapi/lib/base64.js", "../node_modules/jose/dist/webapi/util/errors.js", "../node_modules/jose/dist/webapi/lib/crypto_key.js", "../node_modules/jose/dist/webapi/lib/invalid_key_input.js", "../node_modules/jose/dist/webapi/lib/is_key_like.js", "../node_modules/jose/dist/webapi/lib/is_disjoint.js", "../node_modules/jose/dist/webapi/lib/is_object.js", "../node_modules/jose/dist/webapi/lib/check_key_length.js", "../node_modules/jose/dist/webapi/lib/jwk_to_key.js", "../node_modules/jose/dist/webapi/lib/validate_crit.js", "../node_modules/jose/dist/webapi/lib/validate_algorithms.js", "../node_modules/jose/dist/webapi/lib/normalize_key.js", "../node_modules/jose/dist/webapi/lib/is_jwk.js", "../node_modules/jose/dist/webapi/lib/check_key_type.js", "../node_modules/jose/dist/webapi/jws/compact/verify.js", "../node_modules/jose/dist/webapi/jws/flattened/verify.js", "../node_modules/jose/dist/webapi/lib/verify.js", "../node_modules/jose/dist/webapi/lib/subtle_dsa.js", "../node_modules/jose/dist/webapi/lib/get_sign_verify_key.js", "../node_modules/jose/dist/webapi/jwt/verify.js", "../node_modules/jose/dist/webapi/lib/jwt_claims_set.js", "../node_modules/jose/dist/webapi/lib/epoch.js", "../node_modules/jose/dist/webapi/lib/secs.js", "../node_modules/jose/dist/webapi/jws/compact/sign.js", "../node_modules/jose/dist/webapi/jws/flattened/sign.js", "../node_modules/jose/dist/webapi/lib/sign.js", "../node_modules/jose/dist/webapi/jwt/sign.js", "../src/services/util.ts", "../src/middleware/securityHeaders.ts", "../src/services/auth.ts", "../src/services/jwt.ts", "../src/services/idempotency.ts", "../src/services/tenants.ts", "../src/queue-consumer.ts", "../src/adapters/make.ts", "../src/adapters/youtube.ts", "../src/adapters/facebook.ts", "../src/adapters/instagram.ts", "../src/adapters/tiktok.ts", "../src/adapters/x.ts", "../src/services/rateAware.ts", "../src/services/events.ts", "../src/services/push.ts", "../src/services/invites.ts", "../src/services/teams.ts", "../src/services/chatKV.ts", "../src/services/galleryKV.ts", "../src/services/provisioning.ts", "../src/middleware/cors.ts", "../src/middleware/rateLimit.ts", "../src/lib/log.ts", "../src/lib/validate.ts", "../src/routes/health.ts", "../src/routes/signup.ts", "../src/routes/magic.ts", "../src/routes/provisioning.ts", "../src/do/rateLimiter.ts", "../src/do/votingRoom.ts", "../src/do/matchRoom.ts", "../src/do/chatRoom.ts", "../src/do/geoFenceManager.ts", "../src/do/provisioner.ts"],
  "sourceRoot": "./build-test",
  "sourcesContent": ["/* @__NO_SIDE_EFFECTS__ */\nexport function rawHeaders(headers) {\n\tconst rawHeaders = [];\n\tfor (const key in headers) {\n\t\tif (Array.isArray(headers[key])) {\n\t\t\tfor (const h of headers[key]) {\n\t\t\t\trawHeaders.push(key, h);\n\t\t\t}\n\t\t} else {\n\t\t\trawHeaders.push(key, headers[key]);\n\t\t}\n\t}\n\treturn rawHeaders;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function mergeFns(...functions) {\n\treturn function(...args) {\n\t\tfor (const fn of functions) {\n\t\t\tfn(...args);\n\t\t}\n\t};\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function createNotImplementedError(name) {\n\treturn new Error(`[unenv] ${name} is not implemented yet!`);\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplemented(name) {\n\tconst fn = () => {\n\t\tthrow createNotImplementedError(name);\n\t};\n\treturn Object.assign(fn, { __unenv__: true });\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedAsync(name) {\n\tconst fn = notImplemented(name);\n\tfn.__promisify__ = () => notImplemented(name + \".__promisify__\");\n\tfn.native = fn;\n\treturn fn;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedClass(name) {\n\treturn class {\n\t\t__unenv__ = true;\n\t\tconstructor() {\n\t\t\tthrow new Error(`[unenv] ${name} is not implemented yet!`);\n\t\t}\n\t};\n}\n", "import { createNotImplementedError } from \"../../../_internal/utils.mjs\";\nconst _timeOrigin = globalThis.performance?.timeOrigin ?? Date.now();\nconst _performanceNow = globalThis.performance?.now ? globalThis.performance.now.bind(globalThis.performance) : () => Date.now() - _timeOrigin;\nconst nodeTiming = {\n\tname: \"node\",\n\tentryType: \"node\",\n\tstartTime: 0,\n\tduration: 0,\n\tnodeStart: 0,\n\tv8Start: 0,\n\tbootstrapComplete: 0,\n\tenvironment: 0,\n\tloopStart: 0,\n\tloopExit: 0,\n\tidleTime: 0,\n\tuvMetricsInfo: {\n\t\tloopCount: 0,\n\t\tevents: 0,\n\t\teventsWaiting: 0\n\t},\n\tdetail: undefined,\n\ttoJSON() {\n\t\treturn this;\n\t}\n};\n// PerformanceEntry\nexport class PerformanceEntry {\n\t__unenv__ = true;\n\tdetail;\n\tentryType = \"event\";\n\tname;\n\tstartTime;\n\tconstructor(name, options) {\n\t\tthis.name = name;\n\t\tthis.startTime = options?.startTime || _performanceNow();\n\t\tthis.detail = options?.detail;\n\t}\n\tget duration() {\n\t\treturn _performanceNow() - this.startTime;\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tentryType: this.entryType,\n\t\t\tstartTime: this.startTime,\n\t\t\tduration: this.duration,\n\t\t\tdetail: this.detail\n\t\t};\n\t}\n}\n// PerformanceMark\nexport const PerformanceMark = class PerformanceMark extends PerformanceEntry {\n\tentryType = \"mark\";\n\tconstructor() {\n\t\t// @ts-ignore\n\t\tsuper(...arguments);\n\t}\n\tget duration() {\n\t\treturn 0;\n\t}\n};\n// PerformanceMark\nexport class PerformanceMeasure extends PerformanceEntry {\n\tentryType = \"measure\";\n}\n// PerformanceResourceTiming\nexport class PerformanceResourceTiming extends PerformanceEntry {\n\tentryType = \"resource\";\n\tserverTiming = [];\n\tconnectEnd = 0;\n\tconnectStart = 0;\n\tdecodedBodySize = 0;\n\tdomainLookupEnd = 0;\n\tdomainLookupStart = 0;\n\tencodedBodySize = 0;\n\tfetchStart = 0;\n\tinitiatorType = \"\";\n\tname = \"\";\n\tnextHopProtocol = \"\";\n\tredirectEnd = 0;\n\tredirectStart = 0;\n\trequestStart = 0;\n\tresponseEnd = 0;\n\tresponseStart = 0;\n\tsecureConnectionStart = 0;\n\tstartTime = 0;\n\ttransferSize = 0;\n\tworkerStart = 0;\n\tresponseStatus = 0;\n}\n// PerformanceObserverEntryList\nexport class PerformanceObserverEntryList {\n\t__unenv__ = true;\n\tgetEntries() {\n\t\treturn [];\n\t}\n\tgetEntriesByName(_name, _type) {\n\t\treturn [];\n\t}\n\tgetEntriesByType(type) {\n\t\treturn [];\n\t}\n}\n// Performance\nexport class Performance {\n\t__unenv__ = true;\n\ttimeOrigin = _timeOrigin;\n\teventCounts = new Map();\n\t_entries = [];\n\t_resourceTimingBufferSize = 0;\n\tnavigation = undefined;\n\ttiming = undefined;\n\ttimerify(_fn, _options) {\n\t\tthrow createNotImplementedError(\"Performance.timerify\");\n\t}\n\tget nodeTiming() {\n\t\treturn nodeTiming;\n\t}\n\teventLoopUtilization() {\n\t\treturn {};\n\t}\n\tmarkResourceTiming() {\n\t\t// TODO: create a new PerformanceResourceTiming entry\n\t\t// so that performance.getEntries, getEntriesByName, and getEntriesByType return it\n\t\t// see: https://nodejs.org/api/perf_hooks.html#performancemarkresourcetimingtiminginfo-requestedurl-initiatortype-global-cachemode-bodyinfo-responsestatus-deliverytype\n\t\treturn new PerformanceResourceTiming(\"\");\n\t}\n\tonresourcetimingbufferfull = null;\n\tnow() {\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\n\t\tif (this.timeOrigin === _timeOrigin) {\n\t\t\treturn _performanceNow();\n\t\t}\n\t\treturn Date.now() - this.timeOrigin;\n\t}\n\tclearMarks(markName) {\n\t\tthis._entries = markName ? this._entries.filter((e) => e.name !== markName) : this._entries.filter((e) => e.entryType !== \"mark\");\n\t}\n\tclearMeasures(measureName) {\n\t\tthis._entries = measureName ? this._entries.filter((e) => e.name !== measureName) : this._entries.filter((e) => e.entryType !== \"measure\");\n\t}\n\tclearResourceTimings() {\n\t\tthis._entries = this._entries.filter((e) => e.entryType !== \"resource\" || e.entryType !== \"navigation\");\n\t}\n\tgetEntries() {\n\t\treturn this._entries;\n\t}\n\tgetEntriesByName(name, type) {\n\t\treturn this._entries.filter((e) => e.name === name && (!type || e.entryType === type));\n\t}\n\tgetEntriesByType(type) {\n\t\treturn this._entries.filter((e) => e.entryType === type);\n\t}\n\tmark(name, options) {\n\t\t// @ts-expect-error constructor is not protected\n\t\tconst entry = new PerformanceMark(name, options);\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tmeasure(measureName, startOrMeasureOptions, endMark) {\n\t\tlet start;\n\t\tlet end;\n\t\tif (typeof startOrMeasureOptions === \"string\") {\n\t\t\tstart = this.getEntriesByName(startOrMeasureOptions, \"mark\")[0]?.startTime;\n\t\t\tend = this.getEntriesByName(endMark, \"mark\")[0]?.startTime;\n\t\t} else {\n\t\t\tstart = Number.parseFloat(startOrMeasureOptions?.start) || this.now();\n\t\t\tend = Number.parseFloat(startOrMeasureOptions?.end) || this.now();\n\t\t}\n\t\tconst entry = new PerformanceMeasure(measureName, {\n\t\t\tstartTime: start,\n\t\t\tdetail: {\n\t\t\t\tstart,\n\t\t\t\tend\n\t\t\t}\n\t\t});\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tsetResourceTimingBufferSize(maxSize) {\n\t\tthis._resourceTimingBufferSize = maxSize;\n\t}\n\taddEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.addEventListener\");\n\t}\n\tremoveEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.removeEventListener\");\n\t}\n\tdispatchEvent(event) {\n\t\tthrow createNotImplementedError(\"Performance.dispatchEvent\");\n\t}\n\ttoJSON() {\n\t\treturn this;\n\t}\n}\n// PerformanceObserver\nexport class PerformanceObserver {\n\t__unenv__ = true;\n\tstatic supportedEntryTypes = [];\n\t_callback = null;\n\tconstructor(callback) {\n\t\tthis._callback = callback;\n\t}\n\ttakeRecords() {\n\t\treturn [];\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.disconnect\");\n\t}\n\tobserve(options) {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.observe\");\n\t}\n\tbind(fn) {\n\t\treturn fn;\n\t}\n\trunInAsyncScope(fn, thisArg, ...args) {\n\t\treturn fn.call(thisArg, ...args);\n\t}\n\tasyncId() {\n\t\treturn 0;\n\t}\n\ttriggerAsyncId() {\n\t\treturn 0;\n\t}\n\temitDestroy() {\n\t\treturn this;\n\t}\n}\n// workerd implements a subset of globalThis.performance (as of last check, only timeOrigin set to 0 + now() implemented)\n// We already use performance.now() from globalThis.performance, if provided (see top of this file)\n// If we detect this condition, we can just use polyfill instead.\nexport const performance = globalThis.performance && \"addEventListener\" in globalThis.performance ? globalThis.performance : new Performance();\n", "import { IntervalHistogram, RecordableHistogram } from \"./internal/perf_hooks/histogram.mjs\";\nimport { performance, Performance, PerformanceEntry, PerformanceMark, PerformanceMeasure, PerformanceObserverEntryList, PerformanceObserver, PerformanceResourceTiming } from \"./internal/perf_hooks/performance.mjs\";\nexport * from \"./internal/perf_hooks/performance.mjs\";\n// prettier-ignore\nimport { NODE_PERFORMANCE_GC_MAJOR, NODE_PERFORMANCE_GC_MINOR, NODE_PERFORMANCE_GC_INCREMENTAL, NODE_PERFORMANCE_GC_WEAKCB, NODE_PERFORMANCE_GC_FLAGS_NO, NODE_PERFORMANCE_GC_FLAGS_CONSTRUCT_RETAINED, NODE_PERFORMANCE_GC_FLAGS_FORCED, NODE_PERFORMANCE_GC_FLAGS_SYNCHRONOUS_PHANTOM_PROCESSING, NODE_PERFORMANCE_GC_FLAGS_ALL_AVAILABLE_GARBAGE, NODE_PERFORMANCE_GC_FLAGS_ALL_EXTERNAL_MEMORY, NODE_PERFORMANCE_GC_FLAGS_SCHEDULE_IDLE, NODE_PERFORMANCE_ENTRY_TYPE_GC, NODE_PERFORMANCE_ENTRY_TYPE_HTTP, NODE_PERFORMANCE_ENTRY_TYPE_HTTP2, NODE_PERFORMANCE_ENTRY_TYPE_NET, NODE_PERFORMANCE_ENTRY_TYPE_DNS, NODE_PERFORMANCE_MILESTONE_TIME_ORIGIN_TIMESTAMP, NODE_PERFORMANCE_MILESTONE_TIME_ORIGIN, NODE_PERFORMANCE_MILESTONE_ENVIRONMENT, NODE_PERFORMANCE_MILESTONE_NODE_START, NODE_PERFORMANCE_MILESTONE_V8_START, NODE_PERFORMANCE_MILESTONE_LOOP_START, NODE_PERFORMANCE_MILESTONE_LOOP_EXIT, NODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE } from \"./internal/perf_hooks/constants.mjs\";\n// prettier-ignore\nexport const constants = {\n\tNODE_PERFORMANCE_GC_MAJOR,\n\tNODE_PERFORMANCE_GC_MINOR,\n\tNODE_PERFORMANCE_GC_INCREMENTAL,\n\tNODE_PERFORMANCE_GC_WEAKCB,\n\tNODE_PERFORMANCE_GC_FLAGS_NO,\n\tNODE_PERFORMANCE_GC_FLAGS_CONSTRUCT_RETAINED,\n\tNODE_PERFORMANCE_GC_FLAGS_FORCED,\n\tNODE_PERFORMANCE_GC_FLAGS_SYNCHRONOUS_PHANTOM_PROCESSING,\n\tNODE_PERFORMANCE_GC_FLAGS_ALL_AVAILABLE_GARBAGE,\n\tNODE_PERFORMANCE_GC_FLAGS_ALL_EXTERNAL_MEMORY,\n\tNODE_PERFORMANCE_GC_FLAGS_SCHEDULE_IDLE,\n\tNODE_PERFORMANCE_ENTRY_TYPE_GC,\n\tNODE_PERFORMANCE_ENTRY_TYPE_HTTP,\n\tNODE_PERFORMANCE_ENTRY_TYPE_HTTP2,\n\tNODE_PERFORMANCE_ENTRY_TYPE_NET,\n\tNODE_PERFORMANCE_ENTRY_TYPE_DNS,\n\tNODE_PERFORMANCE_MILESTONE_TIME_ORIGIN_TIMESTAMP,\n\tNODE_PERFORMANCE_MILESTONE_TIME_ORIGIN,\n\tNODE_PERFORMANCE_MILESTONE_ENVIRONMENT,\n\tNODE_PERFORMANCE_MILESTONE_NODE_START,\n\tNODE_PERFORMANCE_MILESTONE_V8_START,\n\tNODE_PERFORMANCE_MILESTONE_LOOP_START,\n\tNODE_PERFORMANCE_MILESTONE_LOOP_EXIT,\n\tNODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE\n};\nexport const monitorEventLoopDelay = function(_options) {\n\treturn new IntervalHistogram();\n};\nexport const createHistogram = function(_options) {\n\treturn new RecordableHistogram();\n};\nexport default {\n\tPerformance,\n\tPerformanceMark,\n\tPerformanceEntry,\n\tPerformanceMeasure,\n\tPerformanceObserverEntryList,\n\tPerformanceObserver,\n\tPerformanceResourceTiming,\n\tperformance,\n\tconstants,\n\tcreateHistogram,\n\tmonitorEventLoopDelay\n};\n", "import {\n  performance,\n  Performance,\n  PerformanceEntry,\n  PerformanceMark,\n  PerformanceMeasure,\n  PerformanceObserver,\n  PerformanceObserverEntryList,\n  PerformanceResourceTiming\n} from \"node:perf_hooks\";\nglobalThis.performance = performance;\nglobalThis.Performance = Performance;\nglobalThis.PerformanceEntry = PerformanceEntry;\nglobalThis.PerformanceMark = PerformanceMark;\nglobalThis.PerformanceMeasure = PerformanceMeasure;\nglobalThis.PerformanceObserver = PerformanceObserver;\nglobalThis.PerformanceObserverEntryList = PerformanceObserverEntryList;\nglobalThis.PerformanceResourceTiming = PerformanceResourceTiming;\n", "export default Object.assign(() => {}, { __unenv__: true });\n", "import { Writable } from \"node:stream\";\nimport noop from \"../mock/noop.mjs\";\nimport { notImplemented, notImplementedClass } from \"../_internal/utils.mjs\";\nconst _console = globalThis.console;\n// undocumented public APIs\nexport const _ignoreErrors = true;\nexport const _stderr = new Writable();\nexport const _stdout = new Writable();\nexport const log = _console?.log ?? noop;\nexport const info = _console?.info ?? log;\nexport const trace = _console?.trace ?? info;\nexport const debug = _console?.debug ?? log;\nexport const table = _console?.table ?? log;\nexport const error = _console?.error ?? log;\nexport const warn = _console?.warn ?? error;\n// https://developer.chrome.com/docs/devtools/console/api#createtask\nexport const createTask = _console?.createTask ?? /* @__PURE__ */ notImplemented(\"console.createTask\");\nexport const assert = /* @__PURE__ */ notImplemented(\"console.assert\");\n// noop\nexport const clear = _console?.clear ?? noop;\nexport const count = _console?.count ?? noop;\nexport const countReset = _console?.countReset ?? noop;\nexport const dir = _console?.dir ?? noop;\nexport const dirxml = _console?.dirxml ?? noop;\nexport const group = _console?.group ?? noop;\nexport const groupEnd = _console?.groupEnd ?? noop;\nexport const groupCollapsed = _console?.groupCollapsed ?? noop;\nexport const profile = _console?.profile ?? noop;\nexport const profileEnd = _console?.profileEnd ?? noop;\nexport const time = _console?.time ?? noop;\nexport const timeEnd = _console?.timeEnd ?? noop;\nexport const timeLog = _console?.timeLog ?? noop;\nexport const timeStamp = _console?.timeStamp ?? noop;\nexport const Console = _console?.Console ?? /* @__PURE__ */ notImplementedClass(\"console.Console\");\nexport const _times = /* @__PURE__ */ new Map();\nexport function context() {\n\t// TODO: Should be Console with all the methods\n\treturn _console;\n}\nexport const _stdoutErrorHandler = noop;\nexport const _stderrErrorHandler = noop;\nexport default {\n\t_times,\n\t_ignoreErrors,\n\t_stdoutErrorHandler,\n\t_stderrErrorHandler,\n\t_stdout,\n\t_stderr,\n\tassert,\n\tclear,\n\tConsole,\n\tcount,\n\tcountReset,\n\tdebug,\n\tdir,\n\tdirxml,\n\terror,\n\tcontext,\n\tcreateTask,\n\tgroup,\n\tgroupEnd,\n\tgroupCollapsed,\n\tinfo,\n\tlog,\n\tprofile,\n\tprofileEnd,\n\ttable,\n\ttime,\n\ttimeEnd,\n\ttimeLog,\n\ttimeStamp,\n\ttrace,\n\twarn\n};\n", "import {\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times,\n  Console\n} from \"unenv/node/console\";\nexport {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n} from \"unenv/node/console\";\nconst workerdConsole = globalThis[\"console\"];\nexport const {\n  assert,\n  clear,\n  // @ts-expect-error undocumented public API\n  context,\n  count,\n  countReset,\n  // @ts-expect-error undocumented public API\n  createTask,\n  debug,\n  dir,\n  dirxml,\n  error,\n  group,\n  groupCollapsed,\n  groupEnd,\n  info,\n  log,\n  profile,\n  profileEnd,\n  table,\n  time,\n  timeEnd,\n  timeLog,\n  timeStamp,\n  trace,\n  warn\n} = workerdConsole;\nObject.assign(workerdConsole, {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n});\nexport default workerdConsole;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/console\";\nglobalThis.console = defaultExport;", "// https://nodejs.org/api/process.html#processhrtime\nexport const hrtime = /* @__PURE__ */ Object.assign(function hrtime(startTime) {\n\tconst now = Date.now();\n\t// millis to seconds\n\tconst seconds = Math.trunc(now / 1e3);\n\t// convert millis to nanos\n\tconst nanos = now % 1e3 * 1e6;\n\tif (startTime) {\n\t\tlet diffSeconds = seconds - startTime[0];\n\t\tlet diffNanos = nanos - startTime[0];\n\t\tif (diffNanos < 0) {\n\t\t\tdiffSeconds = diffSeconds - 1;\n\t\t\tdiffNanos = 1e9 + diffNanos;\n\t\t}\n\t\treturn [diffSeconds, diffNanos];\n\t}\n\treturn [seconds, nanos];\n}, { bigint: function bigint() {\n\t// Convert milliseconds to nanoseconds\n\treturn BigInt(Date.now() * 1e6);\n} });\n", "export class ReadStream {\n\tfd;\n\tisRaw = false;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tsetRawMode(mode) {\n\t\tthis.isRaw = mode;\n\t\treturn this;\n\t}\n}\n", "export class WriteStream {\n\tfd;\n\tcolumns = 80;\n\trows = 24;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tclearLine(dir, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tclearScreenDown(callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tcursorTo(x, y, callback) {\n\t\tcallback && typeof callback === \"function\" && callback();\n\t\treturn false;\n\t}\n\tmoveCursor(dx, dy, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tgetColorDepth(env) {\n\t\treturn 1;\n\t}\n\thasColors(count, env) {\n\t\treturn false;\n\t}\n\tgetWindowSize() {\n\t\treturn [this.columns, this.rows];\n\t}\n\twrite(str, encoding, cb) {\n\t\tif (str instanceof Uint8Array) {\n\t\t\tstr = new TextDecoder().decode(str);\n\t\t}\n\t\ttry {\n\t\t\tconsole.log(str);\n\t\t} catch {}\n\t\tcb && typeof cb === \"function\" && cb();\n\t\treturn false;\n\t}\n}\n", "import { ReadStream } from \"./internal/tty/read-stream.mjs\";\nimport { WriteStream } from \"./internal/tty/write-stream.mjs\";\nexport { ReadStream } from \"./internal/tty/read-stream.mjs\";\nexport { WriteStream } from \"./internal/tty/write-stream.mjs\";\nexport const isatty = function() {\n\treturn false;\n};\nexport default {\n\tReadStream,\n\tWriteStream,\n\tisatty\n};\n", "// Extracted from .nvmrc\nexport const NODE_VERSION = \"22.14.0\";\n", "import { EventEmitter } from \"node:events\";\nimport { ReadStream, WriteStream } from \"node:tty\";\nimport { notImplemented, createNotImplementedError } from \"../../../_internal/utils.mjs\";\n// node-version.ts is generated at build time\nimport { NODE_VERSION } from \"./node-version.mjs\";\nexport class Process extends EventEmitter {\n\tenv;\n\thrtime;\n\tnextTick;\n\tconstructor(impl) {\n\t\tsuper();\n\t\tthis.env = impl.env;\n\t\tthis.hrtime = impl.hrtime;\n\t\tthis.nextTick = impl.nextTick;\n\t\tfor (const prop of [...Object.getOwnPropertyNames(Process.prototype), ...Object.getOwnPropertyNames(EventEmitter.prototype)]) {\n\t\t\tconst value = this[prop];\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\tthis[prop] = value.bind(this);\n\t\t\t}\n\t\t}\n\t}\n\t// --- event emitter ---\n\temitWarning(warning, type, code) {\n\t\tconsole.warn(`${code ? `[${code}] ` : \"\"}${type ? `${type}: ` : \"\"}${warning}`);\n\t}\n\temit(...args) {\n\t\t// @ts-ignore\n\t\treturn super.emit(...args);\n\t}\n\tlisteners(eventName) {\n\t\treturn super.listeners(eventName);\n\t}\n\t// --- stdio (lazy initializers) ---\n\t#stdin;\n\t#stdout;\n\t#stderr;\n\tget stdin() {\n\t\treturn this.#stdin ??= new ReadStream(0);\n\t}\n\tget stdout() {\n\t\treturn this.#stdout ??= new WriteStream(1);\n\t}\n\tget stderr() {\n\t\treturn this.#stderr ??= new WriteStream(2);\n\t}\n\t// --- cwd ---\n\t#cwd = \"/\";\n\tchdir(cwd) {\n\t\tthis.#cwd = cwd;\n\t}\n\tcwd() {\n\t\treturn this.#cwd;\n\t}\n\t// --- dummy props and getters ---\n\tarch = \"\";\n\tplatform = \"\";\n\targv = [];\n\targv0 = \"\";\n\texecArgv = [];\n\texecPath = \"\";\n\ttitle = \"\";\n\tpid = 200;\n\tppid = 100;\n\tget version() {\n\t\treturn `v${NODE_VERSION}`;\n\t}\n\tget versions() {\n\t\treturn { node: NODE_VERSION };\n\t}\n\tget allowedNodeEnvironmentFlags() {\n\t\treturn new Set();\n\t}\n\tget sourceMapsEnabled() {\n\t\treturn false;\n\t}\n\tget debugPort() {\n\t\treturn 0;\n\t}\n\tget throwDeprecation() {\n\t\treturn false;\n\t}\n\tget traceDeprecation() {\n\t\treturn false;\n\t}\n\tget features() {\n\t\treturn {};\n\t}\n\tget release() {\n\t\treturn {};\n\t}\n\tget connected() {\n\t\treturn false;\n\t}\n\tget config() {\n\t\treturn {};\n\t}\n\tget moduleLoadList() {\n\t\treturn [];\n\t}\n\tconstrainedMemory() {\n\t\treturn 0;\n\t}\n\tavailableMemory() {\n\t\treturn 0;\n\t}\n\tuptime() {\n\t\treturn 0;\n\t}\n\tresourceUsage() {\n\t\treturn {};\n\t}\n\t// --- noop methods ---\n\tref() {\n\t\t// noop\n\t}\n\tunref() {\n\t\t// noop\n\t}\n\t// --- unimplemented methods ---\n\tumask() {\n\t\tthrow createNotImplementedError(\"process.umask\");\n\t}\n\tgetBuiltinModule() {\n\t\treturn undefined;\n\t}\n\tgetActiveResourcesInfo() {\n\t\tthrow createNotImplementedError(\"process.getActiveResourcesInfo\");\n\t}\n\texit() {\n\t\tthrow createNotImplementedError(\"process.exit\");\n\t}\n\treallyExit() {\n\t\tthrow createNotImplementedError(\"process.reallyExit\");\n\t}\n\tkill() {\n\t\tthrow createNotImplementedError(\"process.kill\");\n\t}\n\tabort() {\n\t\tthrow createNotImplementedError(\"process.abort\");\n\t}\n\tdlopen() {\n\t\tthrow createNotImplementedError(\"process.dlopen\");\n\t}\n\tsetSourceMapsEnabled() {\n\t\tthrow createNotImplementedError(\"process.setSourceMapsEnabled\");\n\t}\n\tloadEnvFile() {\n\t\tthrow createNotImplementedError(\"process.loadEnvFile\");\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"process.disconnect\");\n\t}\n\tcpuUsage() {\n\t\tthrow createNotImplementedError(\"process.cpuUsage\");\n\t}\n\tsetUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.setUncaughtExceptionCaptureCallback\");\n\t}\n\thasUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.hasUncaughtExceptionCaptureCallback\");\n\t}\n\tinitgroups() {\n\t\tthrow createNotImplementedError(\"process.initgroups\");\n\t}\n\topenStdin() {\n\t\tthrow createNotImplementedError(\"process.openStdin\");\n\t}\n\tassert() {\n\t\tthrow createNotImplementedError(\"process.assert\");\n\t}\n\tbinding() {\n\t\tthrow createNotImplementedError(\"process.binding\");\n\t}\n\t// --- attached interfaces ---\n\tpermission = { has: /* @__PURE__ */ notImplemented(\"process.permission.has\") };\n\treport = {\n\t\tdirectory: \"\",\n\t\tfilename: \"\",\n\t\tsignal: \"SIGUSR2\",\n\t\tcompact: false,\n\t\treportOnFatalError: false,\n\t\treportOnSignal: false,\n\t\treportOnUncaughtException: false,\n\t\tgetReport: /* @__PURE__ */ notImplemented(\"process.report.getReport\"),\n\t\twriteReport: /* @__PURE__ */ notImplemented(\"process.report.writeReport\")\n\t};\n\tfinalization = {\n\t\tregister: /* @__PURE__ */ notImplemented(\"process.finalization.register\"),\n\t\tunregister: /* @__PURE__ */ notImplemented(\"process.finalization.unregister\"),\n\t\tregisterBeforeExit: /* @__PURE__ */ notImplemented(\"process.finalization.registerBeforeExit\")\n\t};\n\tmemoryUsage = Object.assign(() => ({\n\t\tarrayBuffers: 0,\n\t\trss: 0,\n\t\texternal: 0,\n\t\theapTotal: 0,\n\t\theapUsed: 0\n\t}), { rss: () => 0 });\n\t// --- undefined props ---\n\tmainModule = undefined;\n\tdomain = undefined;\n\t// optional\n\tsend = undefined;\n\texitCode = undefined;\n\tchannel = undefined;\n\tgetegid = undefined;\n\tgeteuid = undefined;\n\tgetgid = undefined;\n\tgetgroups = undefined;\n\tgetuid = undefined;\n\tsetegid = undefined;\n\tseteuid = undefined;\n\tsetgid = undefined;\n\tsetgroups = undefined;\n\tsetuid = undefined;\n\t// internals\n\t_events = undefined;\n\t_eventsCount = undefined;\n\t_exiting = undefined;\n\t_maxListeners = undefined;\n\t_debugEnd = undefined;\n\t_debugProcess = undefined;\n\t_fatalException = undefined;\n\t_getActiveHandles = undefined;\n\t_getActiveRequests = undefined;\n\t_kill = undefined;\n\t_preload_modules = undefined;\n\t_rawDebug = undefined;\n\t_startProfilerIdleNotifier = undefined;\n\t_stopProfilerIdleNotifier = undefined;\n\t_tickCallback = undefined;\n\t_disconnect = undefined;\n\t_handleQueue = undefined;\n\t_pendingMessage = undefined;\n\t_channel = undefined;\n\t_send = undefined;\n\t_linkedBinding = undefined;\n}\n", "import { hrtime as UnenvHrTime } from \"unenv/node/internal/process/hrtime\";\nimport { Process as UnenvProcess } from \"unenv/node/internal/process/process\";\nconst globalProcess = globalThis[\"process\"];\nexport const getBuiltinModule = globalProcess.getBuiltinModule;\nconst workerdProcess = getBuiltinModule(\"node:process\");\nconst isWorkerdProcessV2 = globalThis.Cloudflare.compatibilityFlags.enable_nodejs_process_v2;\nconst unenvProcess = new UnenvProcess({\n  env: globalProcess.env,\n  // `hrtime` is only available from workerd process v2\n  hrtime: isWorkerdProcessV2 ? workerdProcess.hrtime : UnenvHrTime,\n  // `nextTick` is available from workerd process v1\n  nextTick: workerdProcess.nextTick\n});\nexport const { exit, features, platform } = workerdProcess;\nexport const {\n  // Always implemented by workerd\n  env,\n  // Only implemented in workerd v2\n  hrtime,\n  // Always implemented by workerd\n  nextTick\n} = unenvProcess;\nexport const {\n  _channel,\n  _disconnect,\n  _events,\n  _eventsCount,\n  _handleQueue,\n  _maxListeners,\n  _pendingMessage,\n  _send,\n  assert,\n  disconnect,\n  mainModule\n} = unenvProcess;\nexport const {\n  // @ts-expect-error `_debugEnd` is missing typings\n  _debugEnd,\n  // @ts-expect-error `_debugProcess` is missing typings\n  _debugProcess,\n  // @ts-expect-error `_exiting` is missing typings\n  _exiting,\n  // @ts-expect-error `_fatalException` is missing typings\n  _fatalException,\n  // @ts-expect-error `_getActiveHandles` is missing typings\n  _getActiveHandles,\n  // @ts-expect-error `_getActiveRequests` is missing typings\n  _getActiveRequests,\n  // @ts-expect-error `_kill` is missing typings\n  _kill,\n  // @ts-expect-error `_linkedBinding` is missing typings\n  _linkedBinding,\n  // @ts-expect-error `_preload_modules` is missing typings\n  _preload_modules,\n  // @ts-expect-error `_rawDebug` is missing typings\n  _rawDebug,\n  // @ts-expect-error `_startProfilerIdleNotifier` is missing typings\n  _startProfilerIdleNotifier,\n  // @ts-expect-error `_stopProfilerIdleNotifier` is missing typings\n  _stopProfilerIdleNotifier,\n  // @ts-expect-error `_tickCallback` is missing typings\n  _tickCallback,\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  arch,\n  argv,\n  argv0,\n  availableMemory,\n  // @ts-expect-error `binding` is missing typings\n  binding,\n  channel,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  // @ts-expect-error `domain` is missing typings\n  domain,\n  emit,\n  emitWarning,\n  eventNames,\n  execArgv,\n  execPath,\n  exitCode,\n  finalization,\n  getActiveResourcesInfo,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getMaxListeners,\n  getuid,\n  hasUncaughtExceptionCaptureCallback,\n  // @ts-expect-error `initgroups` is missing typings\n  initgroups,\n  kill,\n  listenerCount,\n  listeners,\n  loadEnvFile,\n  memoryUsage,\n  // @ts-expect-error `moduleLoadList` is missing typings\n  moduleLoadList,\n  off,\n  on,\n  once,\n  // @ts-expect-error `openStdin` is missing typings\n  openStdin,\n  permission,\n  pid,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  // @ts-expect-error `reallyExit` is missing typings\n  reallyExit,\n  ref,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  send,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  setuid,\n  setUncaughtExceptionCaptureCallback,\n  sourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  throwDeprecation,\n  title,\n  traceDeprecation,\n  umask,\n  unref,\n  uptime,\n  version,\n  versions\n} = isWorkerdProcessV2 ? workerdProcess : unenvProcess;\nconst _process = {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  exit,\n  finalization,\n  features,\n  getBuiltinModule,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  nextTick,\n  on,\n  off,\n  once,\n  pid,\n  platform,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  // @ts-expect-error old API\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n};\nexport default _process;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/process\";\nglobalThis.process = defaultExport;", "export var util;\n(function (util) {\n    util.assertEqual = (_) => { };\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && Number.isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array.map((val) => (typeof val === \"string\" ? `'${val}'` : val)).join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nexport var objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nexport const ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nexport const getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return Number.isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n", "import { util } from \"./helpers/util.js\";\nexport const ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nexport const quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexport class ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                const firstEl = sub.path[0];\n                fieldErrors[firstEl] = fieldErrors[firstEl] || [];\n                fieldErrors[firstEl].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n", "import { ZodIssueCode } from \"../ZodError.js\";\nimport { util, ZodParsedType } from \"../helpers/util.js\";\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"bigint\")\n                message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly` : issue.inclusive ? `smaller than or equal to` : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\nexport default errorMap;\n", "import defaultErrorMap from \"./locales/en.js\";\nlet overrideErrorMap = defaultErrorMap;\nexport { defaultErrorMap };\nexport function setErrorMap(map) {\n    overrideErrorMap = map;\n}\nexport function getErrorMap() {\n    return overrideErrorMap;\n}\n", "import { getErrorMap } from \"../errors.js\";\nimport defaultErrorMap from \"../locales/en.js\";\nexport const makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nexport const EMPTY_PATH = [];\nexport function addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === defaultErrorMap ? undefined : defaultErrorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nexport class ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" && (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nexport const INVALID = Object.freeze({\n    status: \"aborted\",\n});\nexport const DIRTY = (value) => ({ status: \"dirty\", value });\nexport const OK = (value) => ({ status: \"valid\", value });\nexport const isAborted = (x) => x.status === \"aborted\";\nexport const isDirty = (x) => x.status === \"dirty\";\nexport const isValid = (x) => x.status === \"valid\";\nexport const isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n", "export {};\n", "export var errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    // biome-ignore lint:\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message?.message;\n})(errorUtil || (errorUtil = {}));\n", "import { ZodError, ZodIssueCode, } from \"./ZodError.js\";\nimport { defaultErrorMap, getErrorMap } from \"./errors.js\";\nimport { errorUtil } from \"./helpers/errorUtil.js\";\nimport { DIRTY, INVALID, OK, ParseStatus, addIssueToContext, isAborted, isAsync, isDirty, isValid, makeIssue, } from \"./helpers/parseUtil.js\";\nimport { util, ZodParsedType, getParsedType } from \"./helpers/util.js\";\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (Array.isArray(this._key)) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message ?? ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: message ?? required_error ?? ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: message ?? invalid_type_error ?? ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nexport class ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: params?.async ?? false,\n                contextualErrorMap: params?.errorMap,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if (err?.message?.toLowerCase()?.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params?.errorMap,\n                async: true,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\" ? refinementData(val, ctx) : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&\u2019*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    let secondsRegexSource = `[0-5]\\\\d`;\n    if (args.precision) {\n        secondsRegexSource = `${secondsRegexSource}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        secondsRegexSource = `${secondsRegexSource}(\\\\.\\\\d+)?`;\n    }\n    const secondsQuantifier = args.precision ? \"+\" : \"?\"; // require seconds if precision is nonzero\n    return `([01]\\\\d|2[0-3]):[0-5]\\\\d(:${secondsRegexSource})${secondsQuantifier}`;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nexport function datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        if (!header)\n            return false;\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (\"typ\" in decoded && decoded?.typ !== \"JWT\")\n            return false;\n        if (!decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nexport class ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            offset: options?.offset ?? false,\n            local: options?.local ?? false,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options?.position,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = Number.parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = Number.parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / 10 ** decCount;\n}\nexport class ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" || (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null;\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" || ch.kind === \"int\" || ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (Number.isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: params?.coerce || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nexport class ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        this._cached = { shape, keys };\n        return this._cached;\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") {\n            }\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        const defaultError = this._def.errorMap?.(issue, ctx).message ?? ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: errorUtil.errToObj(message).message ?? defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(mask)) {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nexport class ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util.objectKeys(a).filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date && bType === ZodParsedType.date && +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nexport class ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\n// type ZodTupleItems = [ZodTypeAny, ...ZodTypeAny[]];\nexport class ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nexport class ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args.parseAsync(args, params).catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args ? args : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nexport class ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nexport class ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(this._def.values);\n        }\n        if (!this._cache.has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\nZodEnum.create = createZodEnum;\nexport class ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string && ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(util.getValidEnumValues(this._def.values));\n        }\n        if (!this._cache.has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise && ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return INVALID;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((base) => {\n                    if (!isValid(base))\n                        return INVALID;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({\n                        status: status.value,\n                        value: result,\n                    }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nexport { ZodEffects as ZodTransformer };\nexport class ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\" ? params.default : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nexport const BRAND = Symbol(\"zod_brand\");\nexport class ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nexport class ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nexport class ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result) ? result.then((data) => freeze(data)) : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\n////////////////////////////////////////\n////////////////////////////////////////\n//////////                    //////////\n//////////      z.custom      //////////\n//////////                    //////////\n////////////////////////////////////////\n////////////////////////////////////////\nfunction cleanParams(params, data) {\n    const p = typeof params === \"function\" ? params(data) : typeof params === \"string\" ? { message: params } : params;\n    const p2 = typeof p === \"string\" ? { message: p } : p;\n    return p2;\n}\nexport function custom(check, _params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            const r = check(data);\n            if (r instanceof Promise) {\n                return r.then((r) => {\n                    if (!r) {\n                        const params = cleanParams(_params, data);\n                        const _fatal = params.fatal ?? fatal ?? true;\n                        ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n                    }\n                });\n            }\n            if (!r) {\n                const params = cleanParams(_params, data);\n                const _fatal = params.fatal ?? fatal ?? true;\n                ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n            return;\n        });\n    return ZodAny.create();\n}\nexport { ZodType as Schema, ZodType as ZodSchema };\nexport const late = {\n    object: ZodObject.lazycreate,\n};\nexport var ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\n// requires TS 4.4+\nclass Class {\n    constructor(..._) { }\n}\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nexport const coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nexport { anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, dateType as date, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, instanceOfType as instanceof, intersectionType as intersection, lazyType as lazy, literalType as literal, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, recordType as record, setType as set, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, voidType as void, };\nexport const NEVER = INVALID;\n", "export * from \"./errors.js\";\nexport * from \"./helpers/parseUtil.js\";\nexport * from \"./helpers/typeAliases.js\";\nexport * from \"./helpers/util.js\";\nexport * from \"./types.js\";\nexport * from \"./ZodError.js\";\n", "import * as z from \"./v3/external.js\";\nexport * from \"./v3/external.js\";\nexport { z };\nexport default z;\n", "// src/services/promoCodes.ts\r\n\r\nimport type { Env } from \"../types\";\r\n\r\n/**\r\n * Promo code types\r\n */\r\nexport type PromoCodeType =\r\n  | \"percentage_discount\"  // X% off subscription\r\n  | \"months_free\"          // X months free\r\n  | \"plan_upgrade\"         // Upgrade to specific plan for free/discounted\r\n  | \"referral_reward\";     // Reward for referring someone\r\n\r\n/**\r\n * Promo code interface\r\n */\r\nexport interface PromoCode {\r\n  code: string;\r\n  type: PromoCodeType;\r\n  value: string | number;  // Depends on type: percentage (50), months (3), plan (\"enterprise\")\r\n  durationMonths?: number;  // How long discount lasts (null = forever)\r\n  maxUses?: number;         // Max times it can be used (null = unlimited)\r\n  usedCount: number;        // Times it's been used\r\n  active: boolean;\r\n  expiresAt?: string;       // ISO date string (null = never expires)\r\n  createdAt: string;\r\n  createdBy: string;\r\n  metadata?: {\r\n    description?: string;\r\n    referredBy?: string;    // For referral codes\r\n    targetTenant?: string;  // For tenant-specific codes (e.g., \"SYSTON-PRO\")\r\n  };\r\n}\r\n\r\n/**\r\n * Promo code redemption record\r\n */\r\nexport interface PromoRedemption {\r\n  code: string;\r\n  tenantId: string;\r\n  redeemedAt: string;\r\n  appliedDiscount: {\r\n    type: PromoCodeType;\r\n    value: string | number;\r\n    durationMonths?: number;\r\n  };\r\n}\r\n\r\n/**\r\n * Promo code service\r\n */\r\nexport class PromoCodeService {\r\n  private env: Env;\r\n\r\n  constructor(env: Env) {\r\n    this.env = env;\r\n  }\r\n\r\n  /**\r\n   * Create a new promo code\r\n   */\r\n  async createPromoCode(promoCode: Omit<PromoCode, 'usedCount' | 'createdAt'>): Promise<{ success: boolean; code?: PromoCode; error?: string }> {\r\n    try {\r\n      // Validate code format (uppercase, alphanumeric, hyphens)\r\n      const cleanCode = promoCode.code.toUpperCase().replace(/[^A-Z0-9-]/g, '');\r\n\r\n      if (cleanCode !== promoCode.code.toUpperCase()) {\r\n        return {\r\n          success: false,\r\n          error: 'Invalid code format. Use uppercase letters, numbers, and hyphens only.'\r\n        };\r\n      }\r\n\r\n      // Check if code already exists\r\n      const existing = await this.getPromoCode(cleanCode);\r\n      if (existing) {\r\n        return {\r\n          success: false,\r\n          error: `Promo code '${cleanCode}' already exists`\r\n        };\r\n      }\r\n\r\n      // Create complete promo code object\r\n      const fullPromoCode: PromoCode = {\r\n        ...promoCode,\r\n        code: cleanCode,\r\n        usedCount: 0,\r\n        createdAt: new Date().toISOString()\r\n      };\r\n\r\n      // Store in KV\r\n      await this.env.KV_IDEMP.put(\r\n        `promo:${cleanCode}`,\r\n        JSON.stringify(fullPromoCode)\r\n      );\r\n\r\n      console.log(`[PromoCode] Created: ${cleanCode}`, fullPromoCode);\r\n\r\n      return {\r\n        success: true,\r\n        code: fullPromoCode\r\n      };\r\n\r\n    } catch (error: any) {\r\n      console.error('[PromoCode] Creation failed:', error);\r\n      return {\r\n        success: false,\r\n        error: error.message || 'Failed to create promo code'\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get promo code by code\r\n   */\r\n  async getPromoCode(code: string): Promise<PromoCode | null> {\r\n    try {\r\n      const cleanCode = code.toUpperCase();\r\n      const data = await this.env.KV_IDEMP.get(`promo:${cleanCode}`);\r\n\r\n      if (!data) {\r\n        return null;\r\n      }\r\n\r\n      return JSON.parse(data) as PromoCode;\r\n    } catch (error) {\r\n      console.error('[PromoCode] Retrieval failed:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate promo code for tenant\r\n   */\r\n  async validatePromoCode(code: string, tenantId: string): Promise<{\r\n    valid: boolean;\r\n    promoCode?: PromoCode;\r\n    error?: string\r\n  }> {\r\n    try {\r\n      const promoCode = await this.getPromoCode(code);\r\n\r\n      if (!promoCode) {\r\n        return {\r\n          valid: false,\r\n          error: 'Invalid promo code'\r\n        };\r\n      }\r\n\r\n      // Check if active\r\n      if (!promoCode.active) {\r\n        return {\r\n          valid: false,\r\n          error: 'Promo code is no longer active'\r\n        };\r\n      }\r\n\r\n      // Check expiry\r\n      if (promoCode.expiresAt) {\r\n        const expiryDate = new Date(promoCode.expiresAt);\r\n        if (expiryDate < new Date()) {\r\n          return {\r\n            valid: false,\r\n            error: 'Promo code has expired'\r\n          };\r\n        }\r\n      }\r\n\r\n      // Check usage limits\r\n      if (promoCode.maxUses && promoCode.usedCount >= promoCode.maxUses) {\r\n        return {\r\n          valid: false,\r\n          error: 'Promo code has reached maximum uses'\r\n        };\r\n      }\r\n\r\n      // Check if already used by this tenant\r\n      const alreadyUsed = await this.hasUsedPromoCode(tenantId, code);\r\n      if (alreadyUsed) {\r\n        return {\r\n          valid: false,\r\n          error: 'You have already used this promo code'\r\n        };\r\n      }\r\n\r\n      // Check tenant-specific codes\r\n      if (promoCode.metadata?.targetTenant) {\r\n        if (promoCode.metadata.targetTenant !== tenantId) {\r\n          return {\r\n            valid: false,\r\n            error: 'This promo code is not valid for your account'\r\n          };\r\n        }\r\n      }\r\n\r\n      return {\r\n        valid: true,\r\n        promoCode\r\n      };\r\n\r\n    } catch (error: any) {\r\n      console.error('[PromoCode] Validation failed:', error);\r\n      return {\r\n        valid: false,\r\n        error: error.message || 'Validation failed'\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Apply promo code to tenant\r\n   */\r\n  async applyPromoCode(code: string, tenantId: string): Promise<{\r\n    success: boolean;\r\n    discount?: {\r\n      type: PromoCodeType;\r\n      value: string | number;\r\n      durationMonths?: number;\r\n      plan?: string;\r\n    };\r\n    error?: string;\r\n  }> {\r\n    try {\r\n      // Validate first\r\n      const validation = await this.validatePromoCode(code, tenantId);\r\n      if (!validation.valid || !validation.promoCode) {\r\n        return {\r\n          success: false,\r\n          error: validation.error\r\n        };\r\n      }\r\n\r\n      const promoCode = validation.promoCode;\r\n\r\n      // Record redemption\r\n      const redemption: PromoRedemption = {\r\n        code: promoCode.code,\r\n        tenantId,\r\n        redeemedAt: new Date().toISOString(),\r\n        appliedDiscount: {\r\n          type: promoCode.type,\r\n          value: promoCode.value,\r\n          durationMonths: promoCode.durationMonths\r\n        }\r\n      };\r\n\r\n      await this.env.KV_IDEMP.put(\r\n        `promo-redemption:${tenantId}:${promoCode.code}`,\r\n        JSON.stringify(redemption)\r\n      );\r\n\r\n      // Increment usage count\r\n      promoCode.usedCount++;\r\n      await this.env.KV_IDEMP.put(\r\n        `promo:${promoCode.code}`,\r\n        JSON.stringify(promoCode)\r\n      );\r\n\r\n      console.log(`[PromoCode] Applied: ${promoCode.code} to ${tenantId}`);\r\n\r\n      // Return discount details\r\n      const discount: any = {\r\n        type: promoCode.type,\r\n        value: promoCode.value,\r\n        durationMonths: promoCode.durationMonths\r\n      };\r\n\r\n      // For plan upgrades, specify the plan\r\n      if (promoCode.type === 'plan_upgrade') {\r\n        discount.plan = promoCode.value;\r\n      }\r\n\r\n      return {\r\n        success: true,\r\n        discount\r\n      };\r\n\r\n    } catch (error: any) {\r\n      console.error('[PromoCode] Application failed:', error);\r\n      return {\r\n        success: false,\r\n        error: error.message || 'Failed to apply promo code'\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if tenant has used a promo code\r\n   */\r\n  async hasUsedPromoCode(tenantId: string, code: string): Promise<boolean> {\r\n    try {\r\n      const cleanCode = code.toUpperCase();\r\n      const redemption = await this.env.KV_IDEMP.get(\r\n        `promo-redemption:${tenantId}:${cleanCode}`\r\n      );\r\n      return !!redemption;\r\n    } catch (error) {\r\n      console.error('[PromoCode] Usage check failed:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deactivate promo code\r\n   */\r\n  async deactivatePromoCode(code: string): Promise<{ success: boolean; error?: string }> {\r\n    try {\r\n      const promoCode = await this.getPromoCode(code);\r\n\r\n      if (!promoCode) {\r\n        return {\r\n          success: false,\r\n          error: 'Promo code not found'\r\n        };\r\n      }\r\n\r\n      promoCode.active = false;\r\n      await this.env.KV_IDEMP.put(\r\n        `promo:${promoCode.code}`,\r\n        JSON.stringify(promoCode)\r\n      );\r\n\r\n      console.log(`[PromoCode] Deactivated: ${promoCode.code}`);\r\n\r\n      return { success: true };\r\n\r\n    } catch (error: any) {\r\n      console.error('[PromoCode] Deactivation failed:', error);\r\n      return {\r\n        success: false,\r\n        error: error.message || 'Failed to deactivate promo code'\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * List all promo codes (admin)\r\n   */\r\n  async listPromoCodes(): Promise<PromoCode[]> {\r\n    try {\r\n      // Note: This requires KV list operation\r\n      // For production, consider storing a promo code index\r\n      const list = await this.env.KV_IDEMP.list({ prefix: 'promo:' });\r\n      const promoCodes: PromoCode[] = [];\r\n\r\n      for (const key of list.keys) {\r\n        const data = await this.env.KV_IDEMP.get(key.name);\r\n        if (data) {\r\n          promoCodes.push(JSON.parse(data));\r\n        }\r\n      }\r\n\r\n      return promoCodes.sort((a, b) =>\r\n        new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\r\n      );\r\n\r\n    } catch (error) {\r\n      console.error('[PromoCode] List failed:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create referral code for tenant\r\n   */\r\n  async createReferralCode(tenantId: string, rewardMonths: number = 3): Promise<{\r\n    success: boolean;\r\n    code?: string;\r\n    error?: string;\r\n  }> {\r\n    try {\r\n      // Generate unique referral code\r\n      const referralCode = `REFER-${tenantId.toUpperCase().substring(0, 8)}-${Date.now().toString(36).toUpperCase()}`;\r\n\r\n      const promoCode: Omit<PromoCode, 'usedCount' | 'createdAt'> = {\r\n        code: referralCode,\r\n        type: 'referral_reward',\r\n        value: rewardMonths,\r\n        durationMonths: rewardMonths,\r\n        maxUses: null,  // Unlimited uses\r\n        active: true,\r\n        expiresAt: undefined,\r\n        createdBy: tenantId,\r\n        metadata: {\r\n          description: `Referral reward: ${rewardMonths} months free`,\r\n          referredBy: tenantId\r\n        }\r\n      };\r\n\r\n      const result = await this.createPromoCode(promoCode);\r\n\r\n      if (result.success) {\r\n        return {\r\n          success: true,\r\n          code: referralCode\r\n        };\r\n      } else {\r\n        return {\r\n          success: false,\r\n          error: result.error\r\n        };\r\n      }\r\n\r\n    } catch (error: any) {\r\n      console.error('[PromoCode] Referral code creation failed:', error);\r\n      return {\r\n        success: false,\r\n        error: error.message || 'Failed to create referral code'\r\n      };\r\n    }\r\n  }\r\n}\r\n", "// src/services/googleAuth.ts\r\n\r\n/**\r\n * Google Service Account Authentication\r\n * Signs JWTs using RS256 for Google API authentication\r\n */\r\n\r\ninterface ServiceAccountKey {\r\n  type: string;\r\n  project_id: string;\r\n  private_key_id: string;\r\n  private_key: string;\r\n  client_email: string;\r\n  client_id: string;\r\n  auth_uri: string;\r\n  token_uri: string;\r\n  auth_provider_x509_cert_url: string;\r\n  client_x509_cert_url: string;\r\n}\r\n\r\ninterface JWTClaims {\r\n  iss: string;\r\n  scope: string;\r\n  aud: string;\r\n  exp: number;\r\n  iat: number;\r\n}\r\n\r\n/**\r\n * Google OAuth token response\r\n */\r\ninterface TokenResponse {\r\n  access_token: string;\r\n  expires_in: number;\r\n  token_type: string;\r\n}\r\n\r\n/**\r\n * Sign JWT using RS256 with service account private key\r\n */\r\nexport async function signJWT(claims: JWTClaims, privateKey: string): Promise<string> {\r\n  // Prepare header\r\n  const header = {\r\n    alg: \"RS256\",\r\n    typ: \"JWT\"\r\n  };\r\n\r\n  // Base64URL encode header and claims\r\n  const encodedHeader = base64UrlEncode(JSON.stringify(header));\r\n  const encodedClaims = base64UrlEncode(JSON.stringify(claims));\r\n  const signingInput = `${encodedHeader}.${encodedClaims}`;\r\n\r\n  // Import private key for signing\r\n  const cryptoKey = await importPrivateKey(privateKey);\r\n\r\n  // Sign the JWT\r\n  const encoder = new TextEncoder();\r\n  const data = encoder.encode(signingInput);\r\n  const signature = await crypto.subtle.sign(\r\n    {\r\n      name: \"RSASSA-PKCS1-v1_5\",\r\n      hash: \"SHA-256\"\r\n    },\r\n    cryptoKey,\r\n    data\r\n  );\r\n\r\n  // Encode signature\r\n  const encodedSignature = base64UrlEncode(signature);\r\n\r\n  // Return complete JWT\r\n  return `${signingInput}.${encodedSignature}`;\r\n}\r\n\r\n/**\r\n * Import PEM-formatted RSA private key\r\n */\r\nasync function importPrivateKey(pem: string): Promise<CryptoKey> {\r\n  // Remove PEM headers and whitespace\r\n  const pemContents = pem\r\n    .replace(/-----BEGIN PRIVATE KEY-----/, '')\r\n    .replace(/-----END PRIVATE KEY-----/, '')\r\n    .replace(/\\s/g, '');\r\n\r\n  // Decode base64 to binary\r\n  const binaryDer = atob(pemContents);\r\n  const keyData = new Uint8Array(binaryDer.length);\r\n  for (let i = 0; i < binaryDer.length; i++) {\r\n    keyData[i] = binaryDer.charCodeAt(i);\r\n  }\r\n\r\n  // Import as CryptoKey\r\n  return await crypto.subtle.importKey(\r\n    \"pkcs8\",\r\n    keyData.buffer,\r\n    {\r\n      name: \"RSASSA-PKCS1-v1_5\",\r\n      hash: \"SHA-256\"\r\n    },\r\n    false,\r\n    [\"sign\"]\r\n  );\r\n}\r\n\r\n/**\r\n * Base64URL encode (RFC 4648)\r\n */\r\nfunction base64UrlEncode(input: string | ArrayBuffer): string {\r\n  let base64: string;\r\n\r\n  if (typeof input === 'string') {\r\n    base64 = btoa(input);\r\n  } else {\r\n    const bytes = new Uint8Array(input);\r\n    const binary = Array.from(bytes)\r\n      .map(byte => String.fromCharCode(byte))\r\n      .join('');\r\n    base64 = btoa(binary);\r\n  }\r\n\r\n  // Convert to base64url\r\n  return base64\r\n    .replace(/=/g, '')\r\n    .replace(/\\+/g, '-')\r\n    .replace(/\\//g, '_');\r\n}\r\n\r\n/**\r\n * Get OAuth2 access token from service account\r\n */\r\nexport async function getAccessToken(\r\n  serviceAccountKey: ServiceAccountKey,\r\n  scopes: string[]\r\n): Promise<TokenResponse> {\r\n  const now = Math.floor(Date.now() / 1000);\r\n\r\n  // Build JWT claims\r\n  const claims: JWTClaims = {\r\n    iss: serviceAccountKey.client_email,\r\n    scope: scopes.join(' '),\r\n    aud: serviceAccountKey.token_uri,\r\n    exp: now + 3600, // 1 hour\r\n    iat: now\r\n  };\r\n\r\n  // Sign JWT\r\n  const jwt = await signJWT(claims, serviceAccountKey.private_key);\r\n\r\n  // Exchange JWT for access token\r\n  const response = await fetch(serviceAccountKey.token_uri, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    },\r\n    body: new URLSearchParams({\r\n      grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\r\n      assertion: jwt\r\n    })\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorText = await response.text();\r\n    throw new Error(`Failed to get access token: ${response.status} ${errorText}`);\r\n  }\r\n\r\n  return await response.json() as TokenResponse;\r\n}\r\n\r\n/**\r\n * Parse service account key from base64-encoded JSON\r\n */\r\nexport function parseServiceAccountKey(base64Key: string): ServiceAccountKey {\r\n  try {\r\n    const jsonString = atob(base64Key);\r\n    return JSON.parse(jsonString) as ServiceAccountKey;\r\n  } catch (error) {\r\n    throw new Error(`Failed to parse service account key: ${error}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Get authenticated headers for Google API requests\r\n */\r\nexport async function getGoogleAPIHeaders(\r\n  serviceAccountKeyBase64: string,\r\n  scopes: string[]\r\n): Promise<Record<string, string>> {\r\n  const serviceAccountKey = parseServiceAccountKey(serviceAccountKeyBase64);\r\n  const tokenResponse = await getAccessToken(serviceAccountKey, scopes);\r\n\r\n  return {\r\n    'Authorization': `Bearer ${tokenResponse.access_token}`,\r\n    'Content-Type': 'application/json'\r\n  };\r\n}\r\n", "// src/services/appsScriptDeployer.ts\r\n\r\nimport { getGoogleAPIHeaders } from \"./googleAuth\";\r\nimport type { Env } from \"../types\";\r\n\r\n/**\r\n * Apps Script deployment result\r\n */\r\nexport interface AppsScriptDeployment {\r\n  success: boolean;\r\n  scriptId?: string;\r\n  scriptUrl?: string;\r\n  webAppUrl?: string;\r\n  error?: string;\r\n}\r\n\r\n/**\r\n * Apps Script file structure\r\n */\r\ninterface ScriptFile {\r\n  name: string;\r\n  type: \"SERVER_JS\" | \"HTML\";\r\n  source: string;\r\n}\r\n\r\ninterface ScriptContent {\r\n  files: ScriptFile[];\r\n  scriptId?: string;\r\n}\r\n\r\n/**\r\n * Apps Script API client\r\n * Automates deployment of Apps Script projects for new tenants\r\n */\r\nexport class AppsScriptDeployer {\r\n  private env: Env;\r\n  private headers: Record<string, string> | null = null;\r\n\r\n  constructor(env: Env) {\r\n    this.env = env;\r\n  }\r\n\r\n  /**\r\n   * Deploy Apps Script for a new tenant\r\n   */\r\n  async deployForTenant(\r\n    tenantId: string,\r\n    tenantName: string,\r\n    automationJWT: string,\r\n    backendUrl: string\r\n  ): Promise<AppsScriptDeployment> {\r\n    try {\r\n      console.log(`[AppsScriptDeployer] Starting deployment for tenant: ${tenantId}`);\r\n\r\n      // 1. Authenticate\r\n      await this.authenticate();\r\n\r\n      // 2. Create new project from template\r\n      const scriptId = await this.createProjectFromTemplate(tenantId, tenantName);\r\n      console.log(`[AppsScriptDeployer] Created project: ${scriptId}`);\r\n\r\n      // 3. Configure script with tenant settings\r\n      await this.configureScript(scriptId, tenantId, automationJWT, backendUrl);\r\n      console.log(`[AppsScriptDeployer] Configured script with tenant settings`);\r\n\r\n      // 4. Create version\r\n      const versionNumber = await this.createVersion(scriptId);\r\n      console.log(`[AppsScriptDeployer] Created version: ${versionNumber}`);\r\n\r\n      // 5. Deploy as web app\r\n      const webAppUrl = await this.deployAsWebApp(scriptId, versionNumber);\r\n      console.log(`[AppsScriptDeployer] Deployed web app: ${webAppUrl}`);\r\n\r\n      const scriptUrl = `https://script.google.com/d/${scriptId}/edit`;\r\n\r\n      return {\r\n        success: true,\r\n        scriptId,\r\n        scriptUrl,\r\n        webAppUrl\r\n      };\r\n\r\n    } catch (error: any) {\r\n      console.error(`[AppsScriptDeployer] Deployment failed for ${tenantId}:`, error);\r\n      return {\r\n        success: false,\r\n        error: error.message || \"Deployment failed\"\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Authenticate with Google using service account\r\n   */\r\n  private async authenticate() {\r\n    if (!this.env.GOOGLE_SERVICE_ACCOUNT_KEY) {\r\n      throw new Error(\"GOOGLE_SERVICE_ACCOUNT_KEY not configured\");\r\n    }\r\n\r\n    const scopes = [\r\n      \"https://www.googleapis.com/auth/script.projects\",\r\n      \"https://www.googleapis.com/auth/script.deployments\"\r\n    ];\r\n\r\n    this.headers = await getGoogleAPIHeaders(\r\n      this.env.GOOGLE_SERVICE_ACCOUNT_KEY,\r\n      scopes\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Create new Apps Script project from template\r\n   */\r\n  private async createProjectFromTemplate(\r\n    tenantId: string,\r\n    tenantName: string\r\n  ): Promise<string> {\r\n    if (!this.env.APPS_SCRIPT_TEMPLATE_ID) {\r\n      throw new Error(\"APPS_SCRIPT_TEMPLATE_ID not configured\");\r\n    }\r\n\r\n    // Get template content\r\n    const templateContent = await this.getScriptContent(this.env.APPS_SCRIPT_TEMPLATE_ID);\r\n\r\n    // Create new project\r\n    const response = await fetch(\"https://script.googleapis.com/v1/projects\", {\r\n      method: \"POST\",\r\n      headers: this.headers!,\r\n      body: JSON.stringify({\r\n        title: `${tenantName} - Football Automation`\r\n      })\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const error = await response.text();\r\n      throw new Error(`Failed to create project: ${response.status} ${error}`);\r\n    }\r\n\r\n    const project = await response.json() as any;\r\n    const scriptId = project.scriptId;\r\n\r\n    // Copy template content to new project\r\n    await this.updateScriptContent(scriptId, templateContent);\r\n\r\n    return scriptId;\r\n  }\r\n\r\n  /**\r\n   * Get script content (files) from a project\r\n   */\r\n  private async getScriptContent(scriptId: string): Promise<ScriptContent> {\r\n    const response = await fetch(\r\n      `https://script.googleapis.com/v1/projects/${scriptId}/content`,\r\n      { headers: this.headers! }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const error = await response.text();\r\n      throw new Error(`Failed to get script content: ${response.status} ${error}`);\r\n    }\r\n\r\n    return await response.json() as ScriptContent;\r\n  }\r\n\r\n  /**\r\n   * Update script content (files)\r\n   */\r\n  private async updateScriptContent(scriptId: string, content: ScriptContent) {\r\n    const response = await fetch(\r\n      `https://script.googleapis.com/v1/projects/${scriptId}/content`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: this.headers!,\r\n        body: JSON.stringify({\r\n          files: content.files\r\n        })\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const error = await response.text();\r\n      throw new Error(`Failed to update script content: ${response.status} ${error}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Configure script with tenant-specific settings\r\n   */\r\n  private async configureScript(\r\n    scriptId: string,\r\n    tenantId: string,\r\n    automationJWT: string,\r\n    backendUrl: string\r\n  ) {\r\n    // Get current content\r\n    const content = await this.getScriptContent(scriptId);\r\n\r\n    // Find and update config.gs file\r\n    const configFile = content.files.find(f => f.name === \"config\");\r\n    if (configFile) {\r\n      // Replace placeholders in config\r\n      configFile.source = this.injectTenantConfig(\r\n        configFile.source,\r\n        tenantId,\r\n        automationJWT,\r\n        backendUrl\r\n      );\r\n    }\r\n\r\n    // Add auto-init file to set Script Properties\r\n    const initFile: ScriptFile = {\r\n      name: \"auto_init\",\r\n      type: \"SERVER_JS\",\r\n      source: this.generateAutoInitCode(tenantId, automationJWT, backendUrl)\r\n    };\r\n\r\n    content.files.push(initFile);\r\n\r\n    // Update script\r\n    await this.updateScriptContent(scriptId, content);\r\n\r\n    // Execute auto-init to set properties\r\n    await this.executeFunction(scriptId, \"_autoInitTenant\");\r\n  }\r\n\r\n  /**\r\n   * Inject tenant configuration into config.gs\r\n   */\r\n  private injectTenantConfig(\r\n    source: string,\r\n    tenantId: string,\r\n    automationJWT: string,\r\n    backendUrl: string\r\n  ): string {\r\n    // Replace tenant ID\r\n    source = source.replace(\r\n      /TENANT_ID:\\s*['\"][^'\"]*['\"]/,\r\n      `TENANT_ID: '${tenantId}'`\r\n    );\r\n\r\n    // Replace backend URL\r\n    source = source.replace(\r\n      /API_URL:\\s*['\"][^'\"]*['\"]/,\r\n      `API_URL: '${backendUrl}'`\r\n    );\r\n\r\n    // Note: JWT is set via Script Properties for security, not in code\r\n\r\n    return source;\r\n  }\r\n\r\n  /**\r\n   * Generate auto-init code to set Script Properties\r\n   */\r\n  private generateAutoInitCode(\r\n    tenantId: string,\r\n    automationJWT: string,\r\n    backendUrl: string\r\n  ): string {\r\n    return `\r\n/**\r\n * Auto-initialization function\r\n * Sets Script Properties for tenant configuration\r\n * This runs once on first deployment\r\n */\r\nfunction _autoInitTenant() {\r\n  const props = PropertiesService.getScriptProperties();\r\n\r\n  // Set tenant configuration\r\n  props.setProperties({\r\n    'TENANT_ID': '${tenantId}',\r\n    'BACKEND_JWT': '${automationJWT}',\r\n    'BACKEND_API_URL': '${backendUrl}',\r\n    'INITIALIZED': 'true',\r\n    'INITIALIZED_AT': new Date().toISOString()\r\n  });\r\n\r\n  Logger.log('Tenant configuration initialized for: ${tenantId}');\r\n\r\n  return {\r\n    success: true,\r\n    tenantId: '${tenantId}',\r\n    timestamp: new Date().toISOString()\r\n  };\r\n}\r\n`.trim();\r\n  }\r\n\r\n  /**\r\n   * Create a version (required for deployment)\r\n   */\r\n  private async createVersion(scriptId: string): Promise<number> {\r\n    const response = await fetch(\r\n      `https://script.googleapis.com/v1/projects/${scriptId}/versions`,\r\n      {\r\n        method: \"POST\",\r\n        headers: this.headers!,\r\n        body: JSON.stringify({\r\n          description: \"Automated deployment\"\r\n        })\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const error = await response.text();\r\n      throw new Error(`Failed to create version: ${response.status} ${error}`);\r\n    }\r\n\r\n    const version = await response.json() as any;\r\n    return version.versionNumber;\r\n  }\r\n\r\n  /**\r\n   * Deploy script as web app\r\n   */\r\n  private async deployAsWebApp(scriptId: string, versionNumber: number): Promise<string> {\r\n    const response = await fetch(\r\n      `https://script.googleapis.com/v1/projects/${scriptId}/deployments`,\r\n      {\r\n        method: \"POST\",\r\n        headers: this.headers!,\r\n        body: JSON.stringify({\r\n          versionNumber,\r\n          description: \"Production deployment\",\r\n          manifestFileName: \"appsscript\"\r\n        })\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const error = await response.text();\r\n      throw new Error(`Failed to deploy: ${response.status} ${error}`);\r\n    }\r\n\r\n    const deployment = await response.json() as any;\r\n    const deploymentId = deployment.deploymentId;\r\n\r\n    // Construct web app URL\r\n    const webAppUrl = `https://script.google.com/macros/s/${deploymentId}/exec`;\r\n\r\n    return webAppUrl;\r\n  }\r\n\r\n  /**\r\n   * Execute a function in the script\r\n   */\r\n  private async executeFunction(scriptId: string, functionName: string) {\r\n    try {\r\n      const response = await fetch(\r\n        `https://script.googleapis.com/v1/scripts/${scriptId}:run`,\r\n        {\r\n          method: \"POST\",\r\n          headers: this.headers!,\r\n          body: JSON.stringify({\r\n            function: functionName,\r\n            devMode: false\r\n          })\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        console.warn(`Function execution warning (non-critical): ${response.status}`);\r\n        // Non-critical - properties can be set manually if needed\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.warn(`Function execution failed (non-critical):`, error);\r\n      // Non-critical - continue deployment\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Deploy Apps Script for a tenant (exported function)\r\n */\r\nexport async function deployAppsScriptForTenant(\r\n  env: Env,\r\n  tenantId: string,\r\n  tenantName: string,\r\n  automationJWT: string\r\n): Promise<AppsScriptDeployment> {\r\n  const deployer = new AppsScriptDeployer(env);\r\n  const backendUrl = env.BACKEND_URL || \"https://syston-postbus.team-platform-2025.workers.dev\";\r\n\r\n  return await deployer.deployForTenant(\r\n    tenantId,\r\n    tenantName,\r\n    automationJWT,\r\n    backendUrl\r\n  );\r\n}\r\n", "// src/services/playerImages.ts\r\n\r\nimport { z } from \"zod\";\r\n\r\nexport interface PlayerImage {\r\n  id: string;\r\n  playerId: string;\r\n  playerName: string;\r\n  type: \"headshot\" | \"action\";\r\n  imageUrl: string;\r\n  r2Key: string;\r\n  uploadedAt: string;\r\n  uploadedBy: string;\r\n  metadata?: {\r\n    aspectRatio?: string;\r\n    width?: number;\r\n    height?: number;\r\n  };\r\n}\r\n\r\nconst PlayerImageSchema = z.object({\r\n  playerId: z.string().min(1),\r\n  playerName: z.string().min(1),\r\n  type: z.enum([\"headshot\", \"action\"]),\r\n  imageUrl: z.string().url().optional(),\r\n  r2Key: z.string().min(1),\r\n  uploadedBy: z.string().min(1),\r\n  metadata: z.object({\r\n    aspectRatio: z.string().optional(),\r\n    width: z.number().optional(),\r\n    height: z.number().optional(),\r\n  }).optional(),\r\n});\r\n\r\n/**\r\n * Create a new player image\r\n */\r\nexport async function createPlayerImage(\r\n  env: any,\r\n  tenant: string,\r\n  data: Omit<PlayerImage, \"id\" | \"uploadedAt\">\r\n): Promise<PlayerImage> {\r\n  const id = `img_${Date.now()}_${Math.random().toString(36).slice(2, 9)}`;\r\n  const image: PlayerImage = {\r\n    id,\r\n    ...data,\r\n    uploadedAt: new Date().toISOString(),\r\n  };\r\n\r\n  // Store individual image\r\n  const imageKey = `tenants:${tenant}:player-images:${id}`;\r\n  await env.KV_IDEMP.put(imageKey, JSON.stringify(image));\r\n\r\n  // Update index\r\n  const indexKey = `tenants:${tenant}:player-images:index`;\r\n  const existing = ((await env.KV_IDEMP.get(indexKey, \"json\")) as PlayerImage[]) || [];\r\n  const updated = [image, ...existing.filter((img) => img.id !== id)];\r\n  await env.KV_IDEMP.put(indexKey, JSON.stringify(updated.slice(0, 1000)));\r\n\r\n  return image;\r\n}\r\n\r\n/**\r\n * Get a player image by ID\r\n */\r\nexport async function getPlayerImage(\r\n  env: any,\r\n  tenant: string,\r\n  imageId: string\r\n): Promise<PlayerImage | null> {\r\n  const imageKey = `tenants:${tenant}:player-images:${imageId}`;\r\n  const image = await env.KV_IDEMP.get(imageKey, \"json\");\r\n  return image as PlayerImage | null;\r\n}\r\n\r\n/**\r\n * List all player images for a tenant\r\n */\r\nexport async function listPlayerImages(\r\n  env: any,\r\n  tenant: string,\r\n  filters?: { playerId?: string; type?: \"headshot\" | \"action\" }\r\n): Promise<PlayerImage[]> {\r\n  const indexKey = `tenants:${tenant}:player-images:index`;\r\n  let images = ((await env.KV_IDEMP.get(indexKey, \"json\")) as PlayerImage[]) || [];\r\n\r\n  // Apply filters\r\n  if (filters?.playerId) {\r\n    images = images.filter((img) => img.playerId === filters.playerId);\r\n  }\r\n  if (filters?.type) {\r\n    images = images.filter((img) => img.type === filters.type);\r\n  }\r\n\r\n  return images;\r\n}\r\n\r\n/**\r\n * Update a player image\r\n */\r\nexport async function updatePlayerImage(\r\n  env: any,\r\n  tenant: string,\r\n  imageId: string,\r\n  updates: Partial<Omit<PlayerImage, \"id\" | \"uploadedAt\">>\r\n): Promise<PlayerImage | null> {\r\n  const existing = await getPlayerImage(env, tenant, imageId);\r\n  if (!existing) return null;\r\n\r\n  const updated: PlayerImage = {\r\n    ...existing,\r\n    ...updates,\r\n  };\r\n\r\n  // Store updated image\r\n  const imageKey = `tenants:${tenant}:player-images:${imageId}`;\r\n  await env.KV_IDEMP.put(imageKey, JSON.stringify(updated));\r\n\r\n  // Update index\r\n  const indexKey = `tenants:${tenant}:player-images:index`;\r\n  const images = ((await env.KV_IDEMP.get(indexKey, \"json\")) as PlayerImage[]) || [];\r\n  const updatedIndex = images.map((img) => (img.id === imageId ? updated : img));\r\n  await env.KV_IDEMP.put(indexKey, JSON.stringify(updatedIndex.slice(0, 1000)));\r\n\r\n  return updated;\r\n}\r\n\r\n/**\r\n * Delete a player image\r\n */\r\nexport async function deletePlayerImage(\r\n  env: any,\r\n  tenant: string,\r\n  imageId: string\r\n): Promise<boolean> {\r\n  const existing = await getPlayerImage(env, tenant, imageId);\r\n  if (!existing) return false;\r\n\r\n  // Delete from R2 if exists\r\n  if (existing.r2Key) {\r\n    try {\r\n      await env.R2_MEDIA.delete(existing.r2Key);\r\n    } catch (err) {\r\n      console.error(\"Failed to delete R2 object\", existing.r2Key, err);\r\n    }\r\n  }\r\n\r\n  // Delete from KV\r\n  const imageKey = `tenants:${tenant}:player-images:${imageId}`;\r\n  await env.KV_IDEMP.delete(imageKey);\r\n\r\n  // Update index\r\n  const indexKey = `tenants:${tenant}:player-images:index`;\r\n  const images = ((await env.KV_IDEMP.get(indexKey, \"json\")) as PlayerImage[]) || [];\r\n  const updated = images.filter((img) => img.id !== imageId);\r\n  await env.KV_IDEMP.put(indexKey, JSON.stringify(updated));\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * Generate upload URL for player image\r\n */\r\nexport async function getPlayerImageUploadUrl(\r\n  env: any,\r\n  tenant: string,\r\n  playerId: string,\r\n  type: \"headshot\" | \"action\",\r\n  contentType: string = \"image/jpeg\"\r\n): Promise<{ uploadUrl: string; r2Key: string; imageId: string }> {\r\n  const imageId = `img_${Date.now()}_${Math.random().toString(36).slice(2, 9)}`;\r\n  const r2Key = `tenants/${tenant}/player-images/${playerId}/${type}/${imageId}.jpg`;\r\n\r\n  // For R2, we'll use a presigned URL approach (simplified for now)\r\n  // In production, you'd generate a proper presigned PUT URL\r\n  return {\r\n    uploadUrl: `/api/v1/admin/player-images/upload/${imageId}`,\r\n    r2Key,\r\n    imageId,\r\n  };\r\n}\r\n", "// src/services/autoPostsMatrix.ts\r\n\r\nimport { z } from \"zod\";\r\n\r\nexport type ChannelKey = \"app\" | \"x\" | \"instagram\" | \"facebook\" | \"tiktok\";\r\n\r\nexport type PostType =\r\n  | \"COUNTDOWN_T3\"\r\n  | \"COUNTDOWN_T2\"\r\n  | \"COUNTDOWN_T1\"\r\n  | \"MATCHDAY\"\r\n  | \"LIVE_UPDATE\"\r\n  | \"HALFTIME\"\r\n  | \"FULLTIME\"\r\n  | \"LEAGUE_FIXTURES\"\r\n  | \"RESULTS_SUMMARY\"\r\n  | \"TABLE_UPDATE\"\r\n  | \"POSTPONEMENT\"\r\n  | \"BIRTHDAY\"\r\n  | \"QUOTE\"\r\n  | \"MOTM_RESULT\"\r\n  | \"HIGHLIGHTS\";\r\n\r\nexport interface AutoPostConfig {\r\n  channels: Record<ChannelKey, boolean>;\r\n  scheduleTime?: string;\r\n  sponsorOverlay: boolean;\r\n}\r\n\r\nexport type AutoPostsMatrix = Record<PostType, AutoPostConfig>;\r\n\r\nconst ChannelConfigSchema = z.object({\r\n  app: z.boolean(),\r\n  x: z.boolean(),\r\n  instagram: z.boolean(),\r\n  facebook: z.boolean(),\r\n  tiktok: z.boolean(),\r\n});\r\n\r\nconst AutoPostConfigSchema = z.object({\r\n  channels: ChannelConfigSchema,\r\n  scheduleTime: z.string().optional(),\r\n  sponsorOverlay: z.boolean(),\r\n});\r\n\r\nconst AutoPostsMatrixSchema = z.record(AutoPostConfigSchema);\r\n\r\n/**\r\n * Get default auto-posts matrix configuration\r\n */\r\nexport function getDefaultAutoPostsMatrix(): AutoPostsMatrix {\r\n  const defaultChannels: Record<ChannelKey, boolean> = {\r\n    app: true,\r\n    x: false,\r\n    instagram: false,\r\n    facebook: false,\r\n    tiktok: false,\r\n  };\r\n\r\n  const postTypes: PostType[] = [\r\n    \"COUNTDOWN_T3\",\r\n    \"COUNTDOWN_T2\",\r\n    \"COUNTDOWN_T1\",\r\n    \"MATCHDAY\",\r\n    \"LIVE_UPDATE\",\r\n    \"HALFTIME\",\r\n    \"FULLTIME\",\r\n    \"LEAGUE_FIXTURES\",\r\n    \"RESULTS_SUMMARY\",\r\n    \"TABLE_UPDATE\",\r\n    \"POSTPONEMENT\",\r\n    \"BIRTHDAY\",\r\n    \"QUOTE\",\r\n    \"MOTM_RESULT\",\r\n    \"HIGHLIGHTS\",\r\n  ];\r\n\r\n  const matrix: AutoPostsMatrix = {} as AutoPostsMatrix;\r\n\r\n  postTypes.forEach((type) => {\r\n    matrix[type] = {\r\n      channels: { ...defaultChannels },\r\n      sponsorOverlay: false,\r\n    };\r\n  });\r\n\r\n  return matrix;\r\n}\r\n\r\n/**\r\n * Get auto-posts matrix configuration for a tenant\r\n */\r\nexport async function getAutoPostsMatrix(\r\n  env: any,\r\n  tenant: string\r\n): Promise<AutoPostsMatrix> {\r\n  const key = `tenants:${tenant}:auto-posts-matrix`;\r\n  const stored = await env.KV_IDEMP.get(key, \"json\");\r\n\r\n  if (stored) {\r\n    return stored as AutoPostsMatrix;\r\n  }\r\n\r\n  // Return default if not configured\r\n  return getDefaultAutoPostsMatrix();\r\n}\r\n\r\n/**\r\n * Update auto-posts matrix configuration for a tenant\r\n */\r\nexport async function updateAutoPostsMatrix(\r\n  env: any,\r\n  tenant: string,\r\n  matrix: AutoPostsMatrix\r\n): Promise<AutoPostsMatrix> {\r\n  const key = `tenants:${tenant}:auto-posts-matrix`;\r\n  await env.KV_IDEMP.put(key, JSON.stringify(matrix));\r\n  return matrix;\r\n}\r\n\r\n/**\r\n * Update a specific post type configuration\r\n */\r\nexport async function updatePostTypeConfig(\r\n  env: any,\r\n  tenant: string,\r\n  postType: PostType,\r\n  config: AutoPostConfig\r\n): Promise<AutoPostsMatrix> {\r\n  const matrix = await getAutoPostsMatrix(env, tenant);\r\n  matrix[postType] = config;\r\n  return await updateAutoPostsMatrix(env, tenant, matrix);\r\n}\r\n\r\n/**\r\n * Toggle a channel for a specific post type\r\n */\r\nexport async function togglePostTypeChannel(\r\n  env: any,\r\n  tenant: string,\r\n  postType: PostType,\r\n  channel: ChannelKey\r\n): Promise<AutoPostsMatrix> {\r\n  const matrix = await getAutoPostsMatrix(env, tenant);\r\n  if (!matrix[postType]) {\r\n    matrix[postType] = {\r\n      channels: {\r\n        app: false,\r\n        x: false,\r\n        instagram: false,\r\n        facebook: false,\r\n        tiktok: false,\r\n      },\r\n      sponsorOverlay: false,\r\n    };\r\n  }\r\n  matrix[postType].channels[channel] = !matrix[postType].channels[channel];\r\n  return await updateAutoPostsMatrix(env, tenant, matrix);\r\n}\r\n\r\n/**\r\n * Reset auto-posts matrix to defaults\r\n */\r\nexport async function resetAutoPostsMatrix(\r\n  env: any,\r\n  tenant: string\r\n): Promise<AutoPostsMatrix> {\r\n  const defaultMatrix = getDefaultAutoPostsMatrix();\r\n  return await updateAutoPostsMatrix(env, tenant, defaultMatrix);\r\n}\r\n\r\n/**\r\n * Check if a post type should be sent to a specific channel\r\n */\r\nexport async function shouldPostToChannel(\r\n  env: any,\r\n  tenant: string,\r\n  postType: PostType,\r\n  channel: ChannelKey\r\n): Promise<boolean> {\r\n  const matrix = await getAutoPostsMatrix(env, tenant);\r\n  return matrix[postType]?.channels[channel] || false;\r\n}\r\n", "// src/services/clubConfig.ts\r\n\r\nimport { z } from \"zod\";\r\n\r\nexport interface ClubConfig {\r\n  clubDetails: {\r\n    name: string;\r\n    shortName: string;\r\n    founded?: string;\r\n    venue?: string;\r\n    email?: string;\r\n    phone?: string;\r\n  };\r\n  branding: {\r\n    primaryColor: string;\r\n    secondaryColor: string;\r\n    clubBadge?: string;\r\n    sponsorLogos: string[];\r\n  };\r\n  externalIds: {\r\n    faFullTime?: string;\r\n    youtubeChannelId?: string;\r\n    printifyStoreId?: string;\r\n    paymentPlatformId?: string;\r\n  };\r\n  featureFlags: {\r\n    enableGallery: boolean;\r\n    enableShop: boolean;\r\n    enablePayments: boolean;\r\n    enableHighlights: boolean;\r\n    enableMOTMVoting: boolean;\r\n    enableTrainingPlans: boolean;\r\n    enableAwards: boolean;\r\n  };\r\n  policies: {\r\n    quietHoursStart: string;\r\n    quietHoursEnd: string;\r\n    allowUrgentBypass: boolean;\r\n    maxUploadSizeMB: number;\r\n    photoConsentRequired: boolean;\r\n  };\r\n  navLinks: {\r\n    websiteUrl?: string;\r\n    facebookUrl?: string;\r\n    instagramUrl?: string;\r\n    twitterUrl?: string;\r\n    tiktokUrl?: string;\r\n  };\r\n}\r\n\r\nconst ClubConfigSchema = z.object({\r\n  clubDetails: z.object({\r\n    name: z.string().min(1),\r\n    shortName: z.string().min(1),\r\n    founded: z.string().optional(),\r\n    venue: z.string().optional(),\r\n    email: z.string().email().optional(),\r\n    phone: z.string().optional(),\r\n  }),\r\n  branding: z.object({\r\n    primaryColor: z.string(),\r\n    secondaryColor: z.string(),\r\n    clubBadge: z.string().optional(),\r\n    sponsorLogos: z.array(z.string()),\r\n  }),\r\n  externalIds: z.object({\r\n    faFullTime: z.string().optional(),\r\n    youtubeChannelId: z.string().optional(),\r\n    printifyStoreId: z.string().optional(),\r\n    paymentPlatformId: z.string().optional(),\r\n  }),\r\n  featureFlags: z.object({\r\n    enableGallery: z.boolean(),\r\n    enableShop: z.boolean(),\r\n    enablePayments: z.boolean(),\r\n    enableHighlights: z.boolean(),\r\n    enableMOTMVoting: z.boolean(),\r\n    enableTrainingPlans: z.boolean(),\r\n    enableAwards: z.boolean(),\r\n  }),\r\n  policies: z.object({\r\n    quietHoursStart: z.string(),\r\n    quietHoursEnd: z.string(),\r\n    allowUrgentBypass: z.boolean(),\r\n    maxUploadSizeMB: z.number().min(1).max(100),\r\n    photoConsentRequired: z.boolean(),\r\n  }),\r\n  navLinks: z.object({\r\n    websiteUrl: z.string().url().optional(),\r\n    facebookUrl: z.string().url().optional(),\r\n    instagramUrl: z.string().url().optional(),\r\n    twitterUrl: z.string().url().optional(),\r\n    tiktokUrl: z.string().url().optional(),\r\n  }),\r\n});\r\n\r\n/**\r\n * Get default club config\r\n */\r\nexport function getDefaultClubConfig(clubName: string, shortName: string): ClubConfig {\r\n  return {\r\n    clubDetails: {\r\n      name: clubName,\r\n      shortName: shortName,\r\n      founded: \"\",\r\n      venue: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n    },\r\n    branding: {\r\n      primaryColor: \"#6CC5FF\",\r\n      secondaryColor: \"#9AA1AC\",\r\n      clubBadge: undefined,\r\n      sponsorLogos: [],\r\n    },\r\n    externalIds: {\r\n      faFullTime: undefined,\r\n      youtubeChannelId: undefined,\r\n      printifyStoreId: undefined,\r\n      paymentPlatformId: undefined,\r\n    },\r\n    featureFlags: {\r\n      enableGallery: true,\r\n      enableShop: false,\r\n      enablePayments: false,\r\n      enableHighlights: true,\r\n      enableMOTMVoting: true,\r\n      enableTrainingPlans: false,\r\n      enableAwards: false,\r\n    },\r\n    policies: {\r\n      quietHoursStart: \"22:00\",\r\n      quietHoursEnd: \"08:00\",\r\n      allowUrgentBypass: true,\r\n      maxUploadSizeMB: 10,\r\n      photoConsentRequired: true,\r\n    },\r\n    navLinks: {\r\n      websiteUrl: undefined,\r\n      facebookUrl: undefined,\r\n      instagramUrl: undefined,\r\n      twitterUrl: undefined,\r\n      tiktokUrl: undefined,\r\n    },\r\n  };\r\n}\r\n\r\n/**\r\n * Get club config for a tenant\r\n */\r\nexport async function getClubConfig(\r\n  env: any,\r\n  tenant: string\r\n): Promise<ClubConfig> {\r\n  const key = `tenants:${tenant}:club-config`;\r\n  const stored = await env.KV_IDEMP.get(key, \"json\");\r\n\r\n  if (stored) {\r\n    return stored as ClubConfig;\r\n  }\r\n\r\n  // Try to get tenant config for defaults\r\n  const tenantKey = `tenants:${tenant}:config`;\r\n  const tenantConfig = await env.KV_IDEMP.get(tenantKey, \"json\");\r\n  const clubName = (tenantConfig as any)?.name || \"My Club\";\r\n  const shortName = (tenantConfig as any)?.id || tenant;\r\n\r\n  // Return default if not configured\r\n  return getDefaultClubConfig(clubName, shortName);\r\n}\r\n\r\n/**\r\n * Update club config for a tenant\r\n */\r\nexport async function updateClubConfig(\r\n  env: any,\r\n  tenant: string,\r\n  config: ClubConfig\r\n): Promise<ClubConfig> {\r\n  const key = `tenants:${tenant}:club-config`;\r\n  await env.KV_IDEMP.put(key, JSON.stringify(config));\r\n  return config;\r\n}\r\n\r\n/**\r\n * Update specific section of club config\r\n */\r\nexport async function updateClubConfigSection(\r\n  env: any,\r\n  tenant: string,\r\n  section: keyof ClubConfig,\r\n  data: any\r\n): Promise<ClubConfig> {\r\n  const config = await getClubConfig(env, tenant);\r\n  config[section] = { ...config[section], ...data };\r\n  return await updateClubConfig(env, tenant, config);\r\n}\r\n\r\n/**\r\n * Update feature flags\r\n */\r\nexport async function updateFeatureFlags(\r\n  env: any,\r\n  tenant: string,\r\n  flags: Partial<ClubConfig[\"featureFlags\"]>\r\n): Promise<ClubConfig> {\r\n  const config = await getClubConfig(env, tenant);\r\n  config.featureFlags = { ...config.featureFlags, ...flags };\r\n  return await updateClubConfig(env, tenant, config);\r\n}\r\n\r\n/**\r\n * Upload club badge (returns R2 key)\r\n */\r\nexport async function uploadClubBadge(\r\n  env: any,\r\n  tenant: string,\r\n  file: ArrayBuffer,\r\n  contentType: string\r\n): Promise<{ r2Key: string; url: string }> {\r\n  const r2Key = `tenants/${tenant}/branding/badge_${Date.now()}.jpg`;\r\n\r\n  await env.R2_MEDIA.put(r2Key, file, {\r\n    httpMetadata: {\r\n      contentType: contentType || \"image/jpeg\",\r\n    },\r\n  });\r\n\r\n  const url = `/api/v1/media/photo/${encodeURIComponent(r2Key)}`;\r\n  return { r2Key, url };\r\n}\r\n\r\n/**\r\n * Upload sponsor logo (returns R2 key)\r\n */\r\nexport async function uploadSponsorLogo(\r\n  env: any,\r\n  tenant: string,\r\n  file: ArrayBuffer,\r\n  contentType: string\r\n): Promise<{ r2Key: string; url: string }> {\r\n  const r2Key = `tenants/${tenant}/branding/sponsor_${Date.now()}.jpg`;\r\n\r\n  await env.R2_MEDIA.put(r2Key, file, {\r\n    httpMetadata: {\r\n      contentType: contentType || \"image/jpeg\",\r\n    },\r\n  });\r\n\r\n  const url = `/api/v1/media/photo/${encodeURIComponent(r2Key)}`;\r\n  return { r2Key, url };\r\n}\r\n", "// src/services/brand.ts\r\n// Brand management service for multi-tenant white-label support\r\n\r\nimport { z } from \"zod\";\r\nimport { getClubConfig, updateClubConfigSection } from \"./clubConfig\";\r\n\r\n/**\r\n * Brand Kit Schema\r\n * Simplified brand interface for easy consumption by frontends\r\n */\r\nexport const BrandKitSchema = z.object({\r\n  primaryColor: z.string().regex(/^#[0-9A-Fa-f]{6}$/),\r\n  secondaryColor: z.string().regex(/^#[0-9A-Fa-f]{6}$/),\r\n  onPrimary: z.string().regex(/^#[0-9A-Fa-f]{6}$/).optional(), // Text color for primary bg (WCAG)\r\n  onSecondary: z.string().regex(/^#[0-9A-Fa-f]{6}$/).optional(), // Text color for secondary bg\r\n  clubBadge: z.string().url().optional(),\r\n  sponsorLogos: z.array(z.string().url()).optional(),\r\n  clubName: z.string().optional(),\r\n  clubShortName: z.string().optional(),\r\n});\r\n\r\nexport type BrandKit = z.infer<typeof BrandKitSchema>;\r\n\r\n/**\r\n * Calculate contrasting text color (WCAG)\r\n * Returns #FFFFFF for dark backgrounds, #000000 for light backgrounds\r\n */\r\nfunction getContrastTextColor(hexColor: string): string {\r\n  const hex = hexColor.replace(\"#\", \"\");\r\n  const r = parseInt(hex.substring(0, 2), 16);\r\n  const g = parseInt(hex.substring(2, 4), 16);\r\n  const b = parseInt(hex.substring(4, 6), 16);\r\n\r\n  // Calculate relative luminance (WCAG formula)\r\n  const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\r\n\r\n  return luminance > 0.5 ? \"#000000\" : \"#FFFFFF\";\r\n}\r\n\r\n/**\r\n * Get brand kit for a tenant\r\n */\r\nexport async function getBrand(env: any, tenant: string): Promise<BrandKit> {\r\n  const config = await getClubConfig(env, tenant);\r\n\r\n  return {\r\n    primaryColor: config.branding.primaryColor,\r\n    secondaryColor: config.branding.secondaryColor,\r\n    onPrimary: getContrastTextColor(config.branding.primaryColor),\r\n    onSecondary: getContrastTextColor(config.branding.secondaryColor),\r\n    clubBadge: config.branding.clubBadge,\r\n    sponsorLogos: config.branding.sponsorLogos,\r\n    clubName: config.clubDetails.name,\r\n    clubShortName: config.clubDetails.shortName,\r\n  };\r\n}\r\n\r\n/**\r\n * Update brand kit for a tenant\r\n * Validates colors, computes onPrimary/onSecondary automatically\r\n */\r\nexport async function setBrand(\r\n  env: any,\r\n  tenant: string,\r\n  payload: Partial<BrandKit>\r\n): Promise<BrandKit> {\r\n  // Validate the payload\r\n  const validated = BrandKitSchema.partial().parse(payload);\r\n\r\n  // Get current config\r\n  const config = await getClubConfig(env, tenant);\r\n\r\n  // Update branding section\r\n  if (validated.primaryColor !== undefined) {\r\n    config.branding.primaryColor = validated.primaryColor;\r\n  }\r\n  if (validated.secondaryColor !== undefined) {\r\n    config.branding.secondaryColor = validated.secondaryColor;\r\n  }\r\n  if (validated.clubBadge !== undefined) {\r\n    config.branding.clubBadge = validated.clubBadge;\r\n  }\r\n  if (validated.sponsorLogos !== undefined) {\r\n    config.branding.sponsorLogos = validated.sponsorLogos;\r\n  }\r\n\r\n  // Update club details if provided\r\n  if (validated.clubName !== undefined) {\r\n    config.clubDetails.name = validated.clubName;\r\n  }\r\n  if (validated.clubShortName !== undefined) {\r\n    config.clubDetails.shortName = validated.clubShortName;\r\n  }\r\n\r\n  // Save the updated config\r\n  await updateClubConfigSection(env, tenant, \"branding\", config.branding);\r\n\r\n  if (validated.clubName || validated.clubShortName) {\r\n    await updateClubConfigSection(env, tenant, \"clubDetails\", config.clubDetails);\r\n  }\r\n\r\n  // Return the full brand kit\r\n  return getBrand(env, tenant);\r\n}\r\n", "// src/index.ts\n\nimport { z } from \"zod\";\nimport { SignJWT } from \"jose\";\nimport { PostReqSchema, json, readIdempotencyKey } from \"./services/util\";\nimport { requireJWT, hasRole, requireAdmin } from \"./services/auth\";\nimport { ensureIdempotent, setFinalIdempotent } from \"./services/idempotency\";\nimport { ensureTenant, setMakeWebhook, updateFlags, putTenantConfig, getTenantConfig, setTenantFlags, setChannelWebhook, setYouTubeBYOGoogle, isAllowedWebhookHost } from \"./services/tenants\";\nimport { issueTenantAdminJWT } from \"./services/jwt\";\nimport type { TenantConfig, PostJob } from \"./types\";\nimport queueWorker from \"./queue-consumer\";\nimport { putEvent, getEvent, deleteEvent, listEvents, setRsvp, getRsvp, addCheckin, listCheckins } from \"./services/events\";\nimport { registerDevice, sendToUser } from \"./services/push\";\nimport * as Invites from \"./services/invites\";\nimport * as Teams from \"./services/teams\";\nimport * as ChatKV from \"./services/chatKV\";\nimport * as GalleryKV from \"./services/galleryKV\";\nimport { provisionTenant } from \"./services/provisioning\";\nimport { withSecurity } from \"./middleware/securityHeaders\";\nimport { corsHeaders, isPreflight } from \"./middleware/cors\";\nimport { rateLimit } from \"./middleware/rateLimit\";\nimport { newRequestId, logJSON } from \"./lib/log\";\nimport { parse, isValidationError } from \"./lib/validate\";\nimport { healthz, readyz } from \"./routes/health\";\n// --- Self-serve signup / usage / admin (Phase 3) ---\nimport { signupStart, signupBrand, signupStarterMake, signupProConfirm } from './routes/signup';\nimport { handleMagicStart, handleMagicVerify } from './routes/magic';\nimport { handleProvisionQueue, handleProvisionStatus, handleTenantOverview, handleProvisionRetry } from './routes/provisioning';\ndeclare const APP_VERSION: string;\n\nconst DEV_DEFAULT_CORS = new Set([\n  \"https://localhost:5173\",\n  \"http://localhost:5173\",\n  \"https://localhost:3000\",\n  \"http://localhost:3000\",\n  \"capacitor://localhost\",\n]);\n\nconst SignupSchema = z.object({\n  clubName: z.string().min(1, \"clubName required\"),\n  clubShortName: z.string().min(1, \"clubShortName required\"),\n  contactEmail: z.string().email(\"valid email required\"),\n  contactName: z.string().min(1, \"contactName required\"),\n  locale: z.string().optional(),\n  timezone: z.string().optional(),\n  plan: z.enum([\"free\", \"managed\", \"enterprise\"]).optional(),\n  makeWebhookUrl: z.string().url().optional(),\n  promoCode: z.string().optional()\n});\n\nconst PostEventSchema = z.object({\n  event_type: z.string().min(1, \"event_type required\"),\n  data: z.record(z.unknown()),\n  channels: z.array(z.enum([\"yt\", \"fb\", \"ig\", \"tiktok\", \"x\"])).optional(),\n  template: z.string().optional()\n});\n\nfunction buildRateLimitScope(pathname: string) {\n  const segments = pathname.split(\"/\").filter(Boolean);\n  if (!segments.length) return \"root\";\n  return segments.slice(0, 3).join(\":\");\n}\n\nfunction buildCorsHeaders(origin: string | null, env: any, requestId: string, release: string) {\n  const headers = corsHeaders(origin);\n  const envAllowed = typeof env?.CORS_ALLOWED === \"string\"\n    ? String(env.CORS_ALLOWED)\n        .split(\",\")\n        .map((o: string) => o.trim())\n        .filter(Boolean)\n    : [];\n\n  const allowList = new Set<string>([...DEV_DEFAULT_CORS, ...envAllowed]);\n  if (origin && allowList.has(origin)) {\n    headers.set(\"Access-Control-Allow-Origin\", origin);\n  }\n\n  const allowHeaders = new Set(\n    (headers.get(\"Access-Control-Allow-Headers\") || \"\")\n      .split(\",\")\n      .map((h) => h.trim())\n      .filter(Boolean)\n  );\n  for (const hdr of [\n    \"authorization\",\n    \"content-type\",\n    \"Idempotency-Key\",\n    \"idempotency-key\",\n    \"x-amz-content-sha256\",\n    \"x-amz-date\",\n    \"x-amz-acl\",\n    \"x-amz-meta-*\",\n  ]) {\n    if (hdr) allowHeaders.add(hdr);\n  }\n  headers.set(\"Access-Control-Allow-Headers\", Array.from(allowHeaders).join(\",\"));\n  headers.set(\"Access-Control-Expose-Headers\", \"X-Request-Id, X-Release\");\n  headers.set(\"X-Request-Id\", requestId);\n  headers.set(\"X-Release\", release);\n  return headers;\n}\n\nfunction mergeHeaders(base: Headers, extra?: HeadersInit) {\n  const merged = new Headers(base);\n  if (extra) {\n    const addition = new Headers(extra);\n    addition.forEach((value, key) => merged.set(key, value));\n  }\n  return merged;\n}\n\nfunction respondWithCors(res: Response, base: Headers) {\n  const headers = mergeHeaders(base, res.headers);\n  return new Response(res.body, withSecurity({ status: res.status, headers }));\n}\n\n// Export the Durable Object classes so the binding works\nexport { TenantRateLimiter } from \"./do/rateLimiter\";\nexport { VotingRoom } from \"./do/votingRoom\";\nexport { MatchRoom } from \"./do/matchRoom\";\nexport { ChatRoom } from \"./do/chatRoom\";\nexport { GeoFenceManager } from \"./do/geoFenceManager\";\nexport { Provisioner } from \"./do/provisioner\";\n\nexport default {\n  async fetch(req: Request, env: any, _ctx: ExecutionContext): Promise<Response> {\n    const t0 = Date.now();\n    const requestId = newRequestId();\n    const origin = req.headers.get(\"Origin\");\n    const release = typeof APP_VERSION === \"string\" ? APP_VERSION : \"unknown\";\n    const corsHdrs = buildCorsHeaders(origin, env, requestId, release);\n    let url: URL | null = null;\n\n    if (isPreflight(req)) {\n      return new Response(null, withSecurity({ status: 204, headers: mergeHeaders(corsHdrs) }));\n    }\n\n    try {\n      url = new URL(req.url);\n\n      if (req.method === \"GET\" && url.pathname === \"/healthz\") {\n        const res = await healthz();\n        return respondWithCors(res, corsHdrs);\n      }\n      if (req.method === \"GET\" && url.pathname === \"/readyz\") {\n        const res = await readyz(env);\n        return respondWithCors(res, corsHdrs);\n      }\n\n      // Introspection endpoint for debugging\n      if (url.pathname === '/__meta/ping') {\n        return new Response(JSON.stringify({\n          ok: true,\n          method: req.method,\n          pathname: url.pathname,\n          search: url.search,\n          fullUrl: url.href,\n          apiVersion: env.API_VERSION || \"v1\"\n        }), {\n          status: 200,\n          headers: { 'content-type': 'application/json', ...corsHdrs }\n        });\n      }\n\n      // -------- DEV-ONLY: Admin Token Minting --------\n      // POST /internal/dev/admin-token - Mint admin JWT for development\n      if (url.pathname === '/internal/dev/admin-token' && req.method === 'POST') {\n        const environment = env.ENVIRONMENT || 'development';\n\n        // Block in production\n        if (environment === 'production') {\n          return json({\n            success: false,\n            error: { code: 'FORBIDDEN', message: 'This endpoint is disabled in production' }\n          }, 403, corsHdrs);\n        }\n\n        try {\n          const body = await req.json().catch(() => ({}));\n          const schema = z.object({\n            email: z.string().email()\n          });\n          const data = schema.parse(body);\n\n          // Mint JWT with owner role\n          const secret = new TextEncoder().encode(env.JWT_SECRET || '');\n          if (!env.JWT_SECRET) {\n            throw new Error('JWT_SECRET not configured');\n          }\n\n          const now = Math.floor(Date.now() / 1000);\n          const exp = now + (7 * 24 * 60 * 60); // 7 days\n\n          const token = await new SignJWT({\n            sub: data.email,\n            roles: ['admin']\n          })\n            .setProtectedHeader({ alg: 'HS256' })\n            .setIssuer(env.JWT_ISSUER || 'syston.app')\n            .setAudience(env.JWT_AUDIENCE || 'syston-mobile')\n            .setIssuedAt(now)\n            .setExpirationTime(exp)\n            .sign(secret);\n\n          return json({\n            success: true,\n            token,\n            expiresAt: new Date(exp * 1000).toISOString()\n          }, 200, corsHdrs);\n        } catch (err: any) {\n          if (err.errors) {\n            return json({\n              success: false,\n              error: { code: 'VALIDATION', details: err.errors }\n            }, 400, corsHdrs);\n          }\n          return json({\n            success: false,\n            error: { code: 'TOKEN_MINT_FAILED', message: String(err?.message || err) }\n          }, 500, corsHdrs);\n        }\n      }\n\n      const v = env.API_VERSION || \"v1\";\n\n      const method = req.method.toUpperCase();\n      if (method !== \"GET\" && method !== \"HEAD\") {\n        const scope = buildRateLimitScope(url.pathname);\n        const limitResult = await rateLimit(req, env, {\n          scope,\n          requestId,\n          path: url.pathname\n        });\n\n        if (!limitResult.ok) {\n          const headers = new Headers(corsHdrs);\n          if (typeof limitResult.retryAfter === \"number\") {\n            headers.set(\"Retry-After\", String(limitResult.retryAfter));\n          }\n          if (typeof limitResult.limit === \"number\") {\n            headers.set(\"X-RateLimit-Limit\", String(limitResult.limit));\n          }\n          headers.set(\"X-RateLimit-Remaining\", \"0\");\n          return json({\n            success: false,\n            error: { code: \"RATE_LIMITED\", message: \"Too many requests\" }\n          }, 429, headers);\n        }\n\n        if (typeof limitResult.limit === \"number\") {\n          corsHdrs.set(\"X-RateLimit-Limit\", String(limitResult.limit));\n        }\n        if (typeof limitResult.remaining === \"number\") {\n          corsHdrs.set(\"X-RateLimit-Remaining\", String(Math.max(limitResult.remaining, 0)));\n        }\n      }\n\n    // -------- Public signup endpoint --------\n\n    // POST /api/v1/signup - Automated tenant provisioning\n    if (url.pathname === `/api/${v}/signup` && req.method === \"POST\") {\n      try {\n        const body = await req.json().catch(() => ({}));\n        const data = parse(SignupSchema, body);\n        const result = await provisionTenant(env, data);\n\n        if (result.success) {\n          return json({ success: true, data: result.tenant }, 200, corsHdrs);\n        } else {\n          return json({ success: false, error: result.error }, 400, corsHdrs);\n        }\n      } catch (err: any) {\n        if (isValidationError(err)) {\n          return json({\n            success: false,\n            error: {\n              code: \"INVALID_REQUEST\",\n              message: \"Validation failed\",\n              issues: err.issues\n            }\n          }, err.status, corsHdrs);\n        }\n        return json({ success: false, error: { code: \"SIGNUP_FAILED\", message: err.message } }, 500, corsHdrs);\n      }\n    }\n    // -------- Phase 3: Self-Serve Signup (Public) --------\n\n    // POST /public/signup/start - Create new tenant account\n    if (url.pathname === `/public/signup/start` && req.method === \"POST\") {\n      return await signupStart(req, env, requestId, corsHdrs);\n    }\n\n    // POST /public/signup/brand - Customize brand colors\n    if (url.pathname === `/public/signup/brand` && req.method === \"POST\") {\n      return await signupBrand(req, env, requestId, corsHdrs);\n    }\n\n    // POST /public/signup/starter/make - Configure Make.com webhook (Starter plan)\n    if (url.pathname === `/public/signup/starter/make` && req.method === \"POST\") {\n      return await signupStarterMake(req, env, requestId, corsHdrs);\n    }\n\n    // POST /public/signup/pro/confirm - Confirm Pro plan setup\n    if (url.pathname === `/public/signup/pro/confirm` && req.method === \"POST\") {\n      return await signupProConfirm(req, env, requestId, corsHdrs);\n    }\n\n    // -------- Magic Link Authentication --------\n    // POST /auth/magic/start - Send magic link email\n    if (url.pathname === '/auth/magic/start' && req.method === 'POST') {\n      return await handleMagicStart(req, env);\n    }\n\n    // GET /auth/magic/verify - Verify magic link token\n    if (url.pathname === '/auth/magic/verify' && req.method === 'GET') {\n      return await handleMagicVerify(req, env);\n    }\n\n    // -------- Provisioning Routes (Internal) --------\n    // POST /internal/provision/queue - Queue provisioning\n    if (url.pathname === '/internal/provision/queue' && req.method === 'POST') {\n      return await handleProvisionQueue(req, env);\n    }\n\n    // POST /internal/provision/retry - Retry failed provisioning\n    if (url.pathname === '/internal/provision/retry' && req.method === 'POST') {\n      return await handleProvisionRetry(req, env);\n    }\n\n    // GET /api/v1/tenants/:id/provision-status - Get provisioning status\n    const provisionStatusMatch = url.pathname.match(/^\\/api\\/v1\\/tenants\\/([^/]+)\\/provision-status$/);\n    if (provisionStatusMatch && req.method === 'GET') {\n      const tenantId = provisionStatusMatch[1];\n      // TODO: Add auth check for owner session or admin\n      return await handleProvisionStatus(req, env, tenantId);\n    }\n\n    // GET /api/v1/tenants/:id/overview - Get tenant overview\n    const overviewMatch = url.pathname.match(/^\\/api\\/v1\\/tenants\\/([^/]+)\\/overview$/);\n    if (overviewMatch && req.method === 'GET') {\n      const tenantId = overviewMatch[1];\n      // TODO: Add auth check for owner session or admin\n      return await handleTenantOverview(req, env, tenantId);\n    }\n\n    // -------- Phase 3: Usage Tracking --------\n    // Simple monthly counters in KV: key = usage:<tenant>:<YYYY-MM>\n\n    // GET /api/v1/usage\n    if (url.pathname === `/api/${v}/usage` && req.method === \"GET\") {\n      const tenant = (req.headers.get(\"x-tenant\") || url.searchParams.get(\"tenant\") || \"default\").toString();\n      const now = new Date();\n      const ym = `${now.getUTCFullYear()}-${String(now.getUTCMonth()+1).padStart(2,'0')}`;\n      const kvKey = `usage:${tenant}:${ym}`;\n      const value = (await env.KV_IDEMP.get(kvKey, \"json\")) as any || { count: 0, month: ym };\n      return json({ success:true, data:{ tenant, month: ym, count: Number(value.count||0) } }, 200, corsHdrs);\n    }\n\n    // POST /api/v1/usage/increment\n    if (url.pathname === `/api/${v}/usage/increment` && req.method === \"POST\") {\n      const tenant = (req.headers.get(\"x-tenant\") || \"default\").toString();\n      const now = new Date();\n      const ym = `${now.getUTCFullYear()}-${String(now.getUTCMonth()+1).padStart(2,'0')}`;\n      const kvKey = `usage:${tenant}:${ym}`;\n      const planKey = `tenant:${tenant}:plan`; // optional hint; fallback to cap if not present\n\n      // Read current\n      const current = (await env.KV_IDEMP.get(kvKey, \"json\")) as any || { count: 0, month: ym };\n      let count = Number(current.count || 0) + 1;\n\n      // Enforce 1,000/mo cap for Starter (non-managed) unless comped\n      // We infer \"managed\" from flags (managed.yt = true => Pro)\n      const cfg = await ensureTenant(env, tenant);\n      const isPro = !!cfg?.flags?.managed?.yt;\n      const comped = !!cfg?.flags?.comped;\n\n      if (!isPro && !comped && count > 1000) {\n        // do not increment beyond the cap\n        return json({ success:false, error:{ code:'USAGE_CAP', message:'Monthly cap reached (1,000).' }, data:{ tenant, month: ym, count: count-1 } }, 402, corsHdrs);\n      }\n\n      await env.KV_IDEMP.put(kvKey, JSON.stringify({ count, month: ym }));\n      return json({ success:true, data:{ tenant, month: ym, count } }, 200, corsHdrs);\n    }\n\n    // -------- Apps Script Integration --------\n\n    // POST /api/v1/post - Receive events from Apps Script\n    if (url.pathname === `/api/${v}/post` && req.method === \"POST\") {\n      try {\n        // Require authentication (automationJWT)\n        const claims = await requireJWT(req, env);\n        const tenantId = claims.tenant_id || claims.tenantId;\n\n        if (!tenantId) {\n          return json({ success: false, error: \"tenant_id required in JWT\" }, 400, corsHdrs);\n        }\n\n        const body = await req.json().catch(() => ({}));\n        const { event_type, data, channels, template } = parse(PostEventSchema, body);\n\n        // Idempotency check\n        const idemHeader = readIdempotencyKey(req);\n        const idem = await ensureIdempotent(env, tenantId, body, idemHeader || undefined);\n        if (idem.hit) {\n          return json(idem.response, 200, corsHdrs);\n        }\n\n        // Create post job\n        const job: PostJob = {\n          tenant: tenantId,\n          template: template || event_type,\n          channels: channels || [\"yt\", \"fb\", \"ig\"],\n          data: {\n            ...data,\n            event_type,\n            timestamp: new Date().toISOString()\n          },\n          createdAt: Date.now(),\n          idemKey: idem.key\n        };\n\n        // Queue the job\n        await env.POST_QUEUE.send(job);\n\n        const result = {\n          success: true,\n          queued: true,\n          tenant: tenantId,\n          event_type,\n          job_id: idem.key\n        };\n\n        // Store idempotent response\n        await idem.store(result);\n\n        return json(result, 200, corsHdrs);\n\n      } catch (err: any) {\n        if (err instanceof Response) {\n          return respondWithCors(err, corsHdrs);\n\n        }\n        if (isValidationError(err)) {\n          return json({\n            success: false,\n            error: {\n              code: \"INVALID_REQUEST\",\n              message: \"Validation failed\",\n              issues: err.issues\n            }\n          }, err.status, corsHdrs);\n          \n        }\n        logJSON({\n          level: \"error\",\n          msg: `POST_EVENT_ERROR:${err?.message || \"unknown\"}`,\n          requestId,\n          path: url.pathname,\n          status: 500,\n        });\n        return json({\n          success: false,\n          error: { code: \"POST_FAILED\", message: err.message }\n        }, 500, corsHdrs);\n      }\n    }\n\n    // Log admin console requests\n    if (url.pathname.includes(\"/admin/\")) {\n      const fromAdminConsole = req.headers.get(\"x-admin-console\") === \"true\";\n      if (fromAdminConsole) {\n        logJSON({\n          level: \"info\",\n          msg: \"ADMIN_CONSOLE_CALL\",\n          requestId,\n          path: url.pathname,\n        });\n      }\n    }\n\n    // -------- Admin debug endpoint --------\n\n    // GET /api/v1/admin/whoami - Debug endpoint to verify JWT is valid/parsed\n    if (url.pathname === `/api/${v}/admin/whoami` && req.method === \"GET\") {\n      try {\n        const claims = await requireJWT(req, env); // normalized claims\n        return json({ ok: true, claims }, 200, corsHdrs);\n      } catch (err: any) {\n        // If requireJWT throws a Response object, return it directly\n        if (err instanceof Response) {\n          return respondWithCors(err, corsHdrs);\n        }\n        logJSON({\n          level: \"error\",\n          msg: `WHOAMI_FAIL:${err?.message || \"unknown\"}`,\n          requestId,\n          path: url.pathname,\n          status: 401,\n        });\n        return json({ ok: false, error: String(err?.message || err) }, 401, corsHdrs);\n      }\n    }\n\n    // -------- Admin endpoints --------\n\n    // GET /api/v1/admin/stats - Dashboard statistics\n    if (url.pathname === `/api/${v}/admin/stats` && req.method === \"GET\") {\n      return await getAdminStats(req, env, requestId, corsHdrs);\n    }\n\n    // POST /api/v1/admin/tenant/create\n    if (url.pathname === `/api/${v}/admin/tenant/create` && req.method === \"POST\") {\n      await requireAdmin(req, env); // throws 403 Response on failure\n      const body = await req.json().catch(() => ({}));\n      const schema = z.object({\n        id: z.string().min(1, \"id required\"),\n        name: z.string().optional(),\n        locale: z.string().optional(),\n        tz: z.string().optional(),\n      });\n      const parsed = schema.safeParse(body);\n      if (!parsed.success) return json({ success: false, error: { code: \"VALIDATION\", details: parsed.error.issues } }, 400, corsHdrs);\n\n      const { id, name, locale, tz } = parsed.data;\n      const cfg: TenantConfig = {\n        id, name, locale, tz,\n        flags: { use_make: false, direct_yt: true },\n        makeWebhookUrl: null,\n      };\n      await putTenantConfig(env, cfg);\n      return json({ success: true, data: { created: true, tenant: cfg } }, 200, corsHdrs);\n    }\n\n    // POST /api/v1/admin/tenant/webhook\n    if (url.pathname === `/api/${v}/admin/tenant/webhook` && req.method === \"POST\") {\n      try {\n        await requireAdmin(req, env);\n        const body = await req.json().catch(() => ({}));\n\n        // Validate input\n        const schema = z.object({\n          tenant: z.string().min(1),\n          make_webhook_url: z.string().url(),\n        });\n        const parsed = schema.safeParse(body);\n        if (!parsed.success) {\n          return json({ success: false, error: { code: \"VALIDATION\", details: parsed.error.issues } }, 400, corsHdrs);\n        }\n\n        const { tenant, make_webhook_url } = parsed.data;\n\n        // Parse URL defensively\n        let u: URL;\n        try {\n          u = new URL(make_webhook_url);\n        } catch {\n          return json({ success: false, error: { code: \"VALIDATION\", message: \"Invalid URL format\" } }, 400, corsHdrs);\n        }\n\n        // Validate host against allowlist\n        const allowedCsv = (env.ALLOWED_WEBHOOK_HOSTS || \"\") + \",.make.com\";\n        if (!isAllowedWebhookHost(u.host, allowedCsv)) {\n          return json({ success: false, error: { code: \"VALIDATION\", message: `Host ${u.host} not allowed` } }, 400, corsHdrs);\n        }\n\n        // Save webhook\n        const updated = await setMakeWebhook(env, tenant, make_webhook_url);\n        return json({ success: true, data: { tenant: updated.id, makeWebhookUrl: updated.makeWebhookUrl } }, 200, corsHdrs);\n      } catch (e: any) {\n        // If auth threw a Response, return it\n        if (e instanceof Response) return respondWithCors(e, corsHdrs);\n\n        // Log and return clean 500\n        logJSON({\n          level: \"error\",\n          msg: `ADMIN_WEBHOOK_SAVE_ERROR:${e?.message || \"unknown\"}`,\n          requestId,\n          path: url.pathname,\n          status: 500,\n        });\n        return json({ success: false, error: { code: \"INTERNAL\", message: \"Webhook save failed\" } }, 500, corsHdrs);\n      }\n    }\n\n    // POST /api/v1/admin/fixtures/refresh\n    if (url.pathname === `/api/${v}/admin/fixtures/refresh` && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const refreshUrl = env.FIXTURES_REFRESH_URL || \"\";\n      if (!refreshUrl) return json({ success: true, data: { pinged: false, note: \"No FIXTURES_REFRESH_URL set\" } }, 200, corsHdrs);\n      const r = await fetch(refreshUrl, { method: \"POST\" }).catch(() => null);\n      const ok = !!r && r.ok;\n      return json({ success: ok, data: { pinged: ok } }, ok ? 200 : 502, corsHdrs);\n    }\n\n    // -------- Fixtures API (Public) --------\n\n    // POST /api/v1/fixtures/sync - Sync fixtures from Google Apps Script\n    if (url.pathname === `/api/${v}/fixtures/sync` && req.method === \"POST\") {\n      try {\n        const body = await req.json().catch(() => ({}));\n        const { fixtures } = body;\n\n        if (!Array.isArray(fixtures)) {\n          return json({ success: false, error: { code: \"INVALID_DATA\", message: \"fixtures must be an array\" } }, 400, corsHdrs);\n        }\n\n        let synced = 0;\n        for (const fixture of fixtures) {\n          try {\n            await env.DB.prepare(`\n              INSERT INTO fixtures (\n                fixture_date, opponent, venue, competition, kick_off_time, status, source, updated_at\n              )\n              VALUES (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP)\n              ON CONFLICT(fixture_date, opponent)\n              DO UPDATE SET\n                venue = excluded.venue,\n                competition = excluded.competition,\n                kick_off_time = excluded.kick_off_time,\n                status = excluded.status,\n                source = excluded.source,\n                updated_at = CURRENT_TIMESTAMP\n            `).bind(\n              fixture.date,\n              fixture.opponent,\n              fixture.venue || '',\n              fixture.competition || '',\n              fixture.time || '',\n              fixture.status || 'scheduled',\n              fixture.source || 'unknown'\n            ).run();\n            synced++;\n          } catch (err) {\n            logJSON(\"error\", requestId, { message: \"Fixture sync error\", error: String(err) });\n          }\n        }\n\n        return json({ success: true, synced }, 200, corsHdrs);\n      } catch (err) {\n        logJSON(\"error\", requestId, { message: \"Fixtures sync failed\", error: String(err) });\n        return json({ success: false, error: { code: \"INTERNAL\", message: \"Sync failed\" } }, 500, corsHdrs);\n      }\n    }\n\n    // GET /api/v1/fixtures/upcoming - Get upcoming fixtures\n    if (url.pathname === `/api/${v}/fixtures/upcoming` && req.method === \"GET\") {\n      try {\n        const result = await env.DB.prepare(`\n          SELECT\n            id, fixture_date as date, opponent, venue, competition,\n            kick_off_time as kickOffTime, status, source\n          FROM fixtures\n          WHERE fixture_date >= DATE('now')\n            AND status != 'postponed'\n          ORDER BY fixture_date ASC\n          LIMIT 10\n        `).all();\n\n        return json({ success: true, data: result.results || [] }, 200, corsHdrs);\n      } catch (err) {\n        logJSON(\"error\", requestId, { message: \"Get fixtures failed\", error: String(err) });\n        return json({ success: false, error: { code: \"INTERNAL\" } }, 500, corsHdrs);\n      }\n    }\n\n    // GET /api/v1/fixtures/all - Get all fixtures\n    if (url.pathname === `/api/${v}/fixtures/all` && req.method === \"GET\") {\n      try {\n        const limit = parseInt(url.searchParams.get('limit') || '50');\n        const status = url.searchParams.get('status');\n\n        let query = `\n          SELECT\n            id, fixture_date as date, opponent, venue, competition,\n            kick_off_time as kickOffTime, status, source\n          FROM fixtures\n        `;\n\n        const params: string[] = [];\n\n        if (status) {\n          query += ' WHERE status = ?';\n          params.push(status);\n        }\n\n        query += ' ORDER BY fixture_date DESC LIMIT ?';\n        params.push(limit.toString());\n\n        const result = await env.DB.prepare(query).bind(...params).all();\n\n        return json({ success: true, data: result.results || [] }, 200, corsHdrs);\n      } catch (err) {\n        logJSON(\"error\", requestId, { message: \"Get all fixtures failed\", error: String(err) });\n        return json({ success: false, error: { code: \"INTERNAL\" } }, 500, corsHdrs);\n      }\n    }\n\n    // GET /api/v1/fixtures/results - Get recent results\n    if (url.pathname === `/api/${v}/fixtures/results` && req.method === \"GET\") {\n      try {\n        const limit = parseInt(url.searchParams.get('limit') || '10');\n\n        const result = await env.DB.prepare(`\n          SELECT\n            id, match_date as date, opponent, home_score as homeScore,\n            away_score as awayScore, venue, competition, scorers\n          FROM results\n          ORDER BY match_date DESC\n          LIMIT ?\n        `).bind(limit).all();\n\n        return json({ success: true, data: result.results || [] }, 200, corsHdrs);\n      } catch (err) {\n        logJSON(\"error\", requestId, { message: \"Get results failed\", error: String(err) });\n        return json({ success: false, error: { code: \"INTERNAL\" } }, 500, corsHdrs);\n      }\n    }\n\n    // POST /api/v1/fixtures/results - Add a match result\n    if (url.pathname === `/api/${v}/fixtures/results` && req.method === \"POST\") {\n      try {\n        const result = await req.json().catch(() => ({}));\n\n        await env.DB.prepare(`\n          INSERT INTO results (\n            match_date, opponent, home_score, away_score, venue, competition, scorers\n          )\n          VALUES (?, ?, ?, ?, ?, ?, ?)\n          ON CONFLICT(match_date, opponent)\n          DO UPDATE SET\n            home_score = excluded.home_score,\n            away_score = excluded.away_score,\n            venue = excluded.venue,\n            competition = excluded.competition,\n            scorers = excluded.scorers\n        `).bind(\n          result.date,\n          result.opponent,\n          result.homeScore || 0,\n          result.awayScore || 0,\n          result.venue || '',\n          result.competition || '',\n          result.scorers || ''\n        ).run();\n\n        return json({ success: true }, 200, corsHdrs);\n      } catch (err) {\n        logJSON(\"error\", requestId, { message: \"Add result failed\", error: String(err) });\n        return json({ success: false, error: { code: \"INTERNAL\" } }, 500, corsHdrs);\n      }\n    }\n\n    // -------- Fixture Settings (Admin/Public) --------\n\n    // GET /api/v1/fixtures/settings - Get fixture sync settings\n    if (url.pathname === `/api/${v}/fixtures/settings` && req.method === \"GET\") {\n      try {\n        const tenantId = url.searchParams.get('tenant_id') || 'default';\n\n        const result = await env.DB.prepare(`\n          SELECT\n            tenant_id as tenantId,\n            team_name as teamName,\n            fa_website_url as faWebsiteUrl,\n            fa_snippet_url as faSnippetUrl,\n            sync_enabled as syncEnabled,\n            sync_interval_minutes as syncIntervalMinutes,\n            calendar_id as calendarId\n          FROM fixture_settings\n          WHERE tenant_id = ?\n        `).bind(tenantId).first();\n\n        if (result) {\n          return json({ success: true, data: result }, 200, corsHdrs);\n        } else {\n          return json({ success: false, error: { code: \"NOT_FOUND\", message: \"Settings not found\" } }, 404, corsHdrs);\n        }\n      } catch (err) {\n        logJSON(\"error\", requestId, { message: \"Get settings failed\", error: String(err) });\n        return json({ success: false, error: { code: \"INTERNAL\" } }, 500, corsHdrs);\n      }\n    }\n\n    // GET /api/v1/fixtures/settings/config - Public endpoint for Apps Script to fetch config\n    if (url.pathname === `/api/${v}/fixtures/settings/config` && req.method === \"GET\") {\n      try {\n        const tenantId = url.searchParams.get('tenant_id') || 'default';\n\n        const result = await env.DB.prepare(`\n          SELECT\n            tenant_id as tenantId,\n            team_name as teamName,\n            fa_website_url as faWebsiteUrl,\n            fa_snippet_url as faSnippetUrl,\n            sync_enabled as syncEnabled,\n            calendar_id as calendarId\n          FROM fixture_settings\n          WHERE tenant_id = ?\n        `).bind(tenantId).first();\n\n        if (result) {\n          return json({ success: true, data: result }, 200, corsHdrs);\n        } else {\n          // Return default config if not found\n          return json({\n            success: true,\n            data: {\n              tenantId: 'default',\n              teamName: 'Shepshed Dynamo Youth U16',\n              faWebsiteUrl: '',\n              faSnippetUrl: '',\n              syncEnabled: true,\n              calendarId: ''\n            }\n          }, 200, corsHdrs);\n        }\n      } catch (err) {\n        logJSON(\"error\", requestId, { message: \"Get config failed\", error: String(err) });\n        return json({ success: false, error: { code: \"INTERNAL\" } }, 500, corsHdrs);\n      }\n    }\n\n    // PUT /api/v1/fixtures/settings - Update fixture sync settings (Admin only)\n    if (url.pathname === `/api/${v}/fixtures/settings` && req.method === \"PUT\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n\n      try {\n        const body = await req.json().catch(() => ({}));\n        const tenantId = body.tenantId || 'default';\n\n        // Update or insert settings\n        await env.DB.prepare(`\n          INSERT INTO fixture_settings (\n            tenant_id,\n            team_name,\n            fa_website_url,\n            fa_snippet_url,\n            sync_enabled,\n            sync_interval_minutes,\n            calendar_id,\n            calendar_enabled,\n            gmail_search_query,\n            gmail_label,\n            email_sync_enabled,\n            updated_at\n          )\n          VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP)\n          ON CONFLICT(tenant_id)\n          DO UPDATE SET\n            team_name = excluded.team_name,\n            fa_website_url = excluded.fa_website_url,\n            fa_snippet_url = excluded.fa_snippet_url,\n            sync_enabled = excluded.sync_enabled,\n            sync_interval_minutes = excluded.sync_interval_minutes,\n            calendar_id = excluded.calendar_id,\n            calendar_enabled = excluded.calendar_enabled,\n            gmail_search_query = excluded.gmail_search_query,\n            gmail_label = excluded.gmail_label,\n            email_sync_enabled = excluded.email_sync_enabled,\n            updated_at = CURRENT_TIMESTAMP\n        `).bind(\n          tenantId,\n          body.teamName || '',\n          body.faWebsiteUrl || '',\n          body.faSnippetUrl || '',\n          body.syncEnabled ? 1 : 0,\n          body.syncIntervalMinutes || 5,\n          body.calendarId || '',\n          body.calendarEnabled ? 1 : 0,\n          body.gmailSearchQuery || '',\n          body.gmailLabel || '',\n          body.emailSyncEnabled ? 1 : 0\n        ).run();\n\n        return json({ success: true }, 200, corsHdrs);\n      } catch (err) {\n        logJSON(\"error\", requestId, { message: \"Update settings failed\", error: String(err) });\n        return json({ success: false, error: { code: \"INTERNAL\" } }, 500, corsHdrs);\n      }\n    }\n\n// Live Match Routes - Insert after line 703 in index.ts\n\n    // -------- Live Match API --------\n\n    // GET /api/v1/fixtures/next - Get next fixture with YouTube livestream metadata\n    if (url.pathname === `/api/${v}/fixtures/next` && req.method === \"GET\") {\n      try {\n        const result = await env.DB.prepare(`\n          SELECT\n            id,\n            fixture_date || 'T' || COALESCE(kick_off_time, '00:00:00') || 'Z' as kickoffIso,\n            COALESCE(home_team, 'Home Team') as homeTeam,\n            COALESCE(away_team, opponent) as awayTeam,\n            opponent,\n            CASE\n              WHEN home_team IS NOT NULL THEN 'H'\n              ELSE 'A'\n            END as homeAway,\n            venue,\n            competition,\n            COALESCE(match_status, status) as status,\n            home_score,\n            away_score,\n            current_minute as minute,\n            youtube_live_id as youtubeLiveId,\n            youtube_status as youtubeStatus,\n            youtube_scheduled_start as youtubeScheduledStart\n          FROM fixtures\n          WHERE fixture_date >= DATE('now')\n            AND status != 'postponed'\n          ORDER BY fixture_date ASC, kick_off_time ASC\n          LIMIT 1\n        `).first();\n\n        if (result) {\n          // Transform to NextFixture format\n          const nextFixture = {\n            id: result.id,\n            kickoffIso: result.kickoffIso,\n            homeTeam: result.homeTeam,\n            awayTeam: result.awayTeam,\n            opponent: result.opponent,\n            homeAway: result.homeAway,\n            venue: result.venue || null,\n            competition: result.competition || null,\n            status: result.status || 'scheduled',\n            score: (result.home_score !== null && result.away_score !== null) ? {\n              home: result.home_score,\n              away: result.away_score\n            } : null,\n            minute: result.minute || 0,\n            youtubeLiveId: result.youtubeLiveId || null,\n            youtubeStatus: result.youtubeStatus || null,\n            youtubeScheduledStart: result.youtubeScheduledStart || null,\n          };\n\n          return json({ success: true, data: nextFixture }, 200, corsHdrs);\n        } else {\n          return json({ success: true, data: null }, 200, corsHdrs);\n        }\n      } catch (err) {\n        logJSON(\"error\", requestId, { message: \"Get next fixture failed\", error: String(err) });\n        return json({ success: false, error: { code: \"INTERNAL\", message: \"Failed to fetch next fixture\" } }, 500, corsHdrs);\n      }\n    }\n\n    // GET /api/v1/live-updates - Get live text updates for a match\n    if (url.pathname === `/api/${v}/live-updates` && req.method === \"GET\") {\n      try {\n        const matchId = url.searchParams.get('matchId');\n\n        if (!matchId) {\n          return json({ success: false, error: { code: \"INVALID_REQUEST\", message: \"matchId parameter required\" } }, 400, corsHdrs);\n        }\n\n        const result = await env.DB.prepare(`\n          SELECT\n            id,\n            match_id as matchId,\n            minute,\n            type,\n            text,\n            scorer,\n            assist,\n            card,\n            player,\n            score_so_far as scoreSoFar,\n            created_at as createdAt\n          FROM live_updates\n          WHERE match_id = ?\n          ORDER BY created_at ASC\n        `).bind(matchId).all();\n\n        return json({ success: true, data: result.results || [] }, 200, corsHdrs);\n      } catch (err) {\n        logJSON(\"error\", requestId, { message: \"Get live updates failed\", error: String(err) });\n        return json({ success: false, error: { code: \"INTERNAL\", message: \"Failed to fetch live updates\" } }, 500, corsHdrs);\n      }\n    }\n\n    // POST /api/v1/live-updates - Post a live update (goal, card, sub, info)\n    if (url.pathname === `/api/${v}/live-updates` && req.method === \"POST\") {\n      try {\n        const body = await req.json().catch(() => ({}));\n\n        // Validate required fields\n        if (!body.matchId || typeof body.minute !== 'number' || !body.type || !body.text) {\n          return json({\n            success: false,\n            error: { code: \"INVALID_REQUEST\", message: \"matchId, minute, type, and text are required\" }\n          }, 400, corsHdrs);\n        }\n\n        // Validate type\n        const validTypes = ['goal', 'card', 'subs', 'info'];\n        if (!validTypes.includes(body.type)) {\n          return json({\n            success: false,\n            error: { code: \"INVALID_REQUEST\", message: \"type must be one of: goal, card, subs, info\" }\n          }, 400, corsHdrs);\n        }\n\n        // Validate card type if present\n        if (body.card) {\n          const validCards = ['yellow', 'red', 'sinbin'];\n          if (!validCards.includes(body.card)) {\n            return json({\n              success: false,\n              error: { code: \"INVALID_REQUEST\", message: \"card must be one of: yellow, red, sinbin\" }\n            }, 400, corsHdrs);\n          }\n        }\n\n        // Generate ID\n        const updateId = `update-${Date.now()}-${Math.random().toString(36).slice(2, 11)}`;\n        const createdAt = new Date().toISOString();\n\n        // Insert update\n        await env.DB.prepare(`\n          INSERT INTO live_updates (\n            id, match_id, minute, type, text, scorer, assist, card, player, score_so_far, created_at\n          )\n          VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n        `).bind(\n          updateId,\n          body.matchId,\n          body.minute,\n          body.type,\n          body.text,\n          body.scorer || null,\n          body.assist || null,\n          body.card || null,\n          body.player || null,\n          body.scoreSoFar || null,\n          createdAt\n        ).run();\n\n        // Return created update\n        const liveUpdate = {\n          id: updateId,\n          matchId: body.matchId,\n          minute: body.minute,\n          type: body.type,\n          text: body.text,\n          scorer: body.scorer || null,\n          assist: body.assist || null,\n          card: body.card || null,\n          player: body.player || null,\n          scoreSoFar: body.scoreSoFar || null,\n          createdAt,\n        };\n\n        logJSON(\"info\", requestId, { message: \"Live update posted\", updateId, matchId: body.matchId, type: body.type });\n        return json({ success: true, data: liveUpdate }, 201, corsHdrs);\n      } catch (err) {\n        logJSON(\"error\", requestId, { message: \"Post live update failed\", error: String(err) });\n        return json({ success: false, error: { code: \"INTERNAL\", message: \"Failed to post live update\" } }, 500, corsHdrs);\n      }\n    }\n\n    // POST /api/v1/matches/:id/state - Set match state (kickoff, halftime, fulltime)\n    if (url.pathname.match(new RegExp(`^/api/${v}/matches/([^/]+)/state$`)) && req.method === \"POST\") {\n      try {\n        const matchId = url.pathname.split('/').slice(-2, -1)[0];\n        const body = await req.json().catch(() => ({}));\n\n        // Validate status\n        const validStatuses = ['scheduled', 'live', 'halftime', 'ft'];\n        if (!body.status || !validStatuses.includes(body.status)) {\n          return json({\n            success: false,\n            error: { code: \"INVALID_REQUEST\", message: \"status must be one of: scheduled, live, halftime, ft\" }\n          }, 400, corsHdrs);\n        }\n\n        // Build update query\n        let query = 'UPDATE fixtures SET match_status = ?, updated_at = CURRENT_TIMESTAMP';\n        const params: any[] = [body.status];\n\n        if (typeof body.minute === 'number') {\n          query += ', current_minute = ?';\n          params.push(body.minute);\n        }\n\n        if (body.score && typeof body.score.home === 'number' && typeof body.score.away === 'number') {\n          query += ', home_score = ?, away_score = ?';\n          params.push(body.score.home, body.score.away);\n        }\n\n        query += ' WHERE id = ?';\n        params.push(matchId);\n\n        await env.DB.prepare(query).bind(...params).run();\n\n        logJSON(\"info\", requestId, { message: \"Match state updated\", matchId, status: body.status });\n        return json({ success: true, data: { ok: true } }, 200, corsHdrs);\n      } catch (err) {\n        logJSON(\"error\", requestId, { message: \"Set match state failed\", error: String(err) });\n        return json({ success: false, error: { code: \"INTERNAL\", message: \"Failed to set match state\" } }, 500, corsHdrs);\n      }\n    }\n\n    // POST /api/v1/live-updates/cleanup - Clean up stale live updates\n    if (url.pathname === `/api/${v}/live-updates/cleanup` && req.method === \"POST\") {\n      try {\n        const body = await req.json().catch(() => ({}));\n        const matchId = body.matchId;\n\n        let removed = 0;\n\n        if (matchId) {\n          // Remove all updates for specific match\n          const result = await env.DB.prepare('DELETE FROM live_updates WHERE match_id = ?')\n            .bind(matchId).run();\n          removed = result.meta?.changes || 0;\n          logJSON(\"info\", requestId, { message: \"Cleaned up match updates\", matchId, removed });\n        } else {\n          // Remove updates older than 90 minutes after FT for completed matches\n          const result = await env.DB.prepare(`\n            DELETE FROM live_updates\n            WHERE match_id IN (\n              SELECT id FROM fixtures\n              WHERE match_status = 'ft'\n                AND updated_at < datetime('now', '-90 minutes')\n            )\n          `).run();\n          removed = result.meta?.changes || 0;\n          logJSON(\"info\", requestId, { message: \"Cleaned up stale updates\", removed });\n        }\n\n        return json({ success: true, data: { removed } }, 200, corsHdrs);\n      } catch (err) {\n        logJSON(\"error\", requestId, { message: \"Cleanup failed\", error: String(err) });\n        return json({ success: false, error: { code: \"INTERNAL\", message: \"Failed to cleanup live updates\" } }, 500, corsHdrs);\n      }\n    }\n    // -------- League Table API --------\n\n    // POST /api/v1/league/sync - Sync league standings from Apps Script\n    if (url.pathname === `/api/${v}/league/sync` && req.method === \"POST\") {\n      try {\n        const body = await req.json().catch(() => ({}));\n        const { tenantId, competition, standings } = body;\n\n        if (!Array.isArray(standings)) {\n          return json({ success: false, error: { code: \"INVALID_DATA\", message: \"standings must be an array\" } }, 400, corsHdrs);\n        }\n\n        // Clear existing standings for this competition\n        await env.DB.prepare('DELETE FROM league_standings WHERE tenant_id = ? AND competition = ?')\n          .bind(tenantId || 'default', competition || '').run();\n\n        // Insert new standings\n        let synced = 0;\n        for (const team of standings) {\n          try {\n            await env.DB.prepare(`\n              INSERT INTO league_standings (\n                tenant_id, competition, team_name, position,\n                played, won, drawn, lost, goals_for, goals_against, goal_difference, points,\n                last_updated\n              )\n              VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP)\n            `).bind(\n              tenantId || 'default',\n              competition || '',\n              team.teamName,\n              team.position,\n              team.played,\n              team.won,\n              team.drawn,\n              team.lost,\n              team.goalsFor,\n              team.goalsAgainst,\n              team.goalDifference,\n              team.points\n            ).run();\n            synced++;\n          } catch (err) {\n            logJSON(\"error\", requestId, { message: \"Error syncing team\", error: String(err) });\n          }\n        }\n\n        return json({ success: true, synced }, 200, corsHdrs);\n      } catch (err) {\n        logJSON(\"error\", requestId, { message: \"League sync failed\", error: String(err) });\n        return json({ success: false, error: { code: \"INTERNAL\" } }, 500, corsHdrs);\n      }\n    }\n\n    // GET /api/v1/league/table - Get league table\n    if (url.pathname === `/api/${v}/league/table` && req.method === \"GET\") {\n      try {\n        const tenantId = url.searchParams.get('tenant_id') || 'default';\n        const competition = url.searchParams.get('competition');\n\n        let query = `\n          SELECT\n            position, team_name as teamName, played, won, drawn, lost,\n            goals_for as goalsFor, goals_against as goalsAgainst,\n            goal_difference as goalDifference, points\n          FROM league_standings\n          WHERE tenant_id = ?\n        `;\n\n        const params: string[] = [tenantId];\n\n        if (competition) {\n          query += ' AND competition = ?';\n          params.push(competition);\n        }\n\n        query += ' ORDER BY position ASC';\n\n        const result = await env.DB.prepare(query).bind(...params).all();\n\n        return json({ success: true, data: result.results || [] }, 200, corsHdrs);\n      } catch (err) {\n        logJSON(\"error\", requestId, { message: \"Get league table failed\", error: String(err) });\n        return json({ success: false, error: { code: \"INTERNAL\" } }, 500, corsHdrs);\n      }\n    }\n\n    // -------- Promo Code Management (Admin) --------\n\n    // POST /api/v1/admin/promo/create\n    if (url.pathname === `/api/${v}/admin/promo/create` && req.method === \"POST\") {\n      await requireAdmin(req, env);\n      try {\n        const body = await req.json().catch(() => ({}));\n        const schema = z.object({\n          code: z.string().min(1),\n          type: z.enum([\"percentage_discount\", \"months_free\", \"plan_upgrade\", \"referral_reward\"]),\n          value: z.union([z.string(), z.number()]),\n          durationMonths: z.number().optional(),\n          maxUses: z.number().optional(),\n          expiresAt: z.string().optional(),\n          active: z.boolean().default(true),\n          metadata: z.object({\n            description: z.string().optional(),\n            targetTenant: z.string().optional()\n          }).optional()\n        });\n\n        const data = schema.parse(body);\n        const { PromoCodeService } = await import(\"./services/promoCodes\");\n        const promoService = new PromoCodeService(env);\n\n        const result = await promoService.createPromoCode({\n          ...data,\n          createdBy: \"admin\"\n        });\n\n        if (result.success) {\n          return json({ success: true, data: result.code }, 200, corsHdrs);\n        } else {\n          return json({ success: false, error: { code: \"PROMO_CREATE_FAILED\", message: result.error } }, 400, corsHdrs);\n        }\n      } catch (err: any) {\n        if (err.errors) {\n          return json({ success: false, error: { code: \"VALIDATION_ERROR\", message: err.errors[0].message } }, 400, corsHdrs);\n        }\n        return json({ success: false, error: { code: \"PROMO_CREATE_FAILED\", message: err.message } }, 500, corsHdrs);\n      }\n    }\n\n    // GET /api/v1/admin/promo/list\n    if (url.pathname === `/api/${v}/admin/promo/list` && req.method === \"GET\") {\n      await requireAdmin(req, env);\n      try {\n        const { PromoCodeService } = await import(\"./services/promoCodes\");\n        const promoService = new PromoCodeService(env);\n        const promoCodes = await promoService.listPromoCodes();\n        return json({ success: true, data: promoCodes }, 200, corsHdrs);\n      } catch (err: any) {\n        return json({ success: false, error: { code: \"PROMO_LIST_FAILED\", message: err.message } }, 500, corsHdrs);\n      }\n    }\n\n    // POST /api/v1/admin/promo/:code/deactivate\n    if (url.pathname.match(new RegExp(`^/api/${v}/admin/promo/[^/]+/deactivate$`)) && req.method === \"POST\") {\n      await requireAdmin(req, env);\n      try {\n        const code = url.pathname.split(\"/\")[5];\n        const { PromoCodeService } = await import(\"./services/promoCodes\");\n        const promoService = new PromoCodeService(env);\n\n        const result = await promoService.deactivatePromoCode(code);\n\n        if (result.success) {\n          return json({ success: true }, 200, corsHdrs);\n        } else {\n          return json({ success: false, error: { code: \"PROMO_DEACTIVATE_FAILED\", message: result.error } }, 400, corsHdrs);\n        }\n      } catch (err: any) {\n        return json({ success: false, error: { code: \"PROMO_DEACTIVATE_FAILED\", message: err.message } }, 500, corsHdrs);\n      }\n    }\n\n    // POST /api/v1/admin/tenant/invite\n    if (url.pathname === `/api/${v}/admin/tenant/invite` && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const body = await req.json().catch(() => ({}));\n      const schema = z.object({ tenant: z.string().min(1), ttl_minutes: z.number().min(5).max(1440).default(60) });\n      const parsed = schema.safeParse(body);\n      if (!parsed.success) return json({ success: false, error: { code: \"VALIDATION\", details: parsed.error.issues } }, 400, corsHdrs);\n      const { tenant, ttl_minutes } = parsed.data;\n\n      const cfg = await ensureTenant(env, tenant);\n      const token = await issueTenantAdminJWT(env, { tenant_id: cfg.id, ttlMinutes: ttl_minutes });\n      const base = env.SETUP_URL || \"https://setup.yourbrand.app\";\n      const setup_url = `${base}/?token=${encodeURIComponent(token)}`;\n\n      return json({ success: true, data: { setup_url } }, 200, corsHdrs);\n    }\n\n    // Set tenant flags (existing route, kept for backward compatibility)\n    if (url.pathname === `/api/${v}/admin/tenant/flags` && req.method === \"POST\") {\n      await requireAdmin(req, env);\n      const body = await req.json().catch(() => null);\n      if (!body?.tenant || typeof body.flags !== \"object\") {\n        return json({ success: false, error: { code: \"VALIDATION\", message: \"tenant + flags required\" } }, 400, corsHdrs);\n      }\n      const updated = await updateFlags(env, body.tenant, body.flags);\n      return json({ success: true, data: { updated: true, flags: updated.flags } }, 200, corsHdrs);\n    }\n\n    // Store YouTube OAuth creds (existing route)\n    if (url.pathname === `/api/${v}/admin/tenant/youtube-token` && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const body = await req.json().catch(() => null);\n      if (!body?.tenant || !body?.client_id || !body?.client_secret || !body?.refresh_token) {\n        return json({ success: false, error: { code: \"VALIDATION\", message: \"tenant, client_id, client_secret, refresh_token\" } }, 400, corsHdrs);\n      }\n      await env.KV_IDEMP.put(\n        `yt:${body.tenant}`,\n        JSON.stringify({\n          client_id: body.client_id,\n          client_secret: body.client_secret,\n          refresh_token: body.refresh_token,\n          channel_id: body.channel_id || null\n        })\n      );\n      return json({ success: true, data: { stored: true } }, 200, corsHdrs);\n    }\n\n    // GET /api/v1/admin/yt/start?tenant=club-123\n    // Initiates YouTube OAuth flow for managed plans\n    if (url.pathname === `/api/${v}/admin/yt/start` && req.method === \"GET\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const tenant = url.searchParams.get(\"tenant\");\n      if (!tenant) return json({ success: false, error: { code: \"VALIDATION\", message: \"tenant required\" } }, 400, corsHdrs);\n\n      const cid = env.YT_CLIENT_ID as string;\n      const redirect = env.YT_REDIRECT_URL as string;\n      if (!cid || !redirect) {\n        return json({ success: false, error: { code: \"CONFIG\", message: \"YT_CLIENT_ID or YT_REDIRECT_URL not configured\" } }, 500, corsHdrs);\n      }\n\n      const scope = encodeURIComponent(\"https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.readonly\");\n      const authUrl = `https://accounts.google.com/o/oauth2/v2/auth?response_type=code&client_id=${encodeURIComponent(cid)}&redirect_uri=${encodeURIComponent(redirect)}&scope=${scope}&access_type=offline&prompt=consent&state=${encodeURIComponent(tenant)}`;\n      return json({ success: true, data: { url: authUrl } }, 200, corsHdrs);\n    }\n\n    // GET /api/v1/admin/yt/callback?code=...&state=tenant\n    // OAuth callback endpoint - exchanges code for tokens\n    if (url.pathname === `/api/${v}/admin/yt/callback` && req.method === \"GET\") {\n      const code = url.searchParams.get(\"code\");\n      const tenant = url.searchParams.get(\"state\") || \"\";\n\n      if (!code || !tenant) return new Response(\"Missing code/state\", { status: 400 });\n\n      const cid = env.YT_CLIENT_ID as string;\n      const cs = env.YT_CLIENT_SECRET as string;\n      const redirect = env.YT_REDIRECT_URL as string;\n\n      const body = new URLSearchParams({\n        code,\n        client_id: cid,\n        client_secret: cs,\n        redirect_uri: redirect,\n        grant_type: \"authorization_code\"\n      });\n\n      const r = await fetch(\"https://oauth2.googleapis.com/token\", {\n        method: \"POST\",\n        headers: { \"content-type\": \"application/x-www-form-urlencoded\" },\n        body\n      });\n\n      if (!r.ok) return new Response(\"Token exchange failed\", { status: 502 });\n\n      const tok = await r.json() as any;\n\n      // Store into tenant config\n      const cfg = await ensureTenant(env, tenant);\n      // @ts-ignore\n      cfg.youtube = { ...tok };\n      await putTenantConfig(env, cfg);\n\n      return new Response(\"YouTube connected. You can close this window.\", { status: 200 });\n    }\n\n    // POST /api/v1/admin/tenant/channel/flags\n    // Set per-channel managed toggles\n    if (url.pathname === `/api/${v}/admin/tenant/channel/flags` && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const body = await req.json().catch(() => ({}));\n      const schema = z.object({\n        tenant: z.string().min(1),\n        managed: z.record(z.boolean()).optional(),\n      });\n      const parsed = schema.safeParse(body);\n      if (!parsed.success) return json({ success: false, error: { code: \"VALIDATION\", details: parsed.error.issues } }, 400, corsHdrs);\n\n      const { tenant, managed } = parsed.data;\n      const updated = await setTenantFlags(env, tenant, { managed });\n      return json({ success: true, data: { tenant: updated.id, flags: updated.flags } }, 200, corsHdrs);\n    }\n\n    // POST /api/v1/admin/tenant/channel/webhook\n    // Set BYO-Make webhook per channel\n    if (url.pathname === `/api/${v}/admin/tenant/channel/webhook` && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const body = await req.json().catch(() => ({}));\n      const schema = z.object({\n        tenant: z.string().min(1),\n        channel: z.enum([\"yt\", \"fb\", \"ig\", \"tiktok\", \"x\"]),\n        url: z.string().url(),\n      });\n      const parsed = schema.safeParse(body);\n      if (!parsed.success) return json({ success: false, error: { code: \"VALIDATION\", details: parsed.error.issues } }, 400, corsHdrs);\n\n      const { tenant, channel, url: webhookUrl } = parsed.data;\n      const updated = await setChannelWebhook(env, tenant, channel, webhookUrl);\n      return json({ success: true, data: { tenant: updated.id, channel, webhook: webhookUrl } }, 200, corsHdrs);\n    }\n\n    // POST /api/v1/admin/tenant/yt/byo-google\n    // Set BYO-Google client (YouTube)\n    if (url.pathname === `/api/${v}/admin/tenant/yt/byo-google` && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const body = await req.json().catch(() => ({}));\n      const schema = z.object({\n        tenant: z.string().min(1),\n        client_id: z.string().min(1),\n        client_secret: z.string().min(1),\n      });\n      const parsed = schema.safeParse(body);\n      if (!parsed.success) return json({ success: false, error: { code: \"VALIDATION\", details: parsed.error.issues } }, 400, corsHdrs);\n\n      const { tenant, client_id, client_secret } = parsed.data;\n      const updated = await setYouTubeBYOGoogle(env, tenant, client_id, client_secret);\n      return json({ success: true, data: { tenant: updated.id, byo_google: true } }, 200, corsHdrs);\n    }\n\n    // -------- Tenant self-serve endpoints --------\n\n    // GET /api/v1/tenant/self\n    if (url.pathname === `/api/${v}/tenant/self` && req.method === \"GET\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"tenant_admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const tenantId = user.tenantId;\n      const cfg = await ensureTenant(env, tenantId);\n      // Mask webhook\n      let masked = null;\n      if (cfg.makeWebhookUrl) {\n        const end = cfg.makeWebhookUrl.slice(-6);\n        masked = `***${end}`;\n      }\n      return json({ success: true, data: { id: cfg.id, flags: cfg.flags, makeWebhookMasked: masked } }, 200, corsHdrs);\n    }\n\n    // POST /api/v1/tenant/self/webhook\n    if (url.pathname === `/api/${v}/tenant/self/webhook` && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"tenant_admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const tenantId = user.tenantId;\n      const body = await req.json().catch(() => ({}));\n      const schema = z.object({ make_webhook_url: z.string().url() });\n      const parsed = schema.safeParse(body);\n      if (!parsed.success) return json({ success: false, error: { code: \"VALIDATION\", details: parsed.error.issues } }, 400, corsHdrs);\n\n      const u = new URL(parsed.data.make_webhook_url);\n      // Add .make.com suffix support globally\n      const allowedCsv = (env.ALLOWED_WEBHOOK_HOSTS || \"\") + \",.make.com\";\n      if (!isAllowedWebhookHost(u.host, allowedCsv)) {\n        return json({ success: false, error: { code: \"VALIDATION\", message: `Host ${u.host} not allowed` } }, 400, corsHdrs);\n      }\n\n      await setMakeWebhook(env, tenantId, u.toString());\n      return json({ success: true, data: { saved: true } }, 200, corsHdrs);\n    }\n\n    // POST /api/v1/tenant/self/flags\n    if (url.pathname === `/api/${v}/tenant/self/flags` && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"tenant_admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const tenantId = user.tenantId;\n      const body = await req.json().catch(() => ({}));\n      const schema = z.object({ use_make: z.boolean().optional(), direct_yt: z.boolean().optional() });\n      const parsed = schema.safeParse(body);\n      if (!parsed.success) return json({ success: false, error: { code: \"VALIDATION\", details: parsed.error.issues } }, 400, corsHdrs);\n      const updated = await updateFlags(env, tenantId, parsed.data);\n      return json({ success: true, data: { flags: updated.flags } }, 200, corsHdrs);\n    }\n\n    // POST /api/v1/tenant/self/test-webhook\n    if (url.pathname === `/api/${v}/tenant/self/test-webhook` && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"tenant_admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const tenantId = user.tenantId;\n      const cfg = await ensureTenant(env, tenantId);\n\n      if (!cfg.flags.use_make || !cfg.makeWebhookUrl) {\n        return json({ success: false, error: { code: \"INVALID_STATE\", message: \"Enable BYO-Make and set webhook first\" } }, 400, corsHdrs);\n      }\n      try {\n        const r = await fetch(cfg.makeWebhookUrl, {\n          method: \"POST\",\n          headers: { \"content-type\": \"application/json\" },\n          body: JSON.stringify({ kind: \"test\", tenant: tenantId, ts: Date.now() })\n        });\n        return json({ success: r.ok, data: { status: r.status } }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"UPSTREAM\", message: e?.message || \"webhook failed\" } }, 502, corsHdrs);\n      }\n    }\n\n    // -------- Stripe Webhook --------\n    // POST /api/v1/stripe/webhook\n    // Handles Stripe events to update tenant plans\n    if (url.pathname === `/api/${v}/stripe/webhook` && req.method === \"POST\") {\n      // Guard: check if Stripe is configured\n      if (!env.STRIPE_SECRET_KEY && !env.STRIPE_WEBHOOK_SECRET) {\n        return json({ success: false, error: { code: \"STRIPE_DISABLED\", message: \"Stripe not configured\" } }, 503, corsHdrs);\n      }\n\n      const evt = await req.json().catch(() => null);\n      if (!evt) return new Response(\"bad json\", { status: 400 });\n\n      try {\n        const type = evt.type;\n        // Determine tenant + plan from metadata or customer mapping\n        const tenant = evt.data?.object?.metadata?.tenant || evt.data?.object?.metadata?.tenant_id;\n        if (!tenant) return new Response(\"ok\", { status: 200 });\n\n        // Simple example mapping\n        if (type === \"customer.subscription.created\" || type === \"customer.subscription.updated\") {\n          const plan = evt.data.object?.plan?.nickname || evt.data.object?.items?.data?.[0]?.price?.nickname || \"\";\n          const managed = /managed|pro|premium/i.test(plan);\n          const cfg = await ensureTenant(env, tenant);\n          cfg.flags = { use_make: !managed, direct_yt: managed };\n          await putTenantConfig(env, cfg);\n        }\n      } catch (e) {\n        // Swallow errors\n      }\n\n      return new Response(\"ok\", { status: 200 });\n    }\n\n    // -------- MOTM Voting (Admin) --------\n\n    // POST /api/v1/admin/matches/:matchId/motm/open\n    if (url.pathname.match(new RegExp(`^/api/${v}/admin/matches/[^/]+/motm/open$`)) && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const matchId = url.pathname.split(\"/\")[5];\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n\n      const id = env.VotingRoom.idFromName(`${tenant}:${matchId}`);\n      const stub = env.VotingRoom.get(id);\n      const voteBody = { tenant, matchId, ...body };\n      const r = await stub.fetch(\"https://do/open\", { method: \"POST\", body: JSON.stringify(voteBody) });\n      return json(await r.json(), r.status, corsHdrs);\n    }\n\n    // POST /api/v1/admin/matches/:matchId/motm/close\n    if (url.pathname.match(new RegExp(`^/api/${v}/admin/matches/[^/]+/motm/close$`)) && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const matchId = url.pathname.split(\"/\")[5];\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n\n      const id = env.VotingRoom.idFromName(`${tenant}:${matchId}`);\n      const stub = env.VotingRoom.get(id);\n      const r = await stub.fetch(\"https://do/close\", { method: \"POST\" });\n      return json(await r.json(), r.status, corsHdrs);\n    }\n\n    // GET /api/v1/admin/matches/:matchId/motm/tally\n    if (url.pathname.match(new RegExp(`^/api/${v}/admin/matches/[^/]+/motm/tally$`)) && req.method === \"GET\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const matchId = url.pathname.split(\"/\")[5];\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n\n      const id = env.VotingRoom.idFromName(`${tenant}:${matchId}`);\n      const stub = env.VotingRoom.get(id);\n      const r = await stub.fetch(\"https://do/tally\");\n      return json(await r.json(), r.status, corsHdrs);\n    }\n\n    // -------- MOTM Voting (App) --------\n\n    // POST /api/v1/matches/:matchId/motm/vote\n    if (url.pathname.match(new RegExp(`^/api/${v}/matches/[^/]+/motm/vote$`)) && req.method === \"POST\") {\n      const matchId = url.pathname.split(\"/\")[4];\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n\n      // Simple user hash from IP + User-Agent (anonymous voting)\n      const ip = req.headers.get(\"cf-connecting-ip\") || req.headers.get(\"x-forwarded-for\") || \"unknown\";\n      const ua = req.headers.get(\"user-agent\") || \"\";\n      const userHash = `${ip}:${ua}`.substring(0, 64);\n\n      const id = env.VotingRoom.idFromName(`${tenant}:${matchId}`);\n      const stub = env.VotingRoom.get(id);\n      const voteBody = { candidateId: body.candidateId, userHash };\n      const r = await stub.fetch(\"https://do/vote\", { method: \"POST\", body: JSON.stringify(voteBody) });\n      return json(await r.json(), r.status, corsHdrs);\n    }\n\n    // -------- Events (Admin) --------\n\n    // POST /api/v1/admin/events\n    if (url.pathname === `/api/${v}/admin/events` && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n      const now = Date.now();\n      body.createdAt = body.createdAt || now;\n      body.updatedAt = now;\n      await putEvent(env, tenant, body);\n      return json({ success: true, data: { id: body.id } }, 200, corsHdrs);\n    }\n\n    // PATCH /api/v1/admin/events/:id\n    if (url.pathname.match(new RegExp(`^/api/${v}/admin/events/[^/]+$`)) && req.method === \"PATCH\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const eventId = url.pathname.split(\"/\").pop()!;\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n\n      const cur = await getEvent(env, tenant, eventId);\n      if (!cur) return json({ success: false, error: { code: \"NOT_FOUND\" } }, 404, corsHdrs);\n\n      const next = { ...cur, ...body, updatedAt: Date.now() };\n      await putEvent(env, tenant, next);\n      return json({ success: true, data: { id: eventId } }, 200, corsHdrs);\n    }\n\n    // DELETE /api/v1/admin/events/:id\n    if (url.pathname.match(new RegExp(`^/api/${v}/admin/events/[^/]+$`)) && req.method === \"DELETE\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const eventId = url.pathname.split(\"/\").pop()!;\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n\n      await deleteEvent(env, tenant, eventId);\n      return json({ success: true }, 200, corsHdrs);\n    }\n\n    // -------- Events (App) --------\n\n    // GET /api/v1/events\n    if (url.pathname === `/api/${v}/events` && req.method === \"GET\") {\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n      const list = await listEvents(env, tenant);\n      return json({ success: true, data: list }, 200, corsHdrs);\n    }\n\n    // GET /api/v1/events/:id\n    if (url.pathname.match(new RegExp(`^/api/${v}/events/[^/]+$`)) && req.method === \"GET\") {\n      const eventId = url.pathname.split(\"/\").pop()!;\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n\n      const ev = await getEvent(env, tenant, eventId);\n      if (!ev) return json({ success: false, error: { code: \"NOT_FOUND\" } }, 404, corsHdrs);\n\n      return json({ success: true, data: ev }, 200, corsHdrs);\n    }\n\n    // POST /api/v1/events/:id/rsvp\n    if (url.pathname.match(new RegExp(`^/api/${v}/events/[^/]+/rsvp$`)) && req.method === \"POST\") {\n      const eventId = url.pathname.split(\"/\")[4];\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n      const userId = body.userId || \"anonymous\";\n      const rsvp = body.rsvp as \"yes\" | \"no\" | \"maybe\";\n\n      if (![\"yes\", \"no\", \"maybe\"].includes(rsvp)) {\n        return json({ success: false, error: { code: \"VALIDATION\", message: \"rsvp must be yes/no/maybe\" } }, 400, corsHdrs);\n      }\n\n      await setRsvp(env, tenant, eventId, userId, rsvp);\n      return json({ success: true }, 200, corsHdrs);\n    }\n\n    // POST /api/v1/events/:id/checkin\n    if (url.pathname.match(new RegExp(`^/api/${v}/events/[^/]+/checkin$`)) && req.method === \"POST\") {\n      const eventId = url.pathname.split(\"/\")[4];\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n      const userId = body.userId || \"anonymous\";\n\n      await addCheckin(env, tenant, eventId, userId);\n      return json({ success: true, data: { ts: Date.now() } }, 200, corsHdrs);\n    }\n\n    // -------- Device Registration (for Push) --------\n\n    // POST /api/v1/devices/register\n    if (url.pathname === `/api/${v}/devices/register` && req.method === \"POST\") {\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n      const userId = body.userId || \"anonymous\";\n      const platform = body.platform || \"unknown\";\n      const token = body.token;\n\n      if (!token) {\n        return json({ success: false, error: { code: \"VALIDATION\", message: \"token required\" } }, 400, corsHdrs);\n      }\n\n      await registerDevice(env, tenant, userId, platform, token);\n      return json({ success: true }, 200, corsHdrs);\n    }\n\n    // -------- Push Token Registration (for live updates) --------\n\n    // POST /api/v1/push/register\n    if (url.pathname === `/api/${v}/push/register` && req.method === \"POST\") {\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n      const teamId = body.teamId;\n      const token = body.token;\n\n      if (!token) {\n        return json({ success: false, error: { code: \"VALIDATION\", message: \"token required\" } }, 400, corsHdrs);\n      }\n\n      // Global tokens\n      const tokensKey = `tenants:${tenant}:push:tokens`;\n      const existing = ((await env.KV_IDEMP.get(tokensKey, \"json\")) as string[]) || [];\n      if (!existing.includes(token)) {\n        existing.push(token);\n        await env.KV_IDEMP.put(tokensKey, JSON.stringify(existing));\n      }\n\n      // Team-specific tokens\n      if (teamId) {\n        const teamKey = `tenants:${tenant}:team:${teamId}:tokens`;\n        const teamTokens = ((await env.KV_IDEMP.get(teamKey, \"json\")) as string[]) || [];\n        if (!teamTokens.includes(token)) {\n          teamTokens.push(token);\n          await env.KV_IDEMP.put(teamKey, JSON.stringify(teamTokens));\n        }\n      }\n\n      return json({ success: true }, 200, corsHdrs);\n    }\n\n    // -------- League Tables & Fixtures --------\n\n    // GET /api/v1/league/:leagueId/table\n    if (url.pathname.match(new RegExp(`^/api/${v}/league/[^/]+/table$`)) && req.method === \"GET\") {\n      const leagueId = url.pathname.split(\"/\")[4];\n      const season = url.searchParams.get(\"season\") || new Date().getFullYear().toString();\n\n      try {\n        const fixturesBase = (env.FIXTURES_REFRESH_URL || \"\").replace(\"/refresh\", \"\");\n        const upstreamUrl = `${fixturesBase}/table?league=${leagueId}&season=${season}`;\n        const r = await fetch(upstreamUrl);\n        const data = await r.json();\n        if (!r.ok || !data.ok) {\n          return json({ success: false, error: { code: \"UPSTREAM_ERROR\", message: data.message || \"Failed\" } }, r.status, corsHdrs);\n        }\n        return json({ success: true, data: data.data }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"FETCH_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // GET /api/v1/league/:leagueId/fixtures\n    if (url.pathname.match(new RegExp(`^/api/${v}/league/[^/]+/fixtures$`)) && req.method === \"GET\") {\n      const leagueId = url.pathname.split(\"/\")[4];\n      const season = url.searchParams.get(\"season\") || new Date().getFullYear().toString();\n\n      try {\n        const fixturesBase = (env.FIXTURES_REFRESH_URL || \"\").replace(\"/refresh\", \"\");\n        const upstreamUrl = `${fixturesBase}/fixtures?league=${leagueId}&season=${season}`;\n        const r = await fetch(upstreamUrl);\n        const data = await r.json();\n        if (!r.ok || !data.ok) {\n          return json({ success: false, error: { code: \"UPSTREAM_ERROR\", message: data.message || \"Failed\" } }, r.status, corsHdrs);\n        }\n        return json({ success: true, data: data.data }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"FETCH_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // GET /api/v1/league/:leagueId/results\n    if (url.pathname.match(new RegExp(`^/api/${v}/league/[^/]+/results$`)) && req.method === \"GET\") {\n      const leagueId = url.pathname.split(\"/\")[4];\n      const season = url.searchParams.get(\"season\") || new Date().getFullYear().toString();\n\n      try {\n        const fixturesBase = (env.FIXTURES_REFRESH_URL || \"\").replace(\"/refresh\", \"\");\n        const upstreamUrl = `${fixturesBase}/results?league=${leagueId}&season=${season}`;\n        const r = await fetch(upstreamUrl);\n        const data = await r.json();\n        if (!r.ok || !data.ok) {\n          return json({ success: false, error: { code: \"UPSTREAM_ERROR\", message: data.message || \"Failed\" } }, r.status, corsHdrs);\n        }\n        return json({ success: true, data: data.data }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"FETCH_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // GET /api/v1/league/:leagueId/seasons\n    if (url.pathname.match(new RegExp(`^/api/${v}/league/[^/]+/seasons$`)) && req.method === \"GET\") {\n      const leagueId = url.pathname.split(\"/\")[4];\n\n      try {\n        const fixturesBase = (env.FIXTURES_REFRESH_URL || \"\").replace(\"/refresh\", \"\");\n        const upstreamUrl = `${fixturesBase}/seasons?league=${leagueId}`;\n        const r = await fetch(upstreamUrl);\n        const data = await r.json();\n        if (!r.ok || !data.ok) {\n          return json({ success: false, error: { code: \"UPSTREAM_ERROR\", message: data.message || \"Failed\" } }, r.status, corsHdrs);\n        }\n        return json({ success: true, data: data.data }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"FETCH_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // -------- Live Match Ticker (Admin) --------\n\n    // POST /api/v1/admin/matches/:matchId/live/open\n    if (url.pathname.match(new RegExp(`^/api/${v}/admin/matches/[^/]+/live/open$`)) && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const matchId = url.pathname.split(\"/\")[5];\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n\n      const id = env.MatchRoom.idFromName(`${tenant}::${matchId}`);\n      const stub = env.MatchRoom.get(id);\n      const matchBody = { tenant, matchId, ...body };\n      const r = await stub.fetch(\"https://do/open\", { method: \"POST\", body: JSON.stringify(matchBody) });\n      return json(await r.json(), r.status, corsHdrs);\n    }\n\n    // POST /api/v1/admin/matches/:matchId/live/event\n    if (url.pathname.match(new RegExp(`^/api/${v}/admin/matches/[^/]+/live/event$`)) && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const matchId = url.pathname.split(\"/\")[5];\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n\n      const id = env.MatchRoom.idFromName(`${tenant}::${matchId}`);\n      const stub = env.MatchRoom.get(id);\n      const r = await stub.fetch(\"https://do/event\", { method: \"POST\", body: JSON.stringify(body) });\n      return json(await r.json(), r.status, corsHdrs);\n    }\n\n    // POST /api/v1/admin/matches/:matchId/live/close\n    if (url.pathname.match(new RegExp(`^/api/${v}/admin/matches/[^/]+/live/close$`)) && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const matchId = url.pathname.split(\"/\")[5];\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n\n      const id = env.MatchRoom.idFromName(`${tenant}::${matchId}`);\n      const stub = env.MatchRoom.get(id);\n      const r = await stub.fetch(\"https://do/close\", { method: \"POST\" });\n      return json(await r.json(), r.status, corsHdrs);\n    }\n\n    // -------- Live Match Ticker (App) --------\n\n    // GET /api/v1/matches/:matchId/live\n    if (url.pathname.match(new RegExp(`^/api/${v}/matches/[^/]+/live$`)) && req.method === \"GET\") {\n      const matchId = url.pathname.split(\"/\")[4];\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n\n      const id = env.MatchRoom.idFromName(`${tenant}::${matchId}`);\n      const stub = env.MatchRoom.get(id);\n      const r = await stub.fetch(\"https://do/tally\");\n      return json(await r.json(), r.status, corsHdrs);\n    }\n\n    // -------- Push Notifications & Geo-Fencing --------\n\n    // POST /api/v1/push/register - Register push notification token\n    if (url.pathname === `/api/${v}/push/register` && req.method === \"POST\") {\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n      const token = body.token;\n      const platform = body.platform; // 'ios' or 'android'\n\n      if (!token) {\n        return json({ success: false, error: { code: \"MISSING_TOKEN\", message: \"Push token required\" } }, 400, corsHdrs);\n      }\n\n      // Store push token in KV\n      const tokensKey = `tenants:${tenant}:push:tokens`;\n      const tokens = ((await env.KV_IDEMP.get(tokensKey, \"json\")) as string[]) || [];\n\n      // Add token if not already present\n      if (!tokens.includes(token)) {\n        tokens.push(token);\n        await env.KV_IDEMP.put(tokensKey, JSON.stringify(tokens));\n      }\n\n      // Store token metadata\n      const tokenMetaKey = `tenants:${tenant}:push:token:${token}`;\n      await env.KV_IDEMP.put(tokenMetaKey, JSON.stringify({\n        token,\n        platform,\n        registered: Date.now()\n      }));\n\n      return json({ success: true, data: { registered: true } }, 200, corsHdrs);\n    }\n\n    // POST /api/v1/push/location - Update user location for geo-fencing\n    if (url.pathname === `/api/${v}/push/location` && req.method === \"POST\") {\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n      const token = body.token;\n      const latitude = body.latitude;\n      const longitude = body.longitude;\n      const timestamp = body.timestamp || Date.now();\n\n      if (!token || latitude === undefined || longitude === undefined) {\n        return json({ success: false, error: { code: \"MISSING_DATA\", message: \"Token and location required\" } }, 400, corsHdrs);\n      }\n\n      // Store location in KV (expires after 30 minutes)\n      const locationKey = `tenants:${tenant}:push:location:${token}`;\n      await env.KV_IDEMP.put(locationKey, JSON.stringify({\n        latitude,\n        longitude,\n        timestamp\n      }), {\n        expirationTtl: 1800 // 30 minutes\n      });\n\n      return json({ success: true, data: { updated: true } }, 200, corsHdrs);\n    }\n\n    // POST /api/v1/geo/:matchId/init - Initialize geo-fence for match\n    if (url.pathname.match(new RegExp(`^/api/${v}/geo/[^/]+/init$`)) && req.method === \"POST\") {\n      const matchId = url.pathname.split(\"/\")[4];\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n      const venueLatitude = body.venueLatitude;\n      const venueLongitude = body.venueLongitude;\n\n      const id = env.GeoFenceManager.idFromName(`${tenant}::${matchId}`);\n      const stub = env.GeoFenceManager.get(id);\n      const geoBody = { tenant, matchId, venueLatitude, venueLongitude };\n      const r = await stub.fetch(\"https://do/init\", { method: \"POST\", body: JSON.stringify(geoBody) });\n      return json(await r.json(), r.status, corsHdrs);\n    }\n\n    // POST /api/v1/geo/:matchId/venue - Set venue location\n    if (url.pathname.match(new RegExp(`^/api/${v}/geo/[^/]+/venue$`)) && req.method === \"POST\") {\n      const matchId = url.pathname.split(\"/\")[4];\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n      const latitude = body.latitude;\n      const longitude = body.longitude;\n\n      if (latitude === undefined || longitude === undefined) {\n        return json({ success: false, error: { code: \"MISSING_LOCATION\", message: \"Latitude and longitude required\" } }, 400, corsHdrs);\n      }\n\n      const id = env.GeoFenceManager.idFromName(`${tenant}::${matchId}`);\n      const stub = env.GeoFenceManager.get(id);\n      const geoBody = { latitude, longitude };\n      const r = await stub.fetch(\"https://do/venue\", { method: \"POST\", body: JSON.stringify(geoBody) });\n      return json(await r.json(), r.status, corsHdrs);\n    }\n\n    // GET /api/v1/geo/:matchId/tokens - Get notification tokens (excluding users at venue)\n    if (url.pathname.match(new RegExp(`^/api/${v}/geo/[^/]+/tokens$`)) && req.method === \"GET\") {\n      const matchId = url.pathname.split(\"/\")[4];\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n\n      const id = env.GeoFenceManager.idFromName(`${tenant}::${matchId}`);\n      const stub = env.GeoFenceManager.get(id);\n      const r = await stub.fetch(\"https://do/tokens\");\n      return json(await r.json(), r.status, corsHdrs);\n    }\n\n    // GET /api/v1/geo/:matchId/state - Get geo-fence state (debug)\n    if (url.pathname.match(new RegExp(`^/api/${v}/geo/[^/]+/state$`)) && req.method === \"GET\") {\n      const matchId = url.pathname.split(\"/\")[4];\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n\n      const id = env.GeoFenceManager.idFromName(`${tenant}::${matchId}`);\n      const stub = env.GeoFenceManager.get(id);\n      const r = await stub.fetch(\"https://do/state\");\n      return json(await r.json(), r.status, corsHdrs);\n    }\n\n    // -------- Video Routes --------\n\n    // POST /api/v1/videos/upload - Upload video from mobile app\n    if (url.pathname === `/api/${v}/videos/upload` && req.method === \"POST\") {\n      const formData = await req.formData();\n      const tenant = formData.get(\"tenant\") || \"default\";\n      const userId = formData.get(\"user_id\") || \"anonymous\";\n      const videoFile = formData.get(\"video\");\n\n      if (!videoFile || !(videoFile instanceof File)) {\n        return json({ success: false, error: { code: \"MISSING_VIDEO\", message: \"Video file required\" } }, 400, corsHdrs);\n      }\n\n      // Generate video ID\n      const videoId = `vid-${Date.now()}-${Math.random().toString(36).substring(7)}`;\n\n      // Store in R2\n      const r2Key = `videos/${tenant}/uploads/${videoId}.mp4`;\n      const arrayBuffer = await videoFile.arrayBuffer();\n      await env.R2_MEDIA.put(r2Key, arrayBuffer, {\n        httpMetadata: {\n          contentType: \"video/mp4\",\n        },\n        customMetadata: {\n          tenant,\n          userId,\n          uploadedAt: new Date().toISOString(),\n        },\n      });\n\n      // Store metadata in KV\n      const videoMetadata = {\n        id: videoId,\n        tenant,\n        userId,\n        filename: videoFile.name,\n        size: videoFile.size,\n        r2Key,\n        uploadTimestamp: Date.now(),\n        status: \"uploaded\",\n        processingProgress: 0,\n      };\n\n      await env.KV_IDEMP.put(`video:${tenant}:${videoId}`, JSON.stringify(videoMetadata));\n\n      // Add to tenant's video list\n      const videoListKey = `video_list:${tenant}`;\n      const videoList = ((await env.KV_IDEMP.get(videoListKey, \"json\")) as string[]) || [];\n      videoList.unshift(videoId);\n      await env.KV_IDEMP.put(videoListKey, JSON.stringify(videoList.slice(0, 100))); // Keep last 100\n\n      return json({ success: true, data: { videoId, status: \"uploaded\" } }, 200, corsHdrs);\n    }\n\n    // GET /api/v1/videos - List videos for tenant\n    if (url.pathname === `/api/${v}/videos` && req.method === \"GET\") {\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n      const limit = parseInt(url.searchParams.get(\"limit\") || \"20\");\n      const offset = parseInt(url.searchParams.get(\"offset\") || \"0\");\n\n      const videoListKey = `video_list:${tenant}`;\n      const videoList = ((await env.KV_IDEMP.get(videoListKey, \"json\")) as string[]) || [];\n\n      const videoIds = videoList.slice(offset, offset + limit);\n      const videos = [];\n\n      for (const videoId of videoIds) {\n        const metadata = await env.KV_IDEMP.get(`video:${tenant}:${videoId}`, \"json\");\n        if (metadata) {\n          videos.push(metadata);\n        }\n      }\n\n      return json({ success: true, data: { videos, total: videoList.length } }, 200, corsHdrs);\n    }\n\n    // GET /api/v1/videos/:id - Get video details\n    if (url.pathname.match(new RegExp(`^/api/${v}/videos/[^/]+$`)) && req.method === \"GET\") {\n      const videoId = url.pathname.split(\"/\")[4];\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n\n      const metadata = await env.KV_IDEMP.get(`video:${tenant}:${videoId}`, \"json\");\n\n      if (!metadata) {\n        return json({ success: false, error: { code: \"VIDEO_NOT_FOUND\", message: \"Video not found\" } }, 404, corsHdrs);\n      }\n\n      return json({ success: true, data: metadata }, 200, corsHdrs);\n    }\n\n    // GET /api/v1/videos/:id/status - Get processing status\n    if (url.pathname.match(new RegExp(`^/api/${v}/videos/[^/]+/status$`)) && req.method === \"GET\") {\n      const videoId = url.pathname.split(\"/\")[4];\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n\n      const metadata = await env.KV_IDEMP.get(`video:${tenant}:${videoId}`, \"json\") as any;\n\n      if (!metadata) {\n        return json({ success: false, error: { code: \"VIDEO_NOT_FOUND\", message: \"Video not found\" } }, 404, corsHdrs);\n      }\n\n      return json({\n        success: true,\n        data: {\n          videoId,\n          status: metadata.status || \"uploaded\",\n          progress: metadata.processingProgress || 0,\n          clips: metadata.clips || [],\n        },\n      }, 200, corsHdrs);\n    }\n\n    // POST /api/v1/videos/:id/process - Trigger AI processing\n    if (url.pathname.match(new RegExp(`^/api/${v}/videos/[^/]+/process$`)) && req.method === \"POST\") {\n      const videoId = url.pathname.split(\"/\")[4];\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n\n      const metadata = await env.KV_IDEMP.get(`video:${tenant}:${videoId}`, \"json\") as any;\n\n      if (!metadata) {\n        return json({ success: false, error: { code: \"VIDEO_NOT_FOUND\", message: \"Video not found\" } }, 404, corsHdrs);\n      }\n\n      // Update status to processing\n      metadata.status = \"processing\";\n      metadata.processingProgress = 0;\n      await env.KV_IDEMP.put(`video:${tenant}:${videoId}`, JSON.stringify(metadata));\n\n      // TODO: Trigger video processing worker (Queue or Durable Object)\n      // For now, just update status\n\n      return json({ success: true, data: { videoId, status: \"processing\" } }, 200, corsHdrs);\n    }\n\n    // DELETE /api/v1/videos/:id - Delete video\n    if (url.pathname.match(new RegExp(`^/api/${v}/videos/[^/]+$`)) && req.method === \"DELETE\") {\n      const videoId = url.pathname.split(\"/\")[4];\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n\n      const metadata = await env.KV_IDEMP.get(`video:${tenant}:${videoId}`, \"json\") as any;\n\n      if (!metadata) {\n        return json({ success: false, error: { code: \"VIDEO_NOT_FOUND\", message: \"Video not found\" } }, 404, corsHdrs);\n      }\n\n      // Delete from R2\n      await env.R2_MEDIA.delete(metadata.r2Key);\n\n      // Delete metadata\n      await env.KV_IDEMP.delete(`video:${tenant}:${videoId}`);\n\n      // Remove from video list\n      const videoListKey = `video_list:${tenant}`;\n      const videoList = ((await env.KV_IDEMP.get(videoListKey, \"json\")) as string[]) || [];\n      const updatedList = videoList.filter((id) => id !== videoId);\n      await env.KV_IDEMP.put(videoListKey, JSON.stringify(updatedList));\n\n      return json({ success: true, data: { deleted: true } }, 200, corsHdrs);\n    }\n\n    // GET /api/v1/videos/:id/clips - List generated clips\n    if (url.pathname.match(new RegExp(`^/api/${v}/videos/[^/]+/clips$`)) && req.method === \"GET\") {\n      const videoId = url.pathname.split(\"/\")[4];\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n\n      const metadata = await env.KV_IDEMP.get(`video:${tenant}:${videoId}`, \"json\") as any;\n\n      if (!metadata) {\n        return json({ success: false, error: { code: \"VIDEO_NOT_FOUND\", message: \"Video not found\" } }, 404, corsHdrs);\n      }\n\n      return json({ success: true, data: { clips: metadata.clips || [] } }, 200, corsHdrs);\n    }\n\n    // -------- Chat Routes --------\n\n    // POST /api/v1/chat/:roomId/send\n    if (url.pathname.match(new RegExp(`^/api/${v}/chat/[^/]+/send$`)) && req.method === \"POST\") {\n      const roomId = url.pathname.split(\"/\")[4];\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n\n      // Rate limit: 1 msg/sec per user (using TenantRateLimiter)\n      const userId = body.userId || \"anonymous\";\n      const rateLimitKey = `${tenant}:chat:${roomId}:${userId}`;\n      const limitId = env.TenantRateLimiter.idFromName(rateLimitKey);\n      const limiterStub = env.TenantRateLimiter.get(limitId);\n      const limitCheck = await limiterStub.fetch(\"https://do/check\", {\n        method: \"POST\",\n        body: JSON.stringify({ key: rateLimitKey, limit: 1, window: 1000 }),\n      });\n      const limitResult = await limitCheck.json();\n      if (!limitResult.allowed) {\n        return json({ success: false, error: { code: \"RATE_LIMIT\", message: \"Too many messages\" } }, 429, corsHdrs);\n      }\n\n      const id = env.ChatRoom.idFromName(`${tenant}::${roomId}`);\n      const stub = env.ChatRoom.get(id);\n      const chatBody = { tenant, roomId, ...body };\n      const r = await stub.fetch(\"https://do/send\", { method: \"POST\", body: JSON.stringify(chatBody) });\n      return json(await r.json(), r.status, corsHdrs);\n    }\n\n    // GET /api/v1/chat/:roomId/history\n    if (url.pathname.match(new RegExp(`^/api/${v}/chat/[^/]+/history$`)) && req.method === \"GET\") {\n      const roomId = url.pathname.split(\"/\")[4];\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n      const cursor = url.searchParams.get(\"cursor\") || undefined;\n      const limit = parseInt(url.searchParams.get(\"limit\") || \"50\", 10);\n\n      const id = env.ChatRoom.idFromName(`${tenant}::${roomId}`);\n      const stub = env.ChatRoom.get(id);\n      const r = await stub.fetch(`https://do/history?tenant=${tenant}&roomId=${roomId}&cursor=${cursor || \"\"}&limit=${limit}`);\n      return json(await r.json(), r.status, corsHdrs);\n    }\n\n    // POST /api/v1/chat/:roomId/typing\n    if (url.pathname.match(new RegExp(`^/api/${v}/chat/[^/]+/typing$`)) && req.method === \"POST\") {\n      const roomId = url.pathname.split(\"/\")[4];\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n\n      const id = env.ChatRoom.idFromName(`${tenant}::${roomId}`);\n      const stub = env.ChatRoom.get(id);\n      const chatBody = { tenant, roomId, ...body };\n      const r = await stub.fetch(\"https://do/typing\", { method: \"POST\", body: JSON.stringify(chatBody) });\n      return json(await r.json(), r.status, corsHdrs);\n    }\n\n    // -------- Photo Gallery (R2) --------\n\n    // POST /api/v1/media/albums\n    if (url.pathname === `/api/${v}/media/albums` && req.method === \"POST\") {\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n      const title = body.title || \"Untitled Album\";\n      const teamId = body.teamId;\n\n      const albumId = `alb_${Date.now()}_${Math.random().toString(36).slice(2, 9)}`;\n      const indexKey = `tenants:${tenant}:albums:index`;\n      const existing = ((await env.KV_IDEMP.get(indexKey, \"json\")) as any[]) || [];\n      const row = { albumId, title, teamId, coverKey: null, count: 0, updatedTs: Date.now() };\n      const next = [row, ...existing.filter((r) => r.albumId !== albumId)];\n      await env.KV_IDEMP.put(indexKey, JSON.stringify(next.slice(0, 500)));\n\n      // Initialize album photos index\n      const albumIndexKey = `tenants:${tenant}:albums:${albumId}:index`;\n      await env.KV_IDEMP.put(albumIndexKey, JSON.stringify([]));\n\n      return json({ success: true, data: { albumId } }, 200, corsHdrs);\n    }\n\n    // GET /api/v1/media/albums (list albums)\n    if (url.pathname === `/api/${v}/media/albums` && req.method === \"GET\") {\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n      const indexKey = `tenants:${tenant}:albums:index`;\n      const albums = ((await env.KV_IDEMP.get(indexKey, \"json\")) as any[]) || [];\n      return json({ success: true, data: albums }, 200, corsHdrs);\n    }\n\n    // GET /api/v1/media/albums/:id\n    if (url.pathname.match(new RegExp(`^/api/${v}/media/albums/[^/]+$`)) && req.method === \"GET\") {\n      const albumId = url.pathname.split(\"/\").pop()!;\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n\n      const indexKey = `tenants:${tenant}:albums:index`;\n      const albums = ((await env.KV_IDEMP.get(indexKey, \"json\")) as any[]) || [];\n      const album = albums.find((a) => a.albumId === albumId);\n      if (!album) {\n        return json({ success: false, error: { code: \"NOT_FOUND\" } }, 404, corsHdrs);\n      }\n\n      const albumIndexKey = `tenants:${tenant}:albums:${albumId}:index`;\n      const photos = ((await env.KV_IDEMP.get(albumIndexKey, \"json\")) as any[]) || [];\n\n      return json({ success: true, data: { ...album, photos: photos.slice(0, 20) } }, 200, corsHdrs);\n    }\n\n    // POST /api/v1/media/albums/:id/upload-url\n    if (url.pathname.match(new RegExp(`^/api/${v}/media/albums/[^/]+/upload-url$`)) && req.method === \"POST\") {\n      const albumId = url.pathname.split(\"/\")[5];\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n      const contentType = body.contentType || \"image/jpeg\";\n\n      const photoId = `photo_${Date.now()}_${Math.random().toString(36).slice(2, 9)}`;\n      const objectKey = `tenants/${tenant}/albums/${albumId}/${photoId}.jpg`;\n\n      try {\n        const putUrl = await env.R2_MEDIA.createMultipartUpload(objectKey);\n        return json({ success: true, data: { putUrl, objectKey } }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"R2_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // POST /api/v1/media/albums/:id/commit\n    if (url.pathname.match(new RegExp(`^/api/${v}/media/albums/[^/]+/commit$`)) && req.method === \"POST\") {\n      const albumId = url.pathname.split(\"/\")[5];\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n      const objectKey = body.objectKey;\n      const caption = body.caption;\n\n      if (!objectKey) {\n        return json({ success: false, error: { code: \"VALIDATION\", message: \"objectKey required\" } }, 400, corsHdrs);\n      }\n\n      // Update album photos index\n      const albumIndexKey = `tenants:${tenant}:albums:${albumId}:index`;\n      const photos = ((await env.KV_IDEMP.get(albumIndexKey, \"json\")) as any[]) || [];\n      const photo = { key: objectKey, ts: Date.now(), caption };\n      photos.push(photo);\n      await env.KV_IDEMP.put(albumIndexKey, JSON.stringify(photos));\n\n      // Update album count\n      const indexKey = `tenants:${tenant}:albums:index`;\n      const albums = ((await env.KV_IDEMP.get(indexKey, \"json\")) as any[]) || [];\n      const album = albums.find((a) => a.albumId === albumId);\n      if (album) {\n        album.count = photos.length;\n        album.updatedTs = Date.now();\n        if (!album.coverKey) album.coverKey = objectKey;\n        await env.KV_IDEMP.put(indexKey, JSON.stringify(albums));\n      }\n\n      return json({ success: true, data: { photoKey: objectKey } }, 200, corsHdrs);\n    }\n\n    // GET /api/v1/media/albums/:id/photos\n    if (url.pathname.match(new RegExp(`^/api/${v}/media/albums/[^/]+/photos$`)) && req.method === \"GET\") {\n      const albumId = url.pathname.split(\"/\")[5];\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n      const cursor = url.searchParams.get(\"cursor\") || \"0\";\n\n      const albumIndexKey = `tenants:${tenant}:albums:${albumId}:index`;\n      const photos = ((await env.KV_IDEMP.get(albumIndexKey, \"json\")) as any[]) || [];\n\n      const offset = parseInt(cursor, 10);\n      const limit = 20;\n      const page = photos.slice(offset, offset + limit);\n\n      // Generate signed GET URLs (1h TTL)\n      const signedPhotos = await Promise.all(\n        page.map(async (p: any) => {\n          try {\n            const obj = await env.R2_MEDIA.get(p.key);\n            if (!obj) return { ...p, url: null };\n            // Note: R2 doesn't have native presigned URLs yet, use object.createReadableStream() or proxy\n            // For now, return the key (client can fetch via a proxy route)\n            return { ...p, url: `/api/${v}/media/photo/${encodeURIComponent(p.key)}` };\n          } catch (e) {\n            return { ...p, url: null };\n          }\n        })\n      );\n\n      const nextCursor = offset + page.length < photos.length ? String(offset + limit) : null;\n\n      return json({ success: true, data: { photos: signedPhotos, nextCursor } }, 200, corsHdrs);\n    }\n\n    // DELETE /api/v1/media/photos/:objectKey\n    if (url.pathname.match(new RegExp(`^/api/${v}/media/photos/`)) && req.method === \"DELETE\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const objectKey = decodeURIComponent(url.pathname.split(\"/media/photos/\")[1]);\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n\n      try {\n        await env.R2_MEDIA.delete(objectKey);\n        // TODO: remove from album index\n        return json({ success: true }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"R2_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // GET /api/v1/media/photo/:objectKey (proxy route for R2 object)\n    if (url.pathname.match(new RegExp(`^/api/${v}/media/photo/`)) && req.method === \"GET\") {\n      const objectKey = decodeURIComponent(url.pathname.split(\"/media/photo/\")[1]);\n\n      try {\n        const obj = await env.R2_MEDIA.get(objectKey);\n        if (!obj) {\n          return new Response(\"Not found\", { status: 404 });\n        }\n        const headers = mergeHeaders(corsHdrs, {\n          \"content-type\": obj.httpMetadata?.contentType || \"image/jpeg\",\n          \"cache-control\": \"public, max-age=3600\",\n        });\n        return new Response(obj.body, withSecurity({ status: 200, headers }));\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"R2_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // -------- Invites --------\n\n    // POST /api/v1/admin/invites/create (admin)\n    if (url.pathname === `/api/${v}/admin/invites/create` && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const body = await req.json().catch(() => ({}));\n      const { tenant, teamId, role, maxUses, ttl_minutes } = body;\n      try {\n        const result = await Invites.createInvite(env, {\n          tenant,\n          teamId,\n          role,\n          maxUses,\n          ttl_minutes,\n          createdBy: user.userId || \"admin\",\n        });\n        return json(result, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"INVITE_ERROR\", message: e.message } }, e.status || 500, corsHdrs);\n      }\n    }\n\n    // GET /api/v1/admin/invites/:token (admin)\n    if (url.pathname.match(new RegExp(`^/api/${v}/admin/invites/[^/]+$`)) && req.method === \"GET\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const token = url.pathname.split(\"/\").pop()!;\n      try {\n        const invite = await Invites.getInvite(env, token);\n        return json({ ok: true, invite }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"INVITE_ERROR\", message: e.message } }, e.status || 500, corsHdrs);\n      }\n    }\n\n    // POST /api/v1/invites/consume (public)\n    if (url.pathname === `/api/${v}/invites/consume` && req.method === \"POST\") {\n      const body = await req.json().catch(() => ({}));\n      const { token, email, name } = body;\n      try {\n        const invite = await Invites.consumeInvite(env, token);\n        // TODO: create or find user by email; assign role/team based on invite.role\n        // TODO: issue tenant-scoped app JWT\n        return json({ ok: true, invite }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"INVITE_ERROR\", message: e.message } }, e.status || 500, corsHdrs);\n      }\n    }\n\n    // -------- Teams --------\n\n    // POST /api/v1/admin/teams (admin)\n    if (url.pathname === `/api/${v}/admin/teams` && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const body = await req.json().catch(() => ({}));\n      const { tenant, teamId, name, ageGroup } = body;\n      try {\n        const team = await Teams.createTeam(env, { tenant, teamId, name, ageGroup });\n        return json({ ok: true, team }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"TEAM_ERROR\", message: e.message } }, e.status || 500, corsHdrs);\n      }\n    }\n\n    // GET /api/v1/teams (authenticated)\n    if (url.pathname === `/api/${v}/teams` && req.method === \"GET\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user) {\n        return json({ success: false, error: { code: \"UNAUTHORIZED\" } }, 401, corsHdrs);\n      }\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n      try {\n        const teams = await Teams.listTeams(env, tenant);\n        return json({ ok: true, teams }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"TEAM_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // -------- Chat (KV-backed) --------\n\n    // POST /api/v1/admin/chat/rooms (admin)\n    if (url.pathname === `/api/${v}/admin/chat/rooms` && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const body = await req.json().catch(() => ({}));\n      const { tenant, roomId, teamId, type } = body;\n      try {\n        const room = await ChatKV.createRoom(env, { tenant, roomId, teamId, type });\n        return json({ ok: true, room }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"CHAT_ERROR\", message: e.message } }, e.status || 500, corsHdrs);\n      }\n    }\n\n    // GET /api/v1/chat/rooms (authenticated)\n    if (url.pathname === `/api/${v}/chat/rooms` && req.method === \"GET\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user) {\n        return json({ success: false, error: { code: \"UNAUTHORIZED\" } }, 401, corsHdrs);\n      }\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n      const teamId = url.searchParams.get(\"teamId\") || undefined;\n      try {\n        // TODO: filter based on caller's role/team access\n        const rooms = await ChatKV.listRooms(env, tenant, teamId);\n        return json({ ok: true, rooms }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"CHAT_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // POST /api/v1/chat/rooms/:roomId/messages (authenticated)\n    if (url.pathname.match(new RegExp(`^/api/${v}/chat/rooms/[^/]+/messages$`)) && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user) {\n        return json({ success: false, error: { code: \"UNAUTHORIZED\" } }, 401, corsHdrs);\n      }\n      const roomId = url.pathname.split(\"/\")[5];\n      const body = await req.json().catch(() => ({}));\n      const { tenant, text } = body;\n      try {\n        // TODO: authZ: ensure caller can write to this room\n        const msg = await ChatKV.addMessage(env, { tenant, roomId, userId: user.userId || \"anonymous\", text });\n        return json({ ok: true, msg }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"CHAT_ERROR\", message: e.message } }, e.status || 500, corsHdrs);\n      }\n    }\n\n    // GET /api/v1/chat/rooms/:roomId/messages (authenticated)\n    if (url.pathname.match(new RegExp(`^/api/${v}/chat/rooms/[^/]+/messages$`)) && req.method === \"GET\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user) {\n        return json({ success: false, error: { code: \"UNAUTHORIZED\" } }, 401, corsHdrs);\n      }\n      const roomId = url.pathname.split(\"/\")[5];\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n      try {\n        const messages = await ChatKV.listMessages(env, { tenant, roomId, limit: 100 });\n        return json({ ok: true, messages }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"CHAT_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n\n    // -------- Export/Backup Endpoints (Admin-only) --------\n\n    // GET /api/v1/admin/export/tenant/:id\n    if (url.pathname.match(new RegExp(`^/api/${v}/admin/export/tenant/([^/]+)$`)) && req.method === \"GET\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const match = url.pathname.match(new RegExp(`^/api/${v}/admin/export/tenant/([^/]+)$`));\n      const tenantId = match ? match[1] : \"\";\n      try {\n        const cfg = await getTenantConfig(env, tenantId);\n        if (!cfg) {\n          return json({ success: false, error: { code: \"NOT_FOUND\", message: \"Tenant not found\" } }, 404, corsHdrs);\n        }\n        // Return safe tenant config (no secrets)\n        const exportData = {\n          id: cfg.id,\n          name: cfg.name,\n          flags: cfg.flags || {},\n          makeWebhookUrl: cfg.makeWebhookUrl ? \"***configured***\" : undefined,\n          createdAt: cfg.createdAt,\n        };\n        return json({ success: true, data: exportData }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"INTERNAL\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // GET /api/v1/admin/export/tenant/:id/chat-index\n    if (url.pathname.match(new RegExp(`^/api/${v}/admin/export/tenant/([^/]+)/chat-index$`)) && req.method === \"GET\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const match = url.pathname.match(new RegExp(`^/api/${v}/admin/export/tenant/([^/]+)/chat-index$`));\n      const tenantId = match ? match[1] : \"\";\n      try {\n        const rooms = await ChatKV.listRooms(env, tenantId);\n        return json({ success: true, data: { tenant: tenantId, rooms } }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"INTERNAL\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // GET /api/v1/admin/export/tenant/:id/gallery-index\n    if (url.pathname.match(new RegExp(`^/api/${v}/admin/export/tenant/([^/]+)/gallery-index$`)) && req.method === \"GET\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const match = url.pathname.match(new RegExp(`^/api/${v}/admin/export/tenant/([^/]+)/gallery-index$`));\n      const tenantId = match ? match[1] : \"\";\n      try {\n        const albums = await GalleryKV.listAlbums(env, tenantId);\n        return json({ success: true, data: { tenant: tenantId, albums } }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"INTERNAL\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // -------- Gallery (KV-backed) --------\n\n    // POST /api/v1/admin/gallery/albums (admin)\n    if (url.pathname === `/api/${v}/admin/gallery/albums` && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const body = await req.json().catch(() => ({}));\n      const { tenant, title, teamId, eventId } = body;\n      try {\n        const album = await GalleryKV.createAlbum(env, {\n          tenant,\n          title,\n          teamId,\n          eventId,\n          createdBy: user.userId || \"admin\",\n        });\n        return json({ ok: true, album }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"GALLERY_ERROR\", message: e.message } }, e.status || 500, corsHdrs);\n      }\n    }\n\n    // GET /api/v1/gallery/albums (authenticated)\n    if (url.pathname === `/api/${v}/gallery/albums` && req.method === \"GET\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user) {\n        return json({ success: false, error: { code: \"UNAUTHORIZED\" } }, 401, corsHdrs);\n      }\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n      const teamId = url.searchParams.get(\"teamId\") || undefined;\n      try {\n        const albums = await GalleryKV.listAlbums(env, tenant, teamId);\n        return json({ ok: true, albums }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"GALLERY_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // POST /api/v1/gallery/albums/:albumId/upload (authenticated, multipart)\n    if (url.pathname.match(new RegExp(`^/api/${v}/gallery/albums/[^/]+/upload$`)) && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user) {\n        return json({ success: false, error: { code: \"UNAUTHORIZED\" } }, 401, corsHdrs);\n      }\n      const albumId = url.pathname.split(\"/\")[5];\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n      const ct = req.headers.get(\"content-type\") || \"\";\n      if (!ct.startsWith(\"multipart/form-data\")) {\n        return json({ success: false, error: { code: \"VALIDATION\", message: \"multipart required\" } }, 400, corsHdrs);\n      }\n      try {\n        const form = await req.formData();\n        const file = form.get(\"file\");\n        if (!(file instanceof File)) {\n          return json({ success: false, error: { code: \"VALIDATION\", message: \"file missing\" } }, 400, corsHdrs);\n        }\n        const buf = await file.arrayBuffer();\n        const { r2Key } = await GalleryKV.uploadBinary(env, { tenant, albumId, file: buf, contentType: file.type });\n        return json({ ok: true, r2Key }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"GALLERY_ERROR\", message: e.message } }, e.status || 500, corsHdrs);\n      }\n    }\n\n    // POST /api/v1/gallery/albums/:albumId/commit (authenticated)\n    if (url.pathname.match(new RegExp(`^/api/${v}/gallery/albums/[^/]+/commit$`)) && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user) {\n        return json({ success: false, error: { code: \"UNAUTHORIZED\" } }, 401, corsHdrs);\n      }\n      const albumId = url.pathname.split(\"/\")[5];\n      const body = await req.json().catch(() => ({}));\n      const { tenant, r2Key, playerTags, consentCheck } = body;\n      try {\n        const media = await GalleryKV.commitMedia(env, {\n          tenant,\n          albumId,\n          r2Key,\n          uploaderId: user.userId || \"anonymous\",\n          playerTags,\n          consentCheck,\n        });\n        return json({ ok: true, media }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"GALLERY_ERROR\", message: e.message } }, e.status || 500, corsHdrs);\n      }\n    }\n\n    // GET /api/v1/gallery/albums/:albumId (authenticated)\n    if (url.pathname.match(new RegExp(`^/api/${v}/gallery/albums/[^/]+$`)) && req.method === \"GET\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user) {\n        return json({ success: false, error: { code: \"UNAUTHORIZED\" } }, 401, corsHdrs);\n      }\n      const albumId = url.pathname.split(\"/\")[5];\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n      try {\n        const media = await GalleryKV.listMedia(env, { tenant, albumId, respectConsent: true });\n        return json({ ok: true, media }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"GALLERY_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // GET /api/v1/gallery/file (authenticated, stream from R2)\n    if (url.pathname === `/api/${v}/gallery/file` && req.method === \"GET\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user) {\n        return json({ success: false, error: { code: \"UNAUTHORIZED\" } }, 401, corsHdrs);\n      }\n      const key = url.searchParams.get(\"key\");\n      if (!key) {\n        return json({ success: false, error: { code: \"VALIDATION\", message: \"key required\" } }, 400, corsHdrs);\n      }\n      try {\n        const obj = await env.R2_MEDIA.get(key);\n        if (!obj) {\n          return json({ success: false, error: { code: \"NOT_FOUND\" } }, 404, corsHdrs);\n        }\n        const headers = mergeHeaders(corsHdrs, {\n          \"content-type\": obj.httpMetadata?.contentType || \"image/jpeg\",\n          \"cache-control\": \"public, max-age=3600\",\n        });\n        return new Response(obj.body, withSecurity({ status: 200, headers }));\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"R2_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // -------- Player Images (Admin) --------\n\n    // POST /api/v1/admin/player-images\n    if (url.pathname === `/api/${v}/admin/player-images` && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n\n      try {\n        const { createPlayerImage } = await import(\"./services/playerImages\");\n        const image = await createPlayerImage(env, tenant, {\n          playerId: body.playerId,\n          playerName: body.playerName,\n          type: body.type,\n          imageUrl: body.imageUrl,\n          r2Key: body.r2Key,\n          uploadedBy: user.userId || \"admin\",\n          metadata: body.metadata,\n        });\n        return json({ success: true, data: image }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"PLAYER_IMAGE_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // GET /api/v1/admin/player-images (list)\n    if (url.pathname === `/api/${v}/admin/player-images` && req.method === \"GET\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n      const playerId = url.searchParams.get(\"playerId\") || undefined;\n      const type = url.searchParams.get(\"type\") as \"headshot\" | \"action\" | undefined;\n\n      try {\n        const { listPlayerImages } = await import(\"./services/playerImages\");\n        const images = await listPlayerImages(env, tenant, { playerId, type });\n        return json({ success: true, data: images }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"PLAYER_IMAGE_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // GET /api/v1/admin/player-images/:id\n    if (url.pathname.match(new RegExp(`^/api/${v}/admin/player-images/[^/]+$`)) && req.method === \"GET\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const imageId = url.pathname.split(\"/\").pop()!;\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n\n      try {\n        const { getPlayerImage } = await import(\"./services/playerImages\");\n        const image = await getPlayerImage(env, tenant, imageId);\n        if (!image) {\n          return json({ success: false, error: { code: \"NOT_FOUND\" } }, 404, corsHdrs);\n        }\n        return json({ success: true, data: image }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"PLAYER_IMAGE_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // PATCH /api/v1/admin/player-images/:id\n    if (url.pathname.match(new RegExp(`^/api/${v}/admin/player-images/[^/]+$`)) && req.method === \"PATCH\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const imageId = url.pathname.split(\"/\").pop()!;\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n\n      try {\n        const { updatePlayerImage } = await import(\"./services/playerImages\");\n        const image = await updatePlayerImage(env, tenant, imageId, body);\n        if (!image) {\n          return json({ success: false, error: { code: \"NOT_FOUND\" } }, 404, corsHdrs);\n        }\n        return json({ success: true, data: image }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"PLAYER_IMAGE_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // DELETE /api/v1/admin/player-images/:id\n    if (url.pathname.match(new RegExp(`^/api/${v}/admin/player-images/[^/]+$`)) && req.method === \"DELETE\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const imageId = url.pathname.split(\"/\").pop()!;\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n\n      try {\n        const { deletePlayerImage } = await import(\"./services/playerImages\");\n        const deleted = await deletePlayerImage(env, tenant, imageId);\n        if (!deleted) {\n          return json({ success: false, error: { code: \"NOT_FOUND\" } }, 404, corsHdrs);\n        }\n        return json({ success: true }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"PLAYER_IMAGE_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // -------- Auto-Posts Matrix (Admin) --------\n\n    // GET /api/v1/admin/auto-posts-matrix\n    if (url.pathname === `/api/${v}/admin/auto-posts-matrix` && req.method === \"GET\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n\n      try {\n        const { getAutoPostsMatrix } = await import(\"./services/autoPostsMatrix\");\n        const matrix = await getAutoPostsMatrix(env, tenant);\n        return json({ success: true, data: matrix }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"MATRIX_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // PUT /api/v1/admin/auto-posts-matrix\n    if (url.pathname === `/api/${v}/admin/auto-posts-matrix` && req.method === \"PUT\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n\n      try {\n        const { updateAutoPostsMatrix } = await import(\"./services/autoPostsMatrix\");\n        const matrix = await updateAutoPostsMatrix(env, tenant, body.matrix);\n        return json({ success: true, data: matrix }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"MATRIX_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // POST /api/v1/admin/auto-posts-matrix/reset\n    if (url.pathname === `/api/${v}/admin/auto-posts-matrix/reset` && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n\n      try {\n        const { resetAutoPostsMatrix } = await import(\"./services/autoPostsMatrix\");\n        const matrix = await resetAutoPostsMatrix(env, tenant);\n        return json({ success: true, data: matrix }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"MATRIX_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // -------- Brand API (White-Label Multi-Tenant) --------\n\n    // GET /api/v1/brand - Public endpoint for frontends to get brand kit\n    if (url.pathname === `/api/${v}/brand` && req.method === \"GET\") {\n      const tenant = url.searchParams.get(\"tenant\") || req.headers.get(\"x-tenant\") || \"default\";\n\n      try {\n        const { getBrand } = await import(\"./services/brand\");\n        const brand = await getBrand(env, tenant);\n        return json({ success: true, data: brand }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"BRAND_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // POST /api/v1/brand - Admin endpoint to update brand kit\n    if (url.pathname === `/api/${v}/brand` && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || req.headers.get(\"x-tenant\") || url.searchParams.get(\"tenant\") || \"default\";\n\n      try {\n        const { setBrand } = await import(\"./services/brand\");\n        const brand = await setBrand(env, tenant, body);\n        return json({ success: true, data: brand }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"BRAND_ERROR\", message: e.message } }, 400, corsHdrs);\n      }\n    }\n\n    // -------- Club Config (Admin) --------\n\n    // GET /api/v1/admin/club-config\n    if (url.pathname === `/api/${v}/admin/club-config` && req.method === \"GET\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n\n      try {\n        const { getClubConfig } = await import(\"./services/clubConfig\");\n        const config = await getClubConfig(env, tenant);\n        return json({ success: true, data: config }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"CONFIG_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // PUT /api/v1/admin/club-config\n    if (url.pathname === `/api/${v}/admin/club-config` && req.method === \"PUT\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n\n      try {\n        const { updateClubConfig } = await import(\"./services/clubConfig\");\n        const config = await updateClubConfig(env, tenant, body.config);\n        return json({ success: true, data: config }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"CONFIG_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // PATCH /api/v1/admin/club-config/:section\n    if (url.pathname.match(new RegExp(`^/api/${v}/admin/club-config/[^/]+$`)) && req.method === \"PATCH\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const section = url.pathname.split(\"/\").pop()!;\n      const body = await req.json().catch(() => ({}));\n      const tenant = body.tenant || \"default\";\n\n      try {\n        const { updateClubConfigSection } = await import(\"./services/clubConfig\");\n        const config = await updateClubConfigSection(env, tenant, section as any, body.data);\n        return json({ success: true, data: config }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"CONFIG_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // POST /api/v1/admin/club-config/upload-badge\n    if (url.pathname === `/api/${v}/admin/club-config/upload-badge` && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n      const ct = req.headers.get(\"content-type\") || \"\";\n      if (!ct.startsWith(\"multipart/form-data\")) {\n        return json({ success: false, error: { code: \"VALIDATION\", message: \"multipart required\" } }, 400, corsHdrs);\n      }\n\n      try {\n        const form = await req.formData();\n        const file = form.get(\"file\");\n        if (!(file instanceof File)) {\n          return json({ success: false, error: { code: \"VALIDATION\", message: \"file missing\" } }, 400, corsHdrs);\n        }\n        const buf = await file.arrayBuffer();\n        const { uploadClubBadge } = await import(\"./services/clubConfig\");\n        const result = await uploadClubBadge(env, tenant, buf, file.type);\n        return json({ success: true, data: result }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"CONFIG_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // POST /api/v1/admin/club-config/upload-sponsor\n    if (url.pathname === `/api/${v}/admin/club-config/upload-sponsor` && req.method === \"POST\") {\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user || !hasRole(user, \"admin\")) {\n        return json({ success: false, error: { code: \"FORBIDDEN\" } }, 403, corsHdrs);\n      }\n      const tenant = url.searchParams.get(\"tenant\") || \"default\";\n      const ct = req.headers.get(\"content-type\") || \"\";\n      if (!ct.startsWith(\"multipart/form-data\")) {\n        return json({ success: false, error: { code: \"VALIDATION\", message: \"multipart required\" } }, 400, corsHdrs);\n      }\n\n      try {\n        const form = await req.formData();\n        const file = form.get(\"file\");\n        if (!(file instanceof File)) {\n          return json({ success: false, error: { code: \"VALIDATION\", message: \"file missing\" } }, 400, corsHdrs);\n        }\n        const buf = await file.arrayBuffer();\n        const { uploadSponsorLogo } = await import(\"./services/clubConfig\");\n        const result = await uploadSponsorLogo(env, tenant, buf, file.type);\n        return json({ success: true, data: result }, 200, corsHdrs);\n      } catch (e: any) {\n        return json({ success: false, error: { code: \"CONFIG_ERROR\", message: e.message } }, 500, corsHdrs);\n      }\n    }\n\n    // -------- Post Bus --------\n    if (url.pathname === `/api/${v}/post` && req.method === \"POST\") {\n      // 1) Auth\n      const user = await requireJWT(req, env).catch(() => null);\n      if (!user) return json({ success: false, error: { code: \"UNAUTHORIZED\" } }, 401, corsHdrs);\n\n      // 2) Validate body\n      const body = await req.json().catch(() => null);\n      const parsed = body ? PostReqSchema.safeParse(body) : { success: false, error: { message: \"Invalid JSON\" } } as const;\n      if (!(\"success\" in parsed) || !parsed.success) {\n        return json({ success: false, error: { code: \"VALIDATION\", message: (parsed as any).error?.message || \"Invalid\" } }, 400, corsHdrs);\n      }\n\n      // 3) Idempotency\n      const idemHeader = readIdempotencyKey(req);\n      const idem = await ensureIdempotent(env, parsed.data.tenant, parsed.data, idemHeader || undefined);\n      if (idem.hit) return json(idem.response, 200, corsHdrs);\n\n      // 4) Enqueue to Cloudflare Queues\n      await env.POST_QUEUE.send({\n        tenant: parsed.data.tenant,\n        template: parsed.data.template,\n        channels: parsed.data.channels,\n        data: parsed.data.data,\n        createdAt: Date.now(),\n        idemKey: idem.key\n      });\n\n      // 5) Store and return \"queued\"\n      const resp = { success: true, data: { queued: true } };\n      await idem.store(resp);\n      return json(resp, 202, corsHdrs);\n    }\n\n    // Fallback - log for debugging\n    logJSON(\"warn\", requestId, {\n      message: \"Route not found\",\n      method: req.method,\n      pathname: url?.pathname,\n      search: url?.search\n    });\n    return json({ success: false, error: { code: \"NOT_FOUND\", message: \"Route not found\" } }, 404, corsHdrs);\n    } catch (err: any) {\n      const ms = Date.now() - t0;\n      if (err instanceof Response) {\n        const secured = respondWithCors(err, corsHdrs);\n        logJSON({\n          level: \"error\",\n          msg: err.statusText || \"response_error\",\n          requestId,\n          path: url?.pathname,\n          status: secured.status,\n          ms,\n        });\n        return secured;\n      }\n      logJSON({\n        level: \"error\",\n        msg: err?.message || \"unhandled\",\n        requestId,\n        path: url?.pathname,\n        status: 500,\n        ms,\n      });\n      return json(\n        { success: false, error: { code: \"INTERNAL\", message: \"Unexpected error\" } },\n        500,\n        corsHdrs\n      );\n      \n      const headers = mergeHeaders(corsHdrs, { \"content-type\": \"application/json\" });\n      return new Response(JSON.stringify({ error: { code: \"INTERNAL\", requestId } }), withSecurity({ status: 500, headers }));\n    } finally {\n      const ms = Date.now() - t0;\n      logJSON({ level: \"info\", msg: \"request_end\", requestId, path: url?.pathname, ms });\n    }\n  },\n\n  // <- This wires the queue consumer to this worker\n  queue: queueWorker.queue,\n\n  // <- Cron handler (called by [triggers].crons in wrangler.toml)\n  async scheduled(controller: ScheduledController, env: any, ctx: ExecutionContext) {\n    logJSON({ level: \"info\", msg: \"cron_tick\", path: \"scheduled\", ms: Date.now() - controller.scheduledTime });\n\n    // OPTIONAL: event reminders (wire later)\n    // try {\n    //   await sendEventReminders(env);\n    // } catch (err) {\n    //   console.error(\"reminders failure\", err);\n    // }\n  }\n};\n", "export { compactDecrypt } from './jwe/compact/decrypt.js';\nexport { flattenedDecrypt } from './jwe/flattened/decrypt.js';\nexport { generalDecrypt } from './jwe/general/decrypt.js';\nexport { GeneralEncrypt } from './jwe/general/encrypt.js';\nexport { compactVerify } from './jws/compact/verify.js';\nexport { flattenedVerify } from './jws/flattened/verify.js';\nexport { generalVerify } from './jws/general/verify.js';\nexport { jwtVerify } from './jwt/verify.js';\nexport { jwtDecrypt } from './jwt/decrypt.js';\nexport { CompactEncrypt } from './jwe/compact/encrypt.js';\nexport { FlattenedEncrypt } from './jwe/flattened/encrypt.js';\nexport { CompactSign } from './jws/compact/sign.js';\nexport { FlattenedSign } from './jws/flattened/sign.js';\nexport { GeneralSign } from './jws/general/sign.js';\nexport { SignJWT } from './jwt/sign.js';\nexport { EncryptJWT } from './jwt/encrypt.js';\nexport { calculateJwkThumbprint, calculateJwkThumbprintUri } from './jwk/thumbprint.js';\nexport { EmbeddedJWK } from './jwk/embedded.js';\nexport { createLocalJWKSet } from './jwks/local.js';\nexport { createRemoteJWKSet, jwksCache, customFetch } from './jwks/remote.js';\nexport { UnsecuredJWT } from './jwt/unsecured.js';\nexport { exportPKCS8, exportSPKI, exportJWK } from './key/export.js';\nexport { importSPKI, importPKCS8, importX509, importJWK } from './key/import.js';\nexport { decodeProtectedHeader } from './util/decode_protected_header.js';\nexport { decodeJwt } from './util/decode_jwt.js';\nexport * as errors from './util/errors.js';\nexport { generateKeyPair } from './key/generate_key_pair.js';\nexport { generateSecret } from './key/generate_secret.js';\nexport * as base64url from './util/base64url.js';\nexport const cryptoRuntime = 'WebCryptoAPI';\n", "import { encoder, decoder } from '../lib/buffer_utils.js';\nimport { encodeBase64, decodeBase64 } from '../lib/base64.js';\nexport function decode(input) {\n    if (Uint8Array.fromBase64) {\n        return Uint8Array.fromBase64(typeof input === 'string' ? input : decoder.decode(input), {\n            alphabet: 'base64url',\n        });\n    }\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n}\nexport function encode(input) {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    if (Uint8Array.prototype.toBase64) {\n        return unencoded.toBase64({ alphabet: 'base64url', omitPadding: true });\n    }\n    return encodeBase64(unencoded).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n", "export const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    for (const buffer of buffers) {\n        buf.set(buffer, i);\n        i += buffer.length;\n    }\n    return buf;\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\n", "export function encodeBase64(input) {\n    if (Uint8Array.prototype.toBase64) {\n        return input.toBase64();\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < input.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, input.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n}\nexport function decodeBase64(encoded) {\n    if (Uint8Array.fromBase64) {\n        return Uint8Array.fromBase64(encoded);\n    }\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\n", "export class JOSEError extends Error {\n    static code = 'ERR_JOSE_GENERIC';\n    code = 'ERR_JOSE_GENERIC';\n    constructor(message, options) {\n        super(message, options);\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nexport class JWTClaimValidationFailed extends JOSEError {\n    static code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    claim;\n    reason;\n    payload;\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message, { cause: { claim, reason, payload } });\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nexport class JWTExpired extends JOSEError {\n    static code = 'ERR_JWT_EXPIRED';\n    code = 'ERR_JWT_EXPIRED';\n    claim;\n    reason;\n    payload;\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message, { cause: { claim, reason, payload } });\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nexport class JOSEAlgNotAllowed extends JOSEError {\n    static code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n}\nexport class JOSENotSupported extends JOSEError {\n    static code = 'ERR_JOSE_NOT_SUPPORTED';\n    code = 'ERR_JOSE_NOT_SUPPORTED';\n}\nexport class JWEDecryptionFailed extends JOSEError {\n    static code = 'ERR_JWE_DECRYPTION_FAILED';\n    code = 'ERR_JWE_DECRYPTION_FAILED';\n    constructor(message = 'decryption operation failed', options) {\n        super(message, options);\n    }\n}\nexport class JWEInvalid extends JOSEError {\n    static code = 'ERR_JWE_INVALID';\n    code = 'ERR_JWE_INVALID';\n}\nexport class JWSInvalid extends JOSEError {\n    static code = 'ERR_JWS_INVALID';\n    code = 'ERR_JWS_INVALID';\n}\nexport class JWTInvalid extends JOSEError {\n    static code = 'ERR_JWT_INVALID';\n    code = 'ERR_JWT_INVALID';\n}\nexport class JWKInvalid extends JOSEError {\n    static code = 'ERR_JWK_INVALID';\n    code = 'ERR_JWK_INVALID';\n}\nexport class JWKSInvalid extends JOSEError {\n    static code = 'ERR_JWKS_INVALID';\n    code = 'ERR_JWKS_INVALID';\n}\nexport class JWKSNoMatchingKey extends JOSEError {\n    static code = 'ERR_JWKS_NO_MATCHING_KEY';\n    code = 'ERR_JWKS_NO_MATCHING_KEY';\n    constructor(message = 'no applicable key found in the JSON Web Key Set', options) {\n        super(message, options);\n    }\n}\nexport class JWKSMultipleMatchingKeys extends JOSEError {\n    [Symbol.asyncIterator];\n    static code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    constructor(message = 'multiple matching keys found in the JSON Web Key Set', options) {\n        super(message, options);\n    }\n}\nexport class JWKSTimeout extends JOSEError {\n    static code = 'ERR_JWKS_TIMEOUT';\n    code = 'ERR_JWKS_TIMEOUT';\n    constructor(message = 'request timed out', options) {\n        super(message, options);\n    }\n}\nexport class JWSSignatureVerificationFailed extends JOSEError {\n    static code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    constructor(message = 'signature verification failed', options) {\n        super(message, options);\n    }\n}\n", "function unusable(name, prop = 'algorithm.name') {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch (alg) {\n        case 'ES256':\n            return 'P-256';\n        case 'ES384':\n            return 'P-384';\n        case 'ES512':\n            return 'P-521';\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction checkUsage(key, usage) {\n    if (usage && !key.usages.includes(usage)) {\n        throw new TypeError(`CryptoKey does not support this operation, its usages must include ${usage}.`);\n    }\n}\nexport function checkSigCryptoKey(key, alg, usage) {\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512': {\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\n                throw unusable('HMAC');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'RS256':\n        case 'RS384':\n        case 'RS512': {\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\n                throw unusable('RSASSA-PKCS1-v1_5');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'PS256':\n        case 'PS384':\n        case 'PS512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\n                throw unusable('RSA-PSS');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'Ed25519':\n        case 'EdDSA': {\n            if (!isAlgorithm(key.algorithm, 'Ed25519'))\n                throw unusable('Ed25519');\n            break;\n        }\n        case 'ML-DSA-44':\n        case 'ML-DSA-65':\n        case 'ML-DSA-87': {\n            if (!isAlgorithm(key.algorithm, alg))\n                throw unusable(alg);\n            break;\n        }\n        case 'ES256':\n        case 'ES384':\n        case 'ES512': {\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\n                throw unusable('ECDSA');\n            const expected = getNamedCurve(alg);\n            const actual = key.algorithm.namedCurve;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.namedCurve');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usage);\n}\nexport function checkEncCryptoKey(key, alg, usage) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM': {\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\n                throw unusable('AES-GCM');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\n                throw unusable('AES-KW');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'ECDH': {\n            switch (key.algorithm.name) {\n                case 'ECDH':\n                case 'X25519':\n                    break;\n                default:\n                    throw unusable('ECDH or X25519');\n            }\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW':\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\n                throw unusable('PBKDF2');\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\n                throw unusable('RSA-OAEP');\n            const expected = parseInt(alg.slice(9), 10) || 1;\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usage);\n}\n", "function message(msg, actual, ...types) {\n    types = types.filter(Boolean);\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor?.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexport default (actual, ...types) => {\n    return message('Key must be ', actual, ...types);\n};\nexport function withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\n", "export function assertCryptoKey(key) {\n    if (!isCryptoKey(key)) {\n        throw new Error('CryptoKey instance expected');\n    }\n}\nexport function isCryptoKey(key) {\n    return key?.[Symbol.toStringTag] === 'CryptoKey';\n}\nexport function isKeyObject(key) {\n    return key?.[Symbol.toStringTag] === 'KeyObject';\n}\nexport default (key) => {\n    return isCryptoKey(key) || isKeyObject(key);\n};\n", "export default (...headers) => {\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources) {\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters) {\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\n", "function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexport default (input) => {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n};\n", "export default (alg, key) => {\n    if (alg.startsWith('RS') || alg.startsWith('PS')) {\n        const { modulusLength } = key.algorithm;\n        if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n            throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n        }\n    }\n};\n", "import { JOSENotSupported } from '../util/errors.js';\nfunction subtleMapping(jwk) {\n    let algorithm;\n    let keyUsages;\n    switch (jwk.kty) {\n        case 'AKP': {\n            switch (jwk.alg) {\n                case 'ML-DSA-44':\n                case 'ML-DSA-65':\n                case 'ML-DSA-87':\n                    algorithm = { name: jwk.alg };\n                    keyUsages = jwk.priv ? ['sign'] : ['verify'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'RSA': {\n            switch (jwk.alg) {\n                case 'PS256':\n                case 'PS384':\n                case 'PS512':\n                    algorithm = { name: 'RSA-PSS', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RS256':\n                case 'RS384':\n                case 'RS512':\n                    algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RSA-OAEP':\n                case 'RSA-OAEP-256':\n                case 'RSA-OAEP-384':\n                case 'RSA-OAEP-512':\n                    algorithm = {\n                        name: 'RSA-OAEP',\n                        hash: `SHA-${parseInt(jwk.alg.slice(-3), 10) || 1}`,\n                    };\n                    keyUsages = jwk.d ? ['decrypt', 'unwrapKey'] : ['encrypt', 'wrapKey'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'EC': {\n            switch (jwk.alg) {\n                case 'ES256':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES384':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES512':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: 'ECDH', namedCurve: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'OKP': {\n            switch (jwk.alg) {\n                case 'Ed25519':\n                case 'EdDSA':\n                    algorithm = { name: 'Ed25519' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n    }\n    return { algorithm, keyUsages };\n}\nexport default async (jwk) => {\n    if (!jwk.alg) {\n        throw new TypeError('\"alg\" argument is required when \"jwk.alg\" is not present');\n    }\n    const { algorithm, keyUsages } = subtleMapping(jwk);\n    const keyData = { ...jwk };\n    if (keyData.kty !== 'AKP') {\n        delete keyData.alg;\n    }\n    delete keyData.use;\n    return crypto.subtle.importKey('jwk', keyData, algorithm, jwk.ext ?? (jwk.d || jwk.priv ? false : true), jwk.key_ops ?? keyUsages);\n};\n", "import { JOSENotSupported, JWEInvalid, JWSInvalid } from '../util/errors.js';\nexport default (Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) => {\n    if (joseHeader.crit !== undefined && protectedHeader?.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n};\n", "export default (option, algorithms) => {\n    if (algorithms !== undefined &&\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\n", "import { isJWK } from './is_jwk.js';\nimport { decode } from '../util/base64url.js';\nimport importJWK from './jwk_to_key.js';\nimport { isCryptoKey, isKeyObject } from './is_key_like.js';\nlet cache;\nconst handleJWK = async (key, jwk, alg, freeze = false) => {\n    cache ||= new WeakMap();\n    let cached = cache.get(key);\n    if (cached?.[alg]) {\n        return cached[alg];\n    }\n    const cryptoKey = await importJWK({ ...jwk, alg });\n    if (freeze)\n        Object.freeze(key);\n    if (!cached) {\n        cache.set(key, { [alg]: cryptoKey });\n    }\n    else {\n        cached[alg] = cryptoKey;\n    }\n    return cryptoKey;\n};\nconst handleKeyObject = (keyObject, alg) => {\n    cache ||= new WeakMap();\n    let cached = cache.get(keyObject);\n    if (cached?.[alg]) {\n        return cached[alg];\n    }\n    const isPublic = keyObject.type === 'public';\n    const extractable = isPublic ? true : false;\n    let cryptoKey;\n    if (keyObject.asymmetricKeyType === 'x25519') {\n        switch (alg) {\n            case 'ECDH-ES':\n            case 'ECDH-ES+A128KW':\n            case 'ECDH-ES+A192KW':\n            case 'ECDH-ES+A256KW':\n                break;\n            default:\n                throw new TypeError('given KeyObject instance cannot be used for this algorithm');\n        }\n        cryptoKey = keyObject.toCryptoKey(keyObject.asymmetricKeyType, extractable, isPublic ? [] : ['deriveBits']);\n    }\n    if (keyObject.asymmetricKeyType === 'ed25519') {\n        if (alg !== 'EdDSA' && alg !== 'Ed25519') {\n            throw new TypeError('given KeyObject instance cannot be used for this algorithm');\n        }\n        cryptoKey = keyObject.toCryptoKey(keyObject.asymmetricKeyType, extractable, [\n            isPublic ? 'verify' : 'sign',\n        ]);\n    }\n    switch (keyObject.asymmetricKeyType) {\n        case 'ml-dsa-44':\n        case 'ml-dsa-65':\n        case 'ml-dsa-87': {\n            if (alg !== keyObject.asymmetricKeyType.toUpperCase()) {\n                throw new TypeError('given KeyObject instance cannot be used for this algorithm');\n            }\n            cryptoKey = keyObject.toCryptoKey(keyObject.asymmetricKeyType, extractable, [\n                isPublic ? 'verify' : 'sign',\n            ]);\n        }\n    }\n    if (keyObject.asymmetricKeyType === 'rsa') {\n        let hash;\n        switch (alg) {\n            case 'RSA-OAEP':\n                hash = 'SHA-1';\n                break;\n            case 'RS256':\n            case 'PS256':\n            case 'RSA-OAEP-256':\n                hash = 'SHA-256';\n                break;\n            case 'RS384':\n            case 'PS384':\n            case 'RSA-OAEP-384':\n                hash = 'SHA-384';\n                break;\n            case 'RS512':\n            case 'PS512':\n            case 'RSA-OAEP-512':\n                hash = 'SHA-512';\n                break;\n            default:\n                throw new TypeError('given KeyObject instance cannot be used for this algorithm');\n        }\n        if (alg.startsWith('RSA-OAEP')) {\n            return keyObject.toCryptoKey({\n                name: 'RSA-OAEP',\n                hash,\n            }, extractable, isPublic ? ['encrypt'] : ['decrypt']);\n        }\n        cryptoKey = keyObject.toCryptoKey({\n            name: alg.startsWith('PS') ? 'RSA-PSS' : 'RSASSA-PKCS1-v1_5',\n            hash,\n        }, extractable, [isPublic ? 'verify' : 'sign']);\n    }\n    if (keyObject.asymmetricKeyType === 'ec') {\n        const nist = new Map([\n            ['prime256v1', 'P-256'],\n            ['secp384r1', 'P-384'],\n            ['secp521r1', 'P-521'],\n        ]);\n        const namedCurve = nist.get(keyObject.asymmetricKeyDetails?.namedCurve);\n        if (!namedCurve) {\n            throw new TypeError('given KeyObject instance cannot be used for this algorithm');\n        }\n        if (alg === 'ES256' && namedCurve === 'P-256') {\n            cryptoKey = keyObject.toCryptoKey({\n                name: 'ECDSA',\n                namedCurve,\n            }, extractable, [isPublic ? 'verify' : 'sign']);\n        }\n        if (alg === 'ES384' && namedCurve === 'P-384') {\n            cryptoKey = keyObject.toCryptoKey({\n                name: 'ECDSA',\n                namedCurve,\n            }, extractable, [isPublic ? 'verify' : 'sign']);\n        }\n        if (alg === 'ES512' && namedCurve === 'P-521') {\n            cryptoKey = keyObject.toCryptoKey({\n                name: 'ECDSA',\n                namedCurve,\n            }, extractable, [isPublic ? 'verify' : 'sign']);\n        }\n        if (alg.startsWith('ECDH-ES')) {\n            cryptoKey = keyObject.toCryptoKey({\n                name: 'ECDH',\n                namedCurve,\n            }, extractable, isPublic ? [] : ['deriveBits']);\n        }\n    }\n    if (!cryptoKey) {\n        throw new TypeError('given KeyObject instance cannot be used for this algorithm');\n    }\n    if (!cached) {\n        cache.set(keyObject, { [alg]: cryptoKey });\n    }\n    else {\n        cached[alg] = cryptoKey;\n    }\n    return cryptoKey;\n};\nexport default async (key, alg) => {\n    if (key instanceof Uint8Array) {\n        return key;\n    }\n    if (isCryptoKey(key)) {\n        return key;\n    }\n    if (isKeyObject(key)) {\n        if (key.type === 'secret') {\n            return key.export();\n        }\n        if ('toCryptoKey' in key && typeof key.toCryptoKey === 'function') {\n            try {\n                return handleKeyObject(key, alg);\n            }\n            catch (err) {\n                if (err instanceof TypeError) {\n                    throw err;\n                }\n            }\n        }\n        let jwk = key.export({ format: 'jwk' });\n        return handleJWK(key, jwk, alg);\n    }\n    if (isJWK(key)) {\n        if (key.k) {\n            return decode(key.k);\n        }\n        return handleJWK(key, key, alg, true);\n    }\n    throw new Error('unreachable');\n};\n", "import isObject from './is_object.js';\nexport function isJWK(key) {\n    return isObject(key) && typeof key.kty === 'string';\n}\nexport function isPrivateJWK(key) {\n    return (key.kty !== 'oct' &&\n        ((key.kty === 'AKP' && typeof key.priv === 'string') || typeof key.d === 'string'));\n}\nexport function isPublicJWK(key) {\n    return key.kty !== 'oct' && typeof key.d === 'undefined' && typeof key.priv === 'undefined';\n}\nexport function isSecretJWK(key) {\n    return key.kty === 'oct' && typeof key.k === 'string';\n}\n", "import { withAlg as invalidKeyInput } from './invalid_key_input.js';\nimport isKeyLike from './is_key_like.js';\nimport * as jwk from './is_jwk.js';\nconst tag = (key) => key?.[Symbol.toStringTag];\nconst jwkMatchesOp = (alg, key, usage) => {\n    if (key.use !== undefined) {\n        let expected;\n        switch (usage) {\n            case 'sign':\n            case 'verify':\n                expected = 'sig';\n                break;\n            case 'encrypt':\n            case 'decrypt':\n                expected = 'enc';\n                break;\n        }\n        if (key.use !== expected) {\n            throw new TypeError(`Invalid key for this operation, its \"use\" must be \"${expected}\" when present`);\n        }\n    }\n    if (key.alg !== undefined && key.alg !== alg) {\n        throw new TypeError(`Invalid key for this operation, its \"alg\" must be \"${alg}\" when present`);\n    }\n    if (Array.isArray(key.key_ops)) {\n        let expectedKeyOp;\n        switch (true) {\n            case usage === 'sign' || usage === 'verify':\n            case alg === 'dir':\n            case alg.includes('CBC-HS'):\n                expectedKeyOp = usage;\n                break;\n            case alg.startsWith('PBES2'):\n                expectedKeyOp = 'deriveBits';\n                break;\n            case /^A\\d{3}(?:GCM)?(?:KW)?$/.test(alg):\n                if (!alg.includes('GCM') && alg.endsWith('KW')) {\n                    expectedKeyOp = usage === 'encrypt' ? 'wrapKey' : 'unwrapKey';\n                }\n                else {\n                    expectedKeyOp = usage;\n                }\n                break;\n            case usage === 'encrypt' && alg.startsWith('RSA'):\n                expectedKeyOp = 'wrapKey';\n                break;\n            case usage === 'decrypt':\n                expectedKeyOp = alg.startsWith('RSA') ? 'unwrapKey' : 'deriveBits';\n                break;\n        }\n        if (expectedKeyOp && key.key_ops?.includes?.(expectedKeyOp) === false) {\n            throw new TypeError(`Invalid key for this operation, its \"key_ops\" must include \"${expectedKeyOp}\" when present`);\n        }\n    }\n    return true;\n};\nconst symmetricTypeCheck = (alg, key, usage) => {\n    if (key instanceof Uint8Array)\n        return;\n    if (jwk.isJWK(key)) {\n        if (jwk.isSecretJWK(key) && jwkMatchesOp(alg, key, usage))\n            return;\n        throw new TypeError(`JSON Web Key for symmetric algorithms must have JWK \"kty\" (Key Type) equal to \"oct\" and the JWK \"k\" (Key Value) present`);\n    }\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, 'CryptoKey', 'KeyObject', 'JSON Web Key', 'Uint8Array'));\n    }\n    if (key.type !== 'secret') {\n        throw new TypeError(`${tag(key)} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (alg, key, usage) => {\n    if (jwk.isJWK(key)) {\n        switch (usage) {\n            case 'decrypt':\n            case 'sign':\n                if (jwk.isPrivateJWK(key) && jwkMatchesOp(alg, key, usage))\n                    return;\n                throw new TypeError(`JSON Web Key for this operation be a private JWK`);\n            case 'encrypt':\n            case 'verify':\n                if (jwk.isPublicJWK(key) && jwkMatchesOp(alg, key, usage))\n                    return;\n                throw new TypeError(`JSON Web Key for this operation be a public JWK`);\n        }\n    }\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, 'CryptoKey', 'KeyObject', 'JSON Web Key'));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (key.type === 'public') {\n        switch (usage) {\n            case 'sign':\n                throw new TypeError(`${tag(key)} instances for asymmetric algorithm signing must be of type \"private\"`);\n            case 'decrypt':\n                throw new TypeError(`${tag(key)} instances for asymmetric algorithm decryption must be of type \"private\"`);\n            default:\n                break;\n        }\n    }\n    if (key.type === 'private') {\n        switch (usage) {\n            case 'verify':\n                throw new TypeError(`${tag(key)} instances for asymmetric algorithm verifying must be of type \"public\"`);\n            case 'encrypt':\n                throw new TypeError(`${tag(key)} instances for asymmetric algorithm encryption must be of type \"public\"`);\n            default:\n                break;\n        }\n    }\n};\nexport default (alg, key, usage) => {\n    const symmetric = alg.startsWith('HS') ||\n        alg === 'dir' ||\n        alg.startsWith('PBES2') ||\n        /^A(?:128|192|256)(?:GCM)?(?:KW)?$/.test(alg) ||\n        /^A(?:128|192|256)CBC-HS(?:256|384|512)$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(alg, key, usage);\n    }\n    else {\n        asymmetricTypeCheck(alg, key, usage);\n    }\n};\n", "import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n", "import { decode as b64u } from '../../util/base64url.js';\nimport verify from '../../lib/verify.js';\nimport { JOSEAlgNotAllowed, JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport { concat, encoder, decoder } from '../../lib/buffer_utils.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport checkKeyType from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nimport normalizeKey from '../../lib/normalize_key.js';\nexport async function flattenedVerify(jws, key, options) {\n    if (!isObject(jws)) {\n        throw new JWSInvalid('Flattened JWS must be an object');\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n        throw new JWSInvalid('JWS Protected Header incorrect type');\n    }\n    if (jws.payload === undefined) {\n        throw new JWSInvalid('JWS Payload missing');\n    }\n    if (typeof jws.signature !== 'string') {\n        throw new JWSInvalid('JWS Signature missing or incorrect type');\n    }\n    if (jws.header !== undefined && !isObject(jws.header)) {\n        throw new JWSInvalid('JWS Unprotected Header incorrect type');\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = b64u(jws.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch {\n            throw new JWSInvalid('JWS Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jws.header)) {\n        throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header,\n    };\n    const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== 'boolean') {\n            throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter value not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== 'string') {\n            throw new JWSInvalid('JWS Payload must be a string');\n        }\n    }\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n        throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n    }\n    checkKeyType(alg, key, 'verify');\n    const data = concat(encoder.encode(jws.protected ?? ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\n    let signature;\n    try {\n        signature = b64u(jws.signature);\n    }\n    catch {\n        throw new JWSInvalid('Failed to base64url decode the signature');\n    }\n    const k = await normalizeKey(key, alg);\n    const verified = await verify(alg, k, signature, data);\n    if (!verified) {\n        throw new JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        try {\n            payload = b64u(jws.payload);\n        }\n        catch {\n            throw new JWSInvalid('Failed to base64url decode the payload');\n        }\n    }\n    else if (typeof jws.payload === 'string') {\n        payload = encoder.encode(jws.payload);\n    }\n    else {\n        payload = jws.payload;\n    }\n    const result = { payload };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key: k };\n    }\n    return result;\n}\n", "import subtleAlgorithm from './subtle_dsa.js';\nimport checkKeyLength from './check_key_length.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nexport default async (alg, key, signature, data) => {\n    const cryptoKey = await getVerifyKey(alg, key, 'verify');\n    checkKeyLength(alg, cryptoKey);\n    const algorithm = subtleAlgorithm(alg, cryptoKey.algorithm);\n    try {\n        return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n    }\n    catch {\n        return false;\n    }\n};\n", "import { JOSENotSupported } from '../util/errors.js';\nexport default (alg, algorithm) => {\n    const hash = `SHA-${alg.slice(-3)}`;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            return { hash, name: 'HMAC' };\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            return { hash, name: 'RSA-PSS', saltLength: parseInt(alg.slice(-3), 10) >> 3 };\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            return { hash, name: 'RSASSA-PKCS1-v1_5' };\n        case 'ES256':\n        case 'ES384':\n        case 'ES512':\n            return { hash, name: 'ECDSA', namedCurve: algorithm.namedCurve };\n        case 'Ed25519':\n        case 'EdDSA':\n            return { name: 'Ed25519' };\n        case 'ML-DSA-44':\n        case 'ML-DSA-65':\n        case 'ML-DSA-87':\n            return { name: alg };\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n};\n", "import { checkSigCryptoKey } from './crypto_key.js';\nimport invalidKeyInput from './invalid_key_input.js';\nexport default async (alg, key, usage) => {\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith('HS')) {\n            throw new TypeError(invalidKeyInput(key, 'CryptoKey', 'KeyObject', 'JSON Web Key'));\n        }\n        return crypto.subtle.importKey('raw', key, { hash: `SHA-${alg.slice(-3)}`, name: 'HMAC' }, false, [usage]);\n    }\n    checkSigCryptoKey(key, alg, usage);\n    return key;\n};\n", "import { compactVerify } from '../jws/compact/verify.js';\nimport { validateClaimsSet } from '../lib/jwt_claims_set.js';\nimport { JWTInvalid } from '../util/errors.js';\nexport async function jwtVerify(jwt, key, options) {\n    const verified = await compactVerify(jwt, key, options);\n    if (verified.protectedHeader.crit?.includes('b64') && verified.protectedHeader.b64 === false) {\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = validateClaimsSet(verified.protectedHeader, verified.payload, options);\n    const result = { payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n", "import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nimport { encoder } from './buffer_utils.js';\nfunction validateInput(label, input) {\n    if (!Number.isFinite(input)) {\n        throw new TypeError(`Invalid ${label} input`);\n    }\n    return input;\n}\nconst normalizeTyp = (value) => {\n    if (value.includes('/')) {\n        return value.toLowerCase();\n    }\n    return `application/${value.toLowerCase()}`;\n};\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexport function validateClaimsSet(protectedHeader, encodedPayload, options = {}) {\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', payload, 'typ', 'check_failed');\n    }\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\n    const presenceCheck = [...requiredClaims];\n    if (maxTokenAge !== undefined)\n        presenceCheck.push('iat');\n    if (audience !== undefined)\n        presenceCheck.push('aud');\n    if (subject !== undefined)\n        presenceCheck.push('sub');\n    if (issuer !== undefined)\n        presenceCheck.push('iss');\n    for (const claim of new Set(presenceCheck.reverse())) {\n        if (!(claim in payload)) {\n            throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, payload, claim, 'missing');\n        }\n    }\n    if (issuer &&\n        !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', payload, 'iss', 'check_failed');\n    }\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', payload, 'sub', 'check_failed');\n    }\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', payload, 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', payload, 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', payload, 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', payload, 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', payload, 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', payload, 'exp', 'check_failed');\n        }\n    }\n    if (maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', payload, 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', payload, 'iat', 'check_failed');\n        }\n    }\n    return payload;\n}\nexport class JWTClaimsBuilder {\n    #payload;\n    constructor(payload) {\n        if (!isObject(payload)) {\n            throw new TypeError('JWT Claims Set MUST be an object');\n        }\n        this.#payload = structuredClone(payload);\n    }\n    data() {\n        return encoder.encode(JSON.stringify(this.#payload));\n    }\n    get iss() {\n        return this.#payload.iss;\n    }\n    set iss(value) {\n        this.#payload.iss = value;\n    }\n    get sub() {\n        return this.#payload.sub;\n    }\n    set sub(value) {\n        this.#payload.sub = value;\n    }\n    get aud() {\n        return this.#payload.aud;\n    }\n    set aud(value) {\n        this.#payload.aud = value;\n    }\n    set jti(value) {\n        this.#payload.jti = value;\n    }\n    set nbf(value) {\n        if (typeof value === 'number') {\n            this.#payload.nbf = validateInput('setNotBefore', value);\n        }\n        else if (value instanceof Date) {\n            this.#payload.nbf = validateInput('setNotBefore', epoch(value));\n        }\n        else {\n            this.#payload.nbf = epoch(new Date()) + secs(value);\n        }\n    }\n    set exp(value) {\n        if (typeof value === 'number') {\n            this.#payload.exp = validateInput('setExpirationTime', value);\n        }\n        else if (value instanceof Date) {\n            this.#payload.exp = validateInput('setExpirationTime', epoch(value));\n        }\n        else {\n            this.#payload.exp = epoch(new Date()) + secs(value);\n        }\n    }\n    set iat(value) {\n        if (typeof value === 'undefined') {\n            this.#payload.iat = epoch(new Date());\n        }\n        else if (value instanceof Date) {\n            this.#payload.iat = validateInput('setIssuedAt', epoch(value));\n        }\n        else if (typeof value === 'string') {\n            this.#payload.iat = validateInput('setIssuedAt', epoch(new Date()) + secs(value));\n        }\n        else {\n            this.#payload.iat = validateInput('setIssuedAt', value);\n        }\n    }\n}\n", "export default (date) => Math.floor(date.getTime() / 1000);\n", "const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\+|\\-)? ?(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)(?: (ago|from now))?$/i;\nexport default (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched || (matched[4] && matched[1])) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[2]);\n    const unit = matched[3].toLowerCase();\n    let numericDate;\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            numericDate = Math.round(value);\n            break;\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            numericDate = Math.round(value * minute);\n            break;\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            numericDate = Math.round(value * hour);\n            break;\n        case 'day':\n        case 'days':\n        case 'd':\n            numericDate = Math.round(value * day);\n            break;\n        case 'week':\n        case 'weeks':\n        case 'w':\n            numericDate = Math.round(value * week);\n            break;\n        default:\n            numericDate = Math.round(value * year);\n            break;\n    }\n    if (matched[1] === '-' || matched[4] === 'ago') {\n        return -numericDate;\n    }\n    return numericDate;\n};\n", "import { FlattenedSign } from '../flattened/sign.js';\nexport class CompactSign {\n    #flattened;\n    constructor(payload) {\n        this.#flattened = new FlattenedSign(payload);\n    }\n    setProtectedHeader(protectedHeader) {\n        this.#flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    async sign(key, options) {\n        const jws = await this.#flattened.sign(key, options);\n        if (jws.payload === undefined) {\n            throw new TypeError('use the flattened module for creating JWS with b64: false');\n        }\n        return `${jws.protected}.${jws.payload}.${jws.signature}`;\n    }\n}\n", "import { encode as b64u } from '../../util/base64url.js';\nimport sign from '../../lib/sign.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport checkKeyType from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport normalizeKey from '../../lib/normalize_key.js';\nexport class FlattenedSign {\n    #payload;\n    #protectedHeader;\n    #unprotectedHeader;\n    constructor(payload) {\n        if (!(payload instanceof Uint8Array)) {\n            throw new TypeError('payload must be an instance of Uint8Array');\n        }\n        this.#payload = payload;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this.#protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this.#protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.#unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this.#unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        if (!this.#protectedHeader && !this.#unprotectedHeader) {\n            throw new JWSInvalid('either setProtectedHeader or setUnprotectedHeader must be called before #sign()');\n        }\n        if (!isDisjoint(this.#protectedHeader, this.#unprotectedHeader)) {\n            throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this.#protectedHeader,\n            ...this.#unprotectedHeader,\n        };\n        const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, this.#protectedHeader, joseHeader);\n        let b64 = true;\n        if (extensions.has('b64')) {\n            b64 = this.#protectedHeader.b64;\n            if (typeof b64 !== 'boolean') {\n                throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n            }\n        }\n        const { alg } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        checkKeyType(alg, key, 'sign');\n        let payload = this.#payload;\n        if (b64) {\n            payload = encoder.encode(b64u(payload));\n        }\n        let protectedHeader;\n        if (this.#protectedHeader) {\n            protectedHeader = encoder.encode(b64u(JSON.stringify(this.#protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        const data = concat(protectedHeader, encoder.encode('.'), payload);\n        const k = await normalizeKey(key, alg);\n        const signature = await sign(alg, k, data);\n        const jws = {\n            signature: b64u(signature),\n            payload: '',\n        };\n        if (b64) {\n            jws.payload = decoder.decode(payload);\n        }\n        if (this.#unprotectedHeader) {\n            jws.header = this.#unprotectedHeader;\n        }\n        if (this.#protectedHeader) {\n            jws.protected = decoder.decode(protectedHeader);\n        }\n        return jws;\n    }\n}\n", "import subtleAlgorithm from './subtle_dsa.js';\nimport checkKeyLength from './check_key_length.js';\nimport getSignKey from './get_sign_verify_key.js';\nexport default async (alg, key, data) => {\n    const cryptoKey = await getSignKey(alg, key, 'sign');\n    checkKeyLength(alg, cryptoKey);\n    const signature = await crypto.subtle.sign(subtleAlgorithm(alg, cryptoKey.algorithm), cryptoKey, data);\n    return new Uint8Array(signature);\n};\n", "import { CompactSign } from '../jws/compact/sign.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport { JWTClaimsBuilder } from '../lib/jwt_claims_set.js';\nexport class SignJWT {\n    #protectedHeader;\n    #jwt;\n    constructor(payload = {}) {\n        this.#jwt = new JWTClaimsBuilder(payload);\n    }\n    setIssuer(issuer) {\n        this.#jwt.iss = issuer;\n        return this;\n    }\n    setSubject(subject) {\n        this.#jwt.sub = subject;\n        return this;\n    }\n    setAudience(audience) {\n        this.#jwt.aud = audience;\n        return this;\n    }\n    setJti(jwtId) {\n        this.#jwt.jti = jwtId;\n        return this;\n    }\n    setNotBefore(input) {\n        this.#jwt.nbf = input;\n        return this;\n    }\n    setExpirationTime(input) {\n        this.#jwt.exp = input;\n        return this;\n    }\n    setIssuedAt(input) {\n        this.#jwt.iat = input;\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        this.#protectedHeader = protectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        const sig = new CompactSign(this.#jwt.data());\n        sig.setProtectedHeader(this.#protectedHeader);\n        if (Array.isArray(this.#protectedHeader?.crit) &&\n            this.#protectedHeader.crit.includes('b64') &&\n            this.#protectedHeader.b64 === false) {\n            throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n        }\n        return sig.sign(key, options);\n    }\n}\n", "import { z } from \"zod\";\r\nimport { withSecurity } from \"../middleware/securityHeaders\";\r\n\r\nexport const PostReqSchema = z.object({\r\n  tenant: z.string().min(1),\r\n  template: z.string().min(1),\r\n  channels: z.array(z.string().min(1)).min(1),\r\n  data: z.record(z.any())\r\n});\r\n\r\nexport function json(body: unknown, status = 200, headers: HeadersInit = {}) {\r\n  const finalHeaders = new Headers({ \"content-type\": \"application/json\" });\r\n  const extra = new Headers(headers);\r\n  extra.forEach((value, key) => finalHeaders.set(key, value));\r\n\r\n  const requestId = finalHeaders.get(\"X-Request-Id\") || undefined;\r\n  const release = finalHeaders.get(\"X-Release\") || undefined;\r\n\r\n  let payload = body;\r\n  if (payload && typeof payload === \"object\") {\r\n    const original = payload as Record<string, any>;\r\n    let changed = false;\r\n    const updated: Record<string, any> = { ...original };\r\n\r\n    if (requestId && updated.success === false) {\r\n      const err = updated.error;\r\n      const normalizedError =\r\n        err && typeof err === \"object\" && !Array.isArray(err)\r\n          ? { ...err }\r\n          : { code: \"INTERNAL\", message: typeof err === \"string\" ? err : \"Unexpected error\" };\r\n      if (!normalizedError.requestId) {\r\n        normalizedError.requestId = requestId;\r\n      }\r\n      updated.error = normalizedError;\r\n      changed = true;\r\n    }\r\n\r\n    if (release) {\r\n      const meta = updated.meta;\r\n      const normalizedMeta = meta && typeof meta === \"object\" && !Array.isArray(meta) ? { ...meta } : {};\r\n      if (!normalizedMeta.release) {\r\n        normalizedMeta.release = release;\r\n        updated.meta = normalizedMeta;\r\n        changed = true;\r\n      } else if (updated.meta !== normalizedMeta) {\r\n        updated.meta = normalizedMeta;\r\n      }\r\n    }\r\n\r\n    if (changed) {\r\n      payload = updated;\r\n    }\r\n  }\r\n\r\n  const bodyText = typeof payload === \"string\" ? payload : JSON.stringify(payload);\r\n  return new Response(bodyText, withSecurity({ status, headers: finalHeaders }));\r\n  return new Response(JSON.stringify(body), withSecurity({ status, headers: finalHeaders }));\r\n}\r\n\r\nexport function cors(originList: string[] | null, reqOrigin: string | null) {\r\n  // Default allowed origins for development (only used if CORS_ALLOWED not set)\r\n  const defaultAllowed = new Set([\r\n    \"https://localhost:5173\",\r\n    \"http://localhost:5173\",\r\n    \"https://localhost:3000\",\r\n    \"http://localhost:3000\",\r\n    \"capacitor://localhost\",\r\n  ]);\r\n\r\n  // If CORS_ALLOWED is set, only allow those origins; otherwise use dev defaults\r\n  const allowed = originList\r\n    ? new Set(originList)\r\n    : defaultAllowed;\r\n\r\n  const origin = reqOrigin || \"\";\r\n  const allowOrigin = allowed.has(origin) ? origin : \"*\";\r\n\r\n  return {\r\n    \"Access-Control-Allow-Origin\": allowOrigin,\r\n    \"Access-Control-Allow-Methods\": \"GET,POST,PUT,DELETE,OPTIONS\",\r\n    \"Access-Control-Allow-Headers\": \"content-type,authorization,Idempotency-Key,x-amz-content-sha256,x-amz-date,x-amz-acl,x-amz-meta-*\",\r\n    \"Vary\": \"Origin\"\r\n  };\r\n}\r\n\r\nexport function readIdempotencyKey(req: Request) {\r\n  return req.headers.get(\"Idempotency-Key\") || \"\";\r\n}\r\n\r\n// Additional utility helpers\r\nexport function assert(cond: any, msg = \"bad request\") {\r\n  if (!cond) throw badReq(msg);\r\n}\r\n\r\nexport function badReq(message: string) {\r\n  return Object.assign(new Error(message), { status: 400 });\r\n}\r\n\r\nexport function nowMs() {\r\n  return Date.now();\r\n}\r\n\r\nexport function expMs(ttlMinutes: number) {\r\n  return Date.now() + ttlMinutes * 60_000;\r\n}\r\n\r\nexport function id() {\r\n  return Math.random().toString(36).slice(2) + Math.random().toString(36).slice(2);\r\n}\r\n\r\n// nanoid-like implementation (no dependency needed)\r\nexport function nanoid(size = 21) {\r\n  const alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r\n  let id = '';\r\n  const bytes = new Uint8Array(size);\r\n  crypto.getRandomValues(bytes);\r\n  for (let i = 0; i < size; i++) {\r\n    id += alphabet[bytes[i] % alphabet.length];\r\n  }\r\n  return id;\r\n}\r\n\r\n// KV helpers\r\nexport async function kvGetJSON<T>(kv: KVNamespace, key: string) {\r\n  return (await kv.get(key, \"json\")) as T | null;\r\n}\r\n\r\nexport async function kvPutJSON(kv: KVNamespace, key: string, value: any, opts?: KVNamespacePutOptions) {\r\n  return kv.put(key, JSON.stringify(value), opts);\r\n}\r\n\r\nexport async function kvListJSON<T>(kv: KVNamespace, prefix: string) {\r\n  const list = await kv.list({ prefix, limit: 1000 });\r\n  const rows = await Promise.all(list.keys.map((k) => kv.get(k.name, \"json\") as Promise<T>));\r\n  return rows.filter(Boolean) as T[];\r\n}\r\n", "const CONNECT_SRC = [\r\n  \"'self'\",\r\n  \"https://syston-postbus.team-platform-2025.workers.dev\",\r\n  \"https://api.systontigers.co.uk\",\r\n].join(\" \");\r\n\r\nexport const securityHeaders = {\r\n  \"Strict-Transport-Security\": \"max-age=31536000; includeSubDomains; preload\",\r\n  \"X-Content-Type-Options\": \"nosniff\",\r\n  \"X-Frame-Options\": \"DENY\",\r\n  \"Referrer-Policy\": \"no-referrer\",\r\n  \"Cross-Origin-Opener-Policy\": \"same-origin\",\r\n  \"Cross-Origin-Embedder-Policy\": \"require-corp\",\r\n  // Adjust connect-src to include your public API origin(s) if needed:\r\n  \"Content-Security-Policy\":\r\n    `default-src 'self'; img-src 'self' https: data:; script-src 'self'; style-src 'self' 'unsafe-inline'; connect-src ${CONNECT_SRC}; font-src 'self' https:`,\r\n} as const;\r\n\r\nexport function withSecurity(init: ResponseInit = {}): ResponseInit {\r\n  const h = new Headers(init.headers || {});\r\n  for (const [k, v] of Object.entries(securityHeaders)) h.set(k, v);\r\n  return { ...init, headers: h };\r\n}\r\n", "import { verifyAndNormalize, requireAdminClaims, type Claims } from \"./jwt\";\r\n\r\n/**\r\n * Helper to extract Bearer token from request\r\n */\r\nfunction getBearer(req: Request): string {\r\n  const hdr = req.headers.get(\"authorization\") || \"\";\r\n  const token = hdr.startsWith(\"Bearer \") ? hdr.slice(7) : \"\";\r\n  if (!token) throw new Response(\"Unauthorized\", { status: 401 });\r\n  return token;\r\n}\r\n\r\n/**\r\n * Helper to create forbidden response\r\n */\r\nfunction forbidden(): Response {\r\n  return new Response(JSON.stringify({ success: false, error: { code: \"FORBIDDEN\" } }), {\r\n    status: 403,\r\n    headers: { \"content-type\": \"application/json\" }\r\n  });\r\n}\r\n\r\n/**\r\n * Verify JWT and return normalized claims\r\n */\r\nexport async function requireJWT(req: Request, env: any): Promise<Claims> {\r\n  const token = getBearer(req);\r\n  try {\r\n    return await verifyAndNormalize(token, env);\r\n  } catch (e: any) {\r\n    console.warn(\"JWT_VERIFY_FAIL\", {\r\n      path: new URL(req.url).pathname,\r\n      reason: e?.message || String(e),\r\n    });\r\n    throw new Response(\"Unauthorized\", { status: 401 });\r\n  }\r\n}\r\n\r\n/**\r\n * Require admin role with detailed logging\r\n */\r\nexport async function requireAdmin(req: Request, env: any): Promise<Claims> {\r\n  const token = getBearer(req);\r\n  let claims: Claims | undefined;\r\n  try {\r\n    claims = await verifyAndNormalize(token, env);\r\n    // sub can be 'admin' or 'admin-user'; don't hard-reject on sub value\r\n    requireAdminClaims(claims);\r\n    // Optional: If you enforce system tenant for platform admin:\r\n    // if (!isSystemTenant(claims)) throw new Error(\"admin must be system tenant\");\r\n    return claims;\r\n  } catch (e: any) {\r\n    // Add VERY CLEAR logging (but do not print full token)\r\n    console.warn(\"AUTH_FAIL\", {\r\n      path: new URL(req.url).pathname,\r\n      reason: e?.message || String(e),\r\n      hdrPrefix: (req.headers.get(\"authorization\") || \"\").slice(0, 16),\r\n      claims, // safe: just decoded payload\r\n    });\r\n    throw forbidden();\r\n  }\r\n}\r\n\r\n/**\r\n * Helper to check if a user has a specific role\r\n */\r\nexport function hasRole(user: Claims | { role?: string; roles?: string[] }, requiredRole: string): boolean {\r\n  if ('roles' in user && Array.isArray(user.roles)) {\r\n    return user.roles.includes(requiredRole);\r\n  }\r\n  if ('role' in user && user.role === requiredRole) return true;\r\n  return false;\r\n}\r\n", "import { SignJWT, jwtVerify } from \"jose\";\r\n\r\n// Claim types for normalization\r\nexport type RawClaims = {\r\n  iss?: string; aud?: string; sub?: string;\r\n  roles?: string[]; role?: string;\r\n  tenantId?: string; tenant_id?: string; tenant?: string;\r\n  iat?: number; exp?: number;\r\n};\r\n\r\nexport type Claims = {\r\n  iss: string;\r\n  aud?: string;\r\n  sub?: string;\r\n  roles: string[];\r\n  tenantId?: string;\r\n  iat?: number;\r\n  exp?: number;\r\n};\r\n\r\n// Normalize claims to handle both old and new formats\r\nexport function normalizeClaims(c: RawClaims): Claims {\r\n  const roles = Array.isArray(c.roles)\r\n    ? c.roles\r\n    : (typeof c.role === \"string\" ? [c.role] : []);\r\n\r\n  const tenantId = c.tenantId ?? (c as any).tenant_id ?? c.tenant;\r\n\r\n  return {\r\n    iss: c.iss ?? \"\",\r\n    aud: c.aud,\r\n    sub: c.sub,\r\n    roles,\r\n    tenantId,\r\n    iat: c.iat,\r\n    exp: c.exp,\r\n  };\r\n}\r\n\r\n// Helper to get JWT secret as key\r\nfunction getJwtSecret(env: any): Uint8Array {\r\n  const raw = env.JWT_SECRET || \"\";\r\n  // Try base64 first, fallback to plain text\r\n  try {\r\n    return Uint8Array.from(atob(raw), c => c.charCodeAt(0));\r\n  } catch {\r\n    return new TextEncoder().encode(raw);\r\n  }\r\n}\r\n\r\n// Verify and normalize JWT claims\r\nexport async function verifyAndNormalize(token: string, env: any): Promise<Claims> {\r\n  const secret = getJwtSecret(env);\r\n  const { payload } = await jwtVerify(token, secret, {\r\n    issuer: env.JWT_ISSUER,\r\n    audience: env.JWT_AUDIENCE,\r\n    clockTolerance: 300, // 5 minutes skew\r\n  });\r\n  return normalizeClaims(payload as RawClaims);\r\n}\r\n\r\n// Helper to require admin claims\r\nexport function requireAdminClaims(claims: Claims) {\r\n  if (!claims.roles.includes(\"admin\")) {\r\n    throw new Error(\"requires admin role\");\r\n  }\r\n}\r\n\r\n// Helper to check if system tenant\r\nexport function isSystemTenant(claims: Claims) {\r\n  return !claims.tenantId || claims.tenantId === \"system\";\r\n}\r\n\r\nexport async function issueTenantAdminJWT(env: any, args: { tenant_id: string; ttlMinutes: number }) {\r\n  const secret = getJwtSecret(env);\r\n  const now = Math.floor(Date.now() / 1000);\r\n  const exp = now + args.ttlMinutes * 60;\r\n\r\n  const token = await new SignJWT({\r\n    roles: [\"tenant_admin\"],\r\n    tenant_id: args.tenant_id,\r\n  })\r\n    .setProtectedHeader({ alg: \"HS256\", typ: \"JWT\" })\r\n    .setIssuer(env.JWT_ISSUER)\r\n    .setAudience(env.JWT_AUDIENCE)\r\n    .setIssuedAt(now)\r\n    .setExpirationTime(exp)\r\n    .sign(secret);\r\n\r\n  return token;\r\n}\r\n\r\n// Generate short-lived service JWT for internal API calls\r\nexport async function generateServiceJWT(env: any, ttlSeconds = 30): Promise<string> {\r\n  const secret = getJwtSecret(env);\r\n  const now = Math.floor(Date.now() / 1000);\r\n  const exp = now + ttlSeconds;\r\n\r\n  const token = await new SignJWT({\r\n    roles: [\"service\"],\r\n    type: \"service\",\r\n  })\r\n    .setProtectedHeader({ alg: \"HS256\", typ: \"JWT\" })\r\n    .setIssuer(env.JWT_ISSUER || \"syston.app\")\r\n    .setAudience(\"internal\")\r\n    .setIssuedAt(now)\r\n    .setExpirationTime(exp)\r\n    .sign(secret);\r\n\r\n  return token;\r\n}\r\n\r\n// Verify service JWT\r\nexport async function verifyServiceJWT(env: any, token: string): Promise<boolean> {\r\n  try {\r\n    const secret = getJwtSecret(env);\r\n    const { payload } = await jwtVerify(token, secret, {\r\n      issuer: env.JWT_ISSUER || \"syston.app\",\r\n      audience: \"internal\",\r\n      clockTolerance: 10, // 10 seconds skew\r\n    });\r\n\r\n    const claims = normalizeClaims(payload as RawClaims);\r\n    return claims.roles.includes(\"service\");\r\n  } catch (error) {\r\n    console.error('[Service JWT] Verification failed:', error);\r\n    return false;\r\n  }\r\n}\r\n", "export async function ensureIdempotent(env: any, tenantId: string, body: unknown, explicitKey?: string) {\r\n  const key = explicitKey || await hashKey(tenantId, body);\r\n  const existing = await env.KV_IDEMP.get(key);\r\n  if (existing) return { hit: true as const, key, response: JSON.parse(existing) };\r\n  return {\r\n    hit: false as const,\r\n    key,\r\n    store: async (resp: unknown) => {\r\n      await env.KV_IDEMP.put(key, JSON.stringify(resp), { expirationTtl: 86400 });\r\n    }\r\n  };\r\n}\r\n\r\nexport async function setFinalIdempotent(env: any, key: string, resp: unknown) {\r\n  await env.KV_IDEMP.put(key, JSON.stringify(resp), { expirationTtl: 86400 });\r\n}\r\n\r\nasync function hashKey(tenantId: string, body: unknown) {\r\n  const txt = tenantId + \":\" + JSON.stringify(body);\r\n  const digest = await crypto.subtle.digest(\"SHA-256\", new TextEncoder().encode(txt));\r\n  return \"idem:\" + tenantId + \":\" + [...new Uint8Array(digest)].map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\r\n}\r\n", "import { TenantConfig, TenantFlags, TenantId, TenantCredentials, Channel } from \"../types\";\r\n\r\nconst key = (tenant: TenantId) => `tenant:${tenant}`;\r\n\r\nexport async function getTenantConfig(env: any, tenant: TenantId): Promise<TenantConfig | null> {\r\n  const raw = await env.KV_IDEMP.get(key(tenant));\r\n  if (!raw) return null;\r\n  try { return JSON.parse(raw) as TenantConfig; } catch { return null; }\r\n}\r\n\r\nexport async function putTenantConfig(env: any, cfg: TenantConfig): Promise<void> {\r\n  cfg.updated_at = Date.now();\r\n  await env.KV_IDEMP.put(key(cfg.id), JSON.stringify(cfg));\r\n}\r\n\r\nexport async function ensureTenant(env: any, tenant: TenantId): Promise<TenantConfig> {\r\n  const existing = await getTenantConfig(env, tenant);\r\n  if (existing) return existing;\r\n  const fresh: TenantConfig = {\r\n    id: tenant,\r\n    flags: { use_make: false, direct_yt: true },\r\n    creds: {},\r\n    makeWebhookUrl: null,\r\n    created_at: Date.now(),\r\n    updated_at: Date.now(),\r\n  };\r\n  await putTenantConfig(env, fresh);\r\n  return fresh;\r\n}\r\n\r\nexport async function updateFlags(env: any, tenant: TenantId, flags: Partial<TenantFlags>): Promise<TenantConfig> {\r\n  const cfg = await ensureTenant(env, tenant);\r\n  cfg.flags = { ...cfg.flags, ...flags };\r\n  await putTenantConfig(env, cfg);\r\n  return cfg;\r\n}\r\n\r\nexport async function setMakeWebhook(env: any, tenant: TenantId, url: string): Promise<TenantConfig> {\r\n  const cfg = await ensureTenant(env, tenant);\r\n  cfg.makeWebhookUrl = url;\r\n  await putTenantConfig(env, cfg);\r\n  return cfg;\r\n}\r\n\r\n// Backward compatibility: old getTenant function\r\nexport async function getTenant(env: any, tenantId: string) {\r\n  return await ensureTenant(env, tenantId);\r\n}\r\n\r\n// New helper functions for per-channel management\r\n\r\nexport async function setTenantFlags(env: any, tenant: TenantId, patch: Partial<TenantFlags>): Promise<TenantConfig> {\r\n  const cfg = await ensureTenant(env, tenant);\r\n  cfg.flags = { ...cfg.flags, ...patch };\r\n  await putTenantConfig(env, cfg);\r\n  return cfg;\r\n}\r\n\r\nexport async function setTenantCreds(env: any, tenant: TenantId, patch: Partial<TenantCredentials>): Promise<TenantConfig> {\r\n  const cfg = await ensureTenant(env, tenant);\r\n  cfg.creds = { ...cfg.creds, ...patch };\r\n  await putTenantConfig(env, cfg);\r\n  return cfg;\r\n}\r\n\r\nexport async function setChannelWebhook(env: any, tenant: TenantId, channel: Channel, url: string): Promise<TenantConfig> {\r\n  const cfg = await ensureTenant(env, tenant);\r\n  if (!cfg.creds) cfg.creds = {};\r\n  if (!cfg.creds.make) cfg.creds.make = {};\r\n  cfg.creds.make[channel] = url;\r\n  await putTenantConfig(env, cfg);\r\n  return cfg;\r\n}\r\n\r\nexport async function setYouTubeBYOGoogle(env: any, tenant: TenantId, client_id: string, client_secret: string): Promise<TenantConfig> {\r\n  const cfg = await ensureTenant(env, tenant);\r\n  if (!cfg.creds) cfg.creds = {};\r\n  if (!cfg.creds.yt) cfg.creds.yt = {};\r\n  cfg.creds.yt.client_id = client_id;\r\n  cfg.creds.yt.client_secret = client_secret;\r\n  await putTenantConfig(env, cfg);\r\n  return cfg;\r\n}\r\n\r\n// Webhook host validation with suffix support - defensive, never throws\r\nexport function isAllowedWebhookHost(host: string, allowedCsv: string): boolean {\r\n  try {\r\n    if (!host) return false;\r\n    const raw = (allowedCsv || \"\").trim();\r\n    if (!raw) return false; // fail closed if no config\r\n\r\n    const items = raw\r\n      .split(',')\r\n      .map(s => s.trim().toLowerCase())\r\n      .filter(Boolean);\r\n\r\n    const h = host.toLowerCase();\r\n\r\n    // Exact match\r\n    if (items.includes(h)) return true;\r\n\r\n    // Wildcard *.make.com\r\n    if (items.includes(\"*.make.com\") && h.endsWith(\".make.com\")) return true;\r\n\r\n    // Generic make.com allowance (exact or any subdomain)\r\n    if (items.includes(\"make.com\") && (h === \"make.com\" || h.endsWith(\".make.com\"))) return true;\r\n\r\n    // Check other suffix rules\r\n    for (const item of items) {\r\n      if (item.startsWith('.')) {\r\n        // explicit suffix rule (e.g. \".make.com\")\r\n        if (h.endsWith(item)) return true;\r\n      } else if (item.startsWith('*.')) {\r\n        // wildcard style (e.g. \"*.make.com\")\r\n        const suf = item.slice(1); // \".make.com\"\r\n        if (h.endsWith(suf)) return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  } catch {\r\n    return false; // never crash due to parsing errors\r\n  }\r\n}\r\n", "import type { PostJob, Channel } from \"./types\";\r\nimport { publishViaMake } from \"./adapters/make\";\r\nimport { publishYouTube } from \"./adapters/youtube\";\r\nimport { publishFacebook } from \"./adapters/facebook\";\r\nimport { publishInstagram } from \"./adapters/instagram\";\r\nimport { publishTikTok } from \"./adapters/tiktok\";\r\nimport { publishX } from \"./adapters/x\";\r\nimport { setFinalIdempotent } from \"./services/idempotency\";\r\nimport { getTenantConfig } from \"./services/tenants\";\r\nimport { shouldDefer, incrementCounter } from \"./services/rateAware\";\r\n\r\nexport default {\r\n  async queue(batch: QueueBatch<PostJob>, env: any) {\r\n    for (const msg of batch.messages) {\r\n      const job = msg.body;\r\n      try {\r\n        const cfg = job?.tenant ? await getTenantConfig(env, job.tenant) : null;\r\n        if (!cfg) throw new Error(`Tenant ${job.tenant} not found`);\r\n\r\n        const useMake = !!cfg?.flags?.use_make;\r\n        const hook = cfg?.makeWebhookUrl || null;\r\n\r\n        // Legacy: if use_make=true, forward ALL channels to Make webhook\r\n        if (useMake && hook) {\r\n          const results: Record<string, unknown> = {};\r\n          for (const ch of job.channels) {\r\n            results[ch] = await publishViaMake(env, cfg, job.template, job.data);\r\n          }\r\n          await setFinalIdempotent(env, job.idemKey, { success: true, data: { results } });\r\n          await msg.ack();\r\n          continue;\r\n        }\r\n\r\n        // New per-channel routing\r\n        const results: Record<string, unknown> = {};\r\n        const fallbacks: Array<{ channel: Channel; reason: string }> = [];\r\n\r\n        for (const ch of job.channels as Channel[]) {\r\n          try {\r\n            // Check if we should defer due to rate limits\r\n            const defer = await shouldDefer(ch, cfg, env);\r\n            if (defer) {\r\n              fallbacks.push({\r\n                channel: ch,\r\n                reason: `${ch}_quota_exhausted`,\r\n              });\r\n              results[ch] = {\r\n                status: \"deferred\",\r\n                fallback: \"share\",\r\n                suggested: [\"share_native\", \"upload_stream\"],\r\n              };\r\n              continue;\r\n            }\r\n\r\n            // Prepare publish params\r\n            const params = {\r\n              tenant: cfg,\r\n              job: {\r\n                template: job.template,\r\n                data: job.data,\r\n                text: job.data.text || job.data.msg || job.data.title,\r\n                mediaUrl: job.data.mediaUrl || job.data.videoUrl,\r\n              },\r\n              env,\r\n            };\r\n\r\n            // Route to appropriate adapter\r\n            switch (ch) {\r\n              case \"yt\":\r\n                await publishYouTube(env, cfg, job.template, job.data);\r\n                break;\r\n              case \"fb\":\r\n                await publishFacebook(params);\r\n                break;\r\n              case \"ig\":\r\n                await publishInstagram(params);\r\n                break;\r\n              case \"tiktok\":\r\n                await publishTikTok(params);\r\n                break;\r\n              case \"x\":\r\n                await publishX(params);\r\n                break;\r\n              default:\r\n                throw new Error(`Unknown channel: ${ch}`);\r\n            }\r\n\r\n            // Increment counter after successful publish\r\n            await incrementCounter(ch, cfg, env);\r\n            results[ch] = { status: \"published\" };\r\n\r\n          } catch (err: any) {\r\n            // Check if error indicates fallback needed\r\n            if (err?.message?.includes(\"not configured\") || err?.message?.includes(\"not yet implemented\")) {\r\n              fallbacks.push({\r\n                channel: ch,\r\n                reason: err.message,\r\n              });\r\n              results[ch] = {\r\n                status: \"fallback_required\",\r\n                error: err.message,\r\n                fallback: \"share\",\r\n                suggested: [\"share_native\", \"upload_stream\"],\r\n              };\r\n            } else {\r\n              // Real error - rethrow to DLQ\r\n              throw err;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Store results\r\n        await setFinalIdempotent(env, job.idemKey, {\r\n          success: fallbacks.length === 0,\r\n          data: { results, fallbacks: fallbacks.length > 0 ? fallbacks : undefined },\r\n        });\r\n\r\n        await msg.ack();\r\n      } catch (err: any) {\r\n        // Send to dead-letter queue (no retries yet)\r\n        if (env.DLQ) {\r\n          await env.DLQ.send({\r\n            tenant: job.tenant,\r\n            error: err?.message || \"unknown\",\r\n            job,\r\n            timestamp: Date.now()\r\n          }).catch(() => {});\r\n\r\n          // Optional: send alert webhook (non-blocking)\r\n          if (env.DLQ_ALERT_URL) {\r\n            try {\r\n              await fetch(env.DLQ_ALERT_URL, {\r\n                method: \"POST\",\r\n                headers: { \"content-type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                  tenant: job.tenant,\r\n                  reason: err?.message || \"unknown\",\r\n                  ts: Date.now()\r\n                })\r\n              });\r\n            } catch {\r\n              // Ignore alert failures - never block the worker\r\n            }\r\n          }\r\n        }\r\n        await setFinalIdempotent(env, job.idemKey, {\r\n          success: false,\r\n          error: { code: \"DLQ\", message: String(err?.message || err) },\r\n        });\r\n        await msg.ack();\r\n      }\r\n    }\r\n  }\r\n};\r\n", "export async function publishViaMake(env: any, tenant: any, template: string, data: Record<string, unknown>) {\r\n  const url = tenant.makeWebhookUrl || env.MAKE_WEBHOOK_BASE;\r\n  if (!url) throw new Error(\"Make webhook not configured\");\r\n\r\n  const res = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify({ template, data, tenant: tenant.id })\r\n  });\r\n\r\n  if (!res.ok) throw new Error(`Make failed ${res.status}`);\r\n  try { return await res.json(); } catch { return { ok: true }; }\r\n}\r\n", "type YTCreds = { client_id: string; client_secret: string; refresh_token: string; channel_id?: string|null };\r\n\r\nexport async function publishYouTube(env: any, tenant: any, template: string, data: Record<string,unknown>) {\r\n  const creds = await getTenantYouTubeCreds(env, tenant.id);\r\n  if (!creds) throw new Error(\"YouTube not configured for tenant\");\r\n\r\n  const accessToken = await getGoogleAccessToken(creds);\r\n  const privacy = (String((data.privacy||\"unlisted\")) as \"public\"|\"unlisted\"|\"private\");\r\n  const startTime = String(data.start_iso || new Date(Date.now()+10*60e3).toISOString());\r\n  const title = String(data.title || \"Match Live\");\r\n  const description = String(data.description || \"Live stream\");\r\n\r\n  const broadcast = await createLiveBroadcast(accessToken, { title, description, scheduledStartTime: startTime, privacyStatus: privacy });\r\n  const stream = await createLiveStream(accessToken, { title: `${title} Stream` });\r\n  await bindBroadcast(accessToken, broadcast.id, stream.id);\r\n\r\n  return { ok: true, watch_url: `https://www.youtube.com/watch?v=${broadcast.id}`, broadcast_id: broadcast.id, stream_id: stream.id, start_iso: startTime };\r\n}\r\n\r\nasync function getTenantYouTubeCreds(env:any, tenantId:string): Promise<YTCreds|null> {\r\n  const raw = await env.KV_IDEMP.get(`yt:${tenantId}`);\r\n  return raw ? JSON.parse(raw) as YTCreds : null;\r\n}\r\n\r\nasync function getGoogleAccessToken(creds:YTCreds): Promise<string> {\r\n  const params = new URLSearchParams({\r\n    client_id: creds.client_id,\r\n    client_secret: creds.client_secret,\r\n    refresh_token: creds.refresh_token,\r\n    grant_type: \"refresh_token\"\r\n  });\r\n  const res = await fetch(\"https://oauth2.googleapis.com/token\", {\r\n    method:\"POST\", headers:{ \"content-type\":\"application/x-www-form-urlencoded\" }, body: params.toString()\r\n  });\r\n  if (!res.ok) throw new Error(`OAuth token refresh failed ${res.status}`);\r\n  const json:any = await res.json(); if (!json.access_token) throw new Error(\"No access_token\");\r\n  return json.access_token;\r\n}\r\n\r\nasync function createLiveBroadcast(accessToken:string, o:{ title:string; description:string; scheduledStartTime:string; privacyStatus:\"public\"|\"unlisted\"|\"private\" }) {\r\n  const body = { snippet: { title: o.title, description: o.description, scheduledStartTime: o.scheduledStartTime }, status: { privacyStatus: o.privacyStatus }, contentDetails: { enableAutoStart: true, enableAutoStop: true } };\r\n  const res = await fetch(\"https://www.googleapis.com/youtube/v3/liveBroadcasts?part=snippet,contentDetails,status\", {\r\n    method: \"POST\", headers: { \"authorization\": `Bearer ${accessToken}`, \"content-type\": \"application/json\" }, body: JSON.stringify(body)\r\n  });\r\n  if (!res.ok) throw new Error(`createLiveBroadcast failed ${res.status}`);\r\n  return await res.json() as { id:string };\r\n}\r\n\r\nasync function createLiveStream(accessToken:string, o:{ title:string }) {\r\n  const body = { snippet: { title: o.title }, cdn: { format: \"1080p\", ingestionType: \"rtmp\" } };\r\n  const res = await fetch(\"https://www.googleapis.com/youtube/v3/liveStreams?part=snippet,cdn,status\", {\r\n    method: \"POST\", headers: { \"authorization\": `Bearer ${accessToken}`, \"content-type\": \"application/json\" }, body: JSON.stringify(body)\r\n  });\r\n  if (!res.ok) throw new Error(`createLiveStream failed ${res.status}`);\r\n  return await res.json() as { id:string };\r\n}\r\n\r\nasync function bindBroadcast(accessToken:string, broadcastId:string, streamId:string) {\r\n  const url = new URL(\"https://www.googleapis.com/youtube/v3/liveBroadcasts/bind\");\r\n  url.searchParams.set(\"id\", broadcastId);\r\n  url.searchParams.set(\"part\", \"id,contentDetails\");\r\n  url.searchParams.set(\"streamId\", streamId);\r\n  const res = await fetch(url.toString(), { method:\"POST\", headers: { \"authorization\": `Bearer ${accessToken}` } });\r\n  if (!res.ok) throw new Error(`bindBroadcast failed ${res.status}`);\r\n  return await res.json();\r\n}\r\n", "import { TenantConfig } from \"../types\";\r\n\r\nexport interface PublishParams {\r\n  tenant: TenantConfig;\r\n  job: { template: string; data: any; mediaUrl?: string; text?: string; };\r\n  env: any;\r\n  fetchImpl?: typeof fetch;\r\n}\r\n\r\nexport async function publishFacebook(p: PublishParams): Promise<void> {\r\n  const { tenant, job, env, fetchImpl = fetch } = p;\r\n\r\n  // 1) Check if BYO-Make webhook is configured for FB\r\n  const makeWebhook = tenant.creds?.make?.fb;\r\n  if (makeWebhook) {\r\n    // Forward to Make.com webhook\r\n    const payload = {\r\n      kind: \"facebook_post\",\r\n      tenant: tenant.id,\r\n      template: job.template,\r\n      data: job.data,\r\n      ts: Date.now(),\r\n    };\r\n\r\n    const r = await fetchImpl(makeWebhook, {\r\n      method: \"POST\",\r\n      headers: { \"content-type\": \"application/json\" },\r\n      body: JSON.stringify(payload),\r\n    });\r\n\r\n    if (!r.ok) {\r\n      throw new Error(`BYO-Make webhook failed for FB: ${r.status}`);\r\n    }\r\n\r\n    return; // Successfully forwarded to Make\r\n  }\r\n\r\n  // 2) Check if Managed mode is enabled\r\n  const isManaged = tenant.flags?.managed?.fb ?? false;\r\n  if (isManaged) {\r\n    // Check if we have credentials\r\n    const fbCreds = tenant.creds?.fb;\r\n    if (!fbCreds?.page_access_token || !fbCreds?.page_id) {\r\n      throw new Error(\"Managed FB enabled but credentials not configured. Please connect Facebook or use BYO-Make.\");\r\n    }\r\n\r\n    // TODO: Implement real Facebook Graph API publishing\r\n    // For now, throw \"Not implemented\"\r\n    throw new Error(\"Facebook Managed publishing not yet implemented. Use BYO-Make or wait for update.\");\r\n  }\r\n\r\n  // 3) Neither BYO-Make nor Managed configured\r\n  throw new Error(\"Facebook channel not configured. Enable Managed mode or set BYO-Make webhook.\");\r\n}\r\n", "import { TenantConfig } from \"../types\";\r\n\r\nexport interface PublishParams {\r\n  tenant: TenantConfig;\r\n  job: { template: string; data: any; mediaUrl?: string; text?: string; };\r\n  env: any;\r\n  fetchImpl?: typeof fetch;\r\n}\r\n\r\nexport async function publishInstagram(p: PublishParams): Promise<void> {\r\n  const { tenant, job, env, fetchImpl = fetch } = p;\r\n\r\n  // 1) Check if BYO-Make webhook is configured for IG\r\n  const makeWebhook = tenant.creds?.make?.ig;\r\n  if (makeWebhook) {\r\n    // Forward to Make.com webhook\r\n    const payload = {\r\n      kind: \"instagram_post\",\r\n      tenant: tenant.id,\r\n      template: job.template,\r\n      data: job.data,\r\n      ts: Date.now(),\r\n    };\r\n\r\n    const r = await fetchImpl(makeWebhook, {\r\n      method: \"POST\",\r\n      headers: { \"content-type\": \"application/json\" },\r\n      body: JSON.stringify(payload),\r\n    });\r\n\r\n    if (!r.ok) {\r\n      throw new Error(`BYO-Make webhook failed for IG: ${r.status}`);\r\n    }\r\n\r\n    return; // Successfully forwarded to Make\r\n  }\r\n\r\n  // 2) Check if Managed mode is enabled\r\n  const isManaged = tenant.flags?.managed?.ig ?? false;\r\n  if (isManaged) {\r\n    // Check if we have credentials\r\n    const igCreds = tenant.creds?.ig;\r\n    if (!igCreds?.ig_user_id || !igCreds?.access_token) {\r\n      throw new Error(\"Managed IG enabled but credentials not configured. Please connect Instagram or use BYO-Make.\");\r\n    }\r\n\r\n    // TODO: Implement real Instagram Graph API publishing\r\n    // For now, throw \"Not implemented\"\r\n    throw new Error(\"Instagram Managed publishing not yet implemented. Use BYO-Make or wait for update.\");\r\n  }\r\n\r\n  // 3) Neither BYO-Make nor Managed configured\r\n  throw new Error(\"Instagram channel not configured. Enable Managed mode or set BYO-Make webhook.\");\r\n}\r\n", "import { TenantConfig } from \"../types\";\r\n\r\nexport interface PublishParams {\r\n  tenant: TenantConfig;\r\n  job: { template: string; data: any; mediaUrl?: string; text?: string; };\r\n  env: any;\r\n  fetchImpl?: typeof fetch;\r\n}\r\n\r\nexport async function publishTikTok(p: PublishParams): Promise<void> {\r\n  const { tenant, job, env, fetchImpl = fetch } = p;\r\n\r\n  // 1) Check if BYO-Make webhook is configured for TikTok\r\n  const makeWebhook = tenant.creds?.make?.tiktok;\r\n  if (makeWebhook) {\r\n    // Forward to Make.com webhook\r\n    const payload = {\r\n      kind: \"tiktok_post\",\r\n      tenant: tenant.id,\r\n      template: job.template,\r\n      data: job.data,\r\n      ts: Date.now(),\r\n    };\r\n\r\n    const r = await fetchImpl(makeWebhook, {\r\n      method: \"POST\",\r\n      headers: { \"content-type\": \"application/json\" },\r\n      body: JSON.stringify(payload),\r\n    });\r\n\r\n    if (!r.ok) {\r\n      throw new Error(`BYO-Make webhook failed for TikTok: ${r.status}`);\r\n    }\r\n\r\n    return; // Successfully forwarded to Make\r\n  }\r\n\r\n  // 2) Check if Managed mode is enabled\r\n  const isManaged = tenant.flags?.managed?.tiktok ?? false;\r\n  if (isManaged) {\r\n    // Check if we have credentials\r\n    const tiktokCreds = tenant.creds?.tiktok;\r\n    if (!tiktokCreds?.refresh_token || !tiktokCreds?.open_id) {\r\n      throw new Error(\"Managed TikTok enabled but credentials not configured. Please connect TikTok or use BYO-Make.\");\r\n    }\r\n\r\n    // TODO: Implement real TikTok API publishing\r\n    // For now, throw \"Not implemented\"\r\n    throw new Error(\"TikTok Managed publishing not yet implemented. Use BYO-Make or wait for update.\");\r\n  }\r\n\r\n  // 3) Neither BYO-Make nor Managed configured\r\n  throw new Error(\"TikTok channel not configured. Enable Managed mode or set BYO-Make webhook.\");\r\n}\r\n", "import { TenantConfig } from \"../types\";\r\n\r\nexport interface PublishParams {\r\n  tenant: TenantConfig;\r\n  job: { template: string; data: any; mediaUrl?: string; text?: string; };\r\n  env: any;\r\n  fetchImpl?: typeof fetch;\r\n}\r\n\r\nexport async function publishX(p: PublishParams): Promise<void> {\r\n  const { tenant, job, env, fetchImpl = fetch } = p;\r\n\r\n  // 1) Check if BYO-Make webhook is configured for X\r\n  const makeWebhook = tenant.creds?.make?.x;\r\n  if (makeWebhook) {\r\n    // Forward to Make.com webhook\r\n    const payload = {\r\n      kind: \"x_post\",\r\n      tenant: tenant.id,\r\n      template: job.template,\r\n      data: job.data,\r\n      ts: Date.now(),\r\n    };\r\n\r\n    const r = await fetchImpl(makeWebhook, {\r\n      method: \"POST\",\r\n      headers: { \"content-type\": \"application/json\" },\r\n      body: JSON.stringify(payload),\r\n    });\r\n\r\n    if (!r.ok) {\r\n      throw new Error(`BYO-Make webhook failed for X: ${r.status}`);\r\n    }\r\n\r\n    return; // Successfully forwarded to Make\r\n  }\r\n\r\n  // 2) Check if Managed mode is enabled\r\n  const isManaged = tenant.flags?.managed?.x ?? false;\r\n  if (isManaged) {\r\n    // Check if we have credentials\r\n    const xCreds = tenant.creds?.x;\r\n    if (!xCreds?.access_token || !xCreds?.access_secret) {\r\n      throw new Error(\"Managed X enabled but credentials not configured. Please connect X (Twitter) or use BYO-Make.\");\r\n    }\r\n\r\n    // TODO: Implement real X (Twitter) API publishing\r\n    // For now, throw \"Not implemented\"\r\n    throw new Error(\"X (Twitter) Managed publishing not yet implemented. Use BYO-Make or wait for update.\");\r\n  }\r\n\r\n  // 3) Neither BYO-Make nor Managed configured\r\n  throw new Error(\"X (Twitter) channel not configured. Enable Managed mode or set BYO-Make webhook.\");\r\n}\r\n", "import { Channel, TenantConfig } from \"../types\";\r\n\r\n/**\r\n * Simple rate-aware router to check if we should defer publishing\r\n * For now, implements basic counters per channel per tenant per day\r\n * Future: integrate with actual platform quota APIs\r\n */\r\n\r\nconst getCounterKey = (tenant: string, channel: Channel): string => {\r\n  const today = new Date().toISOString().split('T')[0]; // YYYY-MM-DD\r\n  return `rate:${tenant}:${channel}:${today}`;\r\n};\r\n\r\n// Default daily limits per channel (conservative estimates)\r\nconst DEFAULT_LIMITS: Record<Channel, number> = {\r\n  yt: 50,       // YouTube: ~50 uploads/day for most channels\r\n  fb: 200,      // Facebook: higher limits\r\n  ig: 100,      // Instagram: varies by account\r\n  tiktok: 50,   // TikTok: moderate limits\r\n  x: 300,       // X (Twitter): high limits for posts\r\n};\r\n\r\nexport async function shouldDefer(\r\n  channel: Channel,\r\n  tenant: TenantConfig,\r\n  env: any\r\n): Promise<boolean> {\r\n  // For YouTube, check daily quota\r\n  if (channel === \"yt\") {\r\n    const key = getCounterKey(tenant.id, channel);\r\n    const countStr = await env.KV_IDEMP.get(key);\r\n    const count = countStr ? parseInt(countStr, 10) : 0;\r\n\r\n    // Check against limit\r\n    const limit = DEFAULT_LIMITS[channel];\r\n    if (count >= limit) {\r\n      return true; // Should defer - quota exhausted\r\n    }\r\n  }\r\n\r\n  // For other channels, no deferral for now (always proceed)\r\n  return false;\r\n}\r\n\r\nexport async function incrementCounter(\r\n  channel: Channel,\r\n  tenant: TenantConfig,\r\n  env: any\r\n): Promise<void> {\r\n  const key = getCounterKey(tenant.id, channel);\r\n  const countStr = await env.KV_IDEMP.get(key);\r\n  const count = countStr ? parseInt(countStr, 10) : 0;\r\n\r\n  // Increment and store with 25-hour TTL (ensures it expires next day)\r\n  await env.KV_IDEMP.put(key, String(count + 1), { expirationTtl: 90000 });\r\n}\r\n", "// backend/src/services/events.ts\r\nimport type { Env } from \"../types\";\r\n\r\nexport type EventType = \"training\" | \"match\" | \"social\";\r\nexport interface EventRec {\r\n  id: string;\r\n  type: EventType;\r\n  title: string;\r\n  startUtc: string;\r\n  endUtc?: string;\r\n  location?: { name?: string; lat?: number; lng?: number };\r\n  notes?: string;\r\n  teamId?: string;\r\n  rrule?: string; // optional recurrence\r\n  createdAt: number;\r\n  updatedAt: number;\r\n}\r\n\r\nexport async function putEvent(env: Env, tenant: string, ev: EventRec) {\r\n  const key = `tenants:${tenant}:events:${ev.id}`;\r\n  await env.KV_IDEMP.put(key, JSON.stringify(ev));\r\n  const idxKey = `tenants:${tenant}:events:index`;\r\n  const existing = (await env.KV_IDEMP.get(idxKey, \"json\")) as any[] || [];\r\n  const row = { id: ev.id, title: ev.title, type: ev.type, startUtc: ev.startUtc, teamId: ev.teamId };\r\n  const next = [row, ...existing.filter(r => r.id !== ev.id)];\r\n  await env.KV_IDEMP.put(idxKey, JSON.stringify(next.slice(0, 5000)));\r\n}\r\n\r\nexport async function getEvent(env: Env, tenant: string, eventId: string): Promise<EventRec | null> {\r\n  const key = `tenants:${tenant}:events:${eventId}`;\r\n  return (await env.KV_IDEMP.get(key, \"json\")) as EventRec | null;\r\n}\r\n\r\nexport async function deleteEvent(env: Env, tenant: string, eventId: string) {\r\n  await env.KV_IDEMP.delete(`tenants:${tenant}:events:${eventId}`);\r\n  const idxKey = `tenants:${tenant}:events:index`;\r\n  const existing = (await env.KV_IDEMP.get(idxKey, \"json\")) as any[] || [];\r\n  await env.KV_IDEMP.put(idxKey, JSON.stringify(existing.filter(r => r.id !== eventId)));\r\n}\r\n\r\nexport async function listEvents(env: Env, tenant: string): Promise<any[]> {\r\n  const idxKey = `tenants:${tenant}:events:index`;\r\n  return (await env.KV_IDEMP.get(idxKey, \"json\")) as any[] || [];\r\n}\r\n\r\n// RSVPs\r\nexport async function setRsvp(env: Env, tenant: string, eventId: string, userId: string, rsvp: \"yes\"|\"no\"|\"maybe\") {\r\n  const key = `tenants:${tenant}:events:${eventId}:rsvp:${userId}`;\r\n  await env.KV_IDEMP.put(key, rsvp, { expirationTtl: 60 * 60 * 24 * 120 }); // 120 days TTL\r\n}\r\nexport async function getRsvp(env: Env, tenant: string, eventId: string, userId: string) {\r\n  const key = `tenants:${tenant}:events:${eventId}:rsvp:${userId}`;\r\n  return (await env.KV_IDEMP.get(key)) as (\"yes\"|\"no\"|\"maybe\"|null);\r\n}\r\n\r\n// Check-ins (simple append-only set compressed as JSON)\r\nexport async function addCheckin(env: Env, tenant: string, eventId: string, userId: string) {\r\n  const key = `tenants:${tenant}:events:${eventId}:checkins`;\r\n  const list = (await env.KV_IDEMP.get(key, \"json\")) as {userId:string;ts:number}[] || [];\r\n  list.push({ userId, ts: Date.now() });\r\n  await env.KV_IDEMP.put(key, JSON.stringify(list), { expirationTtl: 60 * 60 * 24 * 180 });\r\n}\r\nexport async function listCheckins(env: Env, tenant: string, eventId: string) {\r\n  const key = `tenants:${tenant}:events:${eventId}:checkins`;\r\n  return (await env.KV_IDEMP.get(key, \"json\")) as {userId:string;ts:number}[] || [];\r\n}\r\n", "// backend/src/services/push.ts\r\nimport type { Env } from \"../types\";\r\n\r\nexport async function sendFcm(env: Env, tokens: string[], payload: any) {\r\n  if (!env.FCM_SERVER_KEY) throw new Error(\"FCM_SERVER_KEY missing\");\r\n  const body = {\r\n    registration_ids: tokens,\r\n    notification: payload.notification ?? undefined,\r\n    data: payload.data ?? undefined,\r\n  };\r\n  const r = await fetch(\"https://fcm.googleapis.com/fcm/send\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      \"authorization\": `key=${env.FCM_SERVER_KEY}`,\r\n    },\r\n    body: JSON.stringify(body),\r\n  });\r\n  if (!r.ok) {\r\n    const t = await r.text();\r\n    throw new Error(`FCM error ${r.status}: ${t}`);\r\n  }\r\n  return r.json();\r\n}\r\n\r\n// Device token registry helpers\r\nexport async function registerDevice(env: Env, tenant: string, userId: string, platform: string, token: string) {\r\n  const key = `tenants:${tenant}:devices:${userId}`;\r\n  const existing = (await env.KV_IDEMP.get(key, \"json\")) as { platform: string; token: string }[] || [];\r\n\r\n  // Upsert: replace if same platform, otherwise add\r\n  const filtered = existing.filter(d => d.platform !== platform);\r\n  filtered.push({ platform, token });\r\n\r\n  await env.KV_IDEMP.put(key, JSON.stringify(filtered));\r\n}\r\n\r\nexport async function getUserTokens(env: Env, tenant: string, userId: string): Promise<string[]> {\r\n  const key = `tenants:${tenant}:devices:${userId}`;\r\n  const devices = (await env.KV_IDEMP.get(key, \"json\")) as { platform: string; token: string }[] || [];\r\n  return devices.map(d => d.token);\r\n}\r\n\r\nexport async function sendToUser(env: Env, tenant: string, userId: string, payload: any) {\r\n  const tokens = await getUserTokens(env, tenant, userId);\r\n  if (tokens.length === 0) return { sent: 0 };\r\n  return await sendFcm(env, tokens, payload);\r\n}\r\n\r\nexport async function sendToMany(env: Env, tenant: string, userIds: string[], payload: any) {\r\n  const allTokens: string[] = [];\r\n  for (const userId of userIds) {\r\n    const tokens = await getUserTokens(env, tenant, userId);\r\n    allTokens.push(...tokens);\r\n  }\r\n  if (allTokens.length === 0) return { sent: 0 };\r\n  return await sendFcm(env, allTokens, payload);\r\n}\r\n", "// backend/src/services/invites.ts\r\nimport { nanoid, kvGetJSON, kvPutJSON, nowMs, expMs, assert, badReq } from \"./util\";\r\nimport type { Env } from \"../types\";\r\n\r\nexport type InviteRole =\r\n  | \"club_admin\"\r\n  | `team_manager:${string}`\r\n  | `coach:${string}`\r\n  | \"parent\"\r\n  | \"player\"\r\n  | \"volunteer\";\r\n\r\nexport interface Invite {\r\n  token: string;\r\n  tenantId: string;\r\n  teamId?: string;\r\n  role: InviteRole;\r\n  maxUses: number;\r\n  used: number;\r\n  exp: number;\r\n  createdBy: string;\r\n  createdAt: number;\r\n}\r\n\r\nconst INVITES = (token: string) => `invites/${token}`;\r\n\r\nexport async function createInvite(\r\n  env: Env,\r\n  args: {\r\n    tenant: string;\r\n    teamId?: string;\r\n    role: InviteRole | \"team_manager\" | \"coach\"; // allow simple values then normalize\r\n    maxUses?: number;\r\n    ttl_minutes?: number;\r\n    createdBy: string;\r\n  }\r\n) {\r\n  assert(args.tenant, \"tenant required\");\r\n  assert(args.role, \"role required\");\r\n\r\n  let normalizedRole: InviteRole = args.role as InviteRole;\r\n  if (args.role === \"team_manager\") {\r\n    assert(args.teamId, \"teamId required for team_manager role\");\r\n    normalizedRole = `team_manager:${args.teamId}` as InviteRole;\r\n  }\r\n  if (args.role === \"coach\") {\r\n    assert(args.teamId, \"teamId required for coach role\");\r\n    normalizedRole = `coach:${args.teamId}` as InviteRole;\r\n  }\r\n\r\n  const token = nanoid(24);\r\n  const invite: Invite = {\r\n    token,\r\n    tenantId: args.tenant,\r\n    teamId: args.teamId,\r\n    role: normalizedRole,\r\n    maxUses: Math.max(1, args.maxUses ?? 50),\r\n    used: 0,\r\n    exp: expMs(args.ttl_minutes ?? 60 * 24 * 7), // default 7 days\r\n    createdBy: args.createdBy,\r\n    createdAt: nowMs(),\r\n  };\r\n\r\n  await env.KV_IDEMP.put(INVITES(token), JSON.stringify(invite), {\r\n    expirationTtl: Math.ceil((invite.exp - nowMs()) / 1000),\r\n  });\r\n\r\n  const inviteUrl = `${env.SETUP_URL.replace(/\\/$/, \"\")}/join?token=${encodeURIComponent(token)}`;\r\n  return { ok: true as const, token, inviteUrl, invite };\r\n}\r\n\r\nexport async function getInvite(env: Env, token: string) {\r\n  const invite = await kvGetJSON<Invite>(env.KV_IDEMP, INVITES(token));\r\n  if (!invite) throw badReq(\"invite not found\");\r\n  return invite;\r\n}\r\n\r\n// IMPORTANT: this function must be atomic enough for maxUses\r\n// In KV we do: read \u2192 check \u2192 update. Good enough for low contention.\r\n// If you later move to D1, enforce transactionally.\r\nexport async function consumeInvite(env: Env, token: string) {\r\n  const key = INVITES(token);\r\n  const invite = await kvGetJSON<Invite>(env.KV_IDEMP, key);\r\n  if (!invite) throw badReq(\"invalid token\");\r\n  if (invite.exp < nowMs()) throw badReq(\"token expired\");\r\n  if (invite.used >= invite.maxUses) throw badReq(\"token fully used\");\r\n\r\n  invite.used += 1;\r\n  await kvPutJSON(env.KV_IDEMP, key, invite);\r\n  return invite;\r\n}\r\n", "// backend/src/services/teams.ts\r\nimport { kvGetJSON, kvPutJSON, kvListJSON, assert } from \"./util\";\r\nimport type { Env } from \"../types\";\r\n\r\nexport interface Team {\r\n  tenantId: string;\r\n  teamId: string;\r\n  name: string;\r\n  ageGroup?: string;\r\n  coaches: string[]; // userIds\r\n  createdAt: number;\r\n}\r\n\r\nconst TEAM_KEY = (tenant: string, teamId: string) => `teams/${tenant}/${teamId}`;\r\nconst TEAM_PREFIX = (tenant: string) => `teams/${tenant}/`;\r\n\r\nexport async function createTeam(\r\n  env: Env,\r\n  args: {\r\n    tenant: string;\r\n    teamId: string;\r\n    name: string;\r\n    ageGroup?: string;\r\n  }\r\n) {\r\n  assert(args.tenant && args.teamId && args.name, \"tenant, teamId, name required\");\r\n\r\n  const key = TEAM_KEY(args.tenant, args.teamId);\r\n  const existing = await kvGetJSON<Team>(env.KV_IDEMP, key);\r\n  if (existing) return existing;\r\n\r\n  const team: Team = {\r\n    tenantId: args.tenant,\r\n    teamId: args.teamId,\r\n    name: args.name,\r\n    ageGroup: args.ageGroup,\r\n    coaches: [],\r\n    createdAt: Date.now(),\r\n  };\r\n  await kvPutJSON(env.KV_IDEMP, key, team);\r\n  return team;\r\n}\r\n\r\nexport async function getTeam(env: Env, tenant: string, teamId: string) {\r\n  return await kvGetJSON<Team>(env.KV_IDEMP, TEAM_KEY(tenant, teamId));\r\n}\r\n\r\nexport async function listTeams(env: Env, tenant: string) {\r\n  const items = await kvListJSON<Team>(env.KV_IDEMP, TEAM_PREFIX(tenant));\r\n  return items;\r\n}\r\n", "// backend/src/services/chatKV.ts\r\nimport { kvGetJSON, kvPutJSON, kvListJSON, assert, id } from \"./util\";\r\nimport type { Env } from \"../types\";\r\n\r\nexport type RoomType = \"parents\" | \"coaches\";\r\n\r\nexport interface Room {\r\n  roomId: string;\r\n  tenantId: string;\r\n  teamId: string;\r\n  type: RoomType;\r\n  createdAt: number;\r\n}\r\n\r\nexport interface Message {\r\n  msgId: string;\r\n  userId: string;\r\n  text: string;\r\n  ts: number;\r\n}\r\n\r\nconst ROOM_KEY = (tenant: string, roomId: string) => `chat/room/${tenant}/${roomId}`;\r\nconst ROOM_PREFIX = (tenant: string) => `chat/room/${tenant}/`;\r\nconst MSG_PREFIX = (tenant: string, roomId: string) => `chat/msg/${tenant}/${roomId}/`;\r\n\r\nexport async function createRoom(\r\n  env: Env,\r\n  args: {\r\n    tenant: string;\r\n    roomId: string;\r\n    teamId: string;\r\n    type: RoomType;\r\n  }\r\n) {\r\n  assert(args.tenant && args.roomId && args.teamId && args.type, \"missing params\");\r\n  const key = ROOM_KEY(args.tenant, args.roomId);\r\n  const exists = await kvGetJSON<Room>(env.KV_IDEMP, key);\r\n  if (exists) return exists;\r\n  const room: Room = {\r\n    roomId: args.roomId,\r\n    tenantId: args.tenant,\r\n    teamId: args.teamId,\r\n    type: args.type,\r\n    createdAt: Date.now(),\r\n  };\r\n  await kvPutJSON(env.KV_IDEMP, key, room);\r\n  return room;\r\n}\r\n\r\nexport async function listRooms(env: Env, tenant: string, teamId?: string) {\r\n  const rooms = await kvListJSON<Room>(env.KV_IDEMP, ROOM_PREFIX(tenant));\r\n  return teamId ? rooms.filter((r) => r.teamId === teamId) : rooms;\r\n}\r\n\r\n// NOTE: authorize in the route layer (parent can write to parents room for their team, etc.)\r\nexport async function addMessage(\r\n  env: Env,\r\n  args: {\r\n    tenant: string;\r\n    roomId: string;\r\n    userId: string;\r\n    text: string;\r\n  }\r\n) {\r\n  assert(args.text && args.text.trim(), \"empty text\");\r\n  const msg: Message = { msgId: id(), userId: args.userId, text: args.text.trim(), ts: Date.now() };\r\n  const key = `${MSG_PREFIX(args.tenant, args.roomId)}${msg.msgId}`;\r\n  await env.KV_IDEMP.put(key, JSON.stringify(msg));\r\n  return msg;\r\n}\r\n\r\nexport async function listMessages(\r\n  env: Env,\r\n  args: {\r\n    tenant: string;\r\n    roomId: string;\r\n    limit?: number;\r\n  }\r\n) {\r\n  const prefix = MSG_PREFIX(args.tenant, args.roomId);\r\n  const entries = await env.KV_IDEMP.list({ prefix, limit: Math.min(200, args.limit ?? 50) });\r\n  // KV returns newest-last if we stored as individual keys; here we just return ascending by ts\r\n  const msgs = await Promise.all(entries.keys.map((k) => env.KV_IDEMP.get(k.name, \"json\") as Promise<Message>));\r\n  return msgs.filter(Boolean).sort((a, b) => a.ts - b.ts);\r\n}\r\n", "// backend/src/services/galleryKV.ts\r\nimport type { Env } from \"../types\";\r\nimport { kvGetJSON, kvPutJSON, kvListJSON, assert, id, badReq } from \"./util\";\r\n\r\nexport interface Album {\r\n  albumId: string;\r\n  tenantId: string;\r\n  teamId?: string;\r\n  eventId?: string;\r\n  title: string;\r\n  createdBy: string;\r\n  createdAt: number;\r\n}\r\n\r\nexport interface MediaObj {\r\n  id: string;\r\n  r2Key: string;\r\n  uploaderId: string;\r\n  playerTags: string[];\r\n  consentCheck: boolean;\r\n  ts: number;\r\n}\r\n\r\nconst ALBUM_KEY = (tenant: string, albumId: string) => `gallery/album/${tenant}/${albumId}`;\r\nconst ALBUM_PREFIX = (tenant: string) => `gallery/album/${tenant}/`;\r\nconst OBJ_KEY = (tenant: string, albumId: string, id: string) => `gallery/object/${tenant}/${albumId}/${id}`;\r\nconst OBJ_PREFIX = (tenant: string, albumId: string) => `gallery/object/${tenant}/${albumId}/`;\r\n\r\nexport async function createAlbum(\r\n  env: Env,\r\n  args: {\r\n    tenant: string;\r\n    title: string;\r\n    teamId?: string;\r\n    eventId?: string;\r\n    createdBy: string;\r\n  }\r\n) {\r\n  assert(args.tenant && args.title, \"tenant + title required\");\r\n  const album: Album = {\r\n    albumId: id(),\r\n    tenantId: args.tenant,\r\n    title: args.title,\r\n    teamId: args.teamId,\r\n    eventId: args.eventId,\r\n    createdBy: args.createdBy,\r\n    createdAt: Date.now(),\r\n  };\r\n  await kvPutJSON(env.KV_IDEMP, ALBUM_KEY(args.tenant, album.albumId), album);\r\n  return album;\r\n}\r\n\r\nexport async function listAlbums(env: Env, tenant: string, teamId?: string) {\r\n  const all = await kvListJSON<Album>(env.KV_IDEMP, ALBUM_PREFIX(tenant));\r\n  return teamId ? all.filter((a) => a.teamId === teamId) : all;\r\n}\r\n\r\n// STEP 1: client asks for a signed PUT URL -> uploads directly to R2\r\nexport async function getUploadUrl(\r\n  env: Env,\r\n  args: {\r\n    tenant: string;\r\n    albumId: string;\r\n    contentType: string;\r\n    uploaderId: string;\r\n  }\r\n) {\r\n  const allowed = (env.GALLERY_ALLOWED || \"image/jpeg,image/png,image/webp\").split(\",\");\r\n  if (!allowed.includes(args.contentType)) throw badReq(\"unsupported content-type\");\r\n\r\n  const key = `media/${args.tenant}/${args.albumId}/${Date.now()}-${id()}`;\r\n  // Workers R2 doesn't do signed URL natively; emulate with private PUT via backend\r\n  // Simple MVP: the client POSTS the binary to /api/v1/gallery/upload with a short one-time token\r\n  // Or (easier): do unsigned PUT via backend fetch. For now return a placeholder plan:\r\n  return { r2Key: key, uploadVia: \"POST /api/v1/gallery/albums/:albumId/upload (multipart/form-data)\" };\r\n}\r\n\r\n// STEP 2 (MVP): backend receives a small image file and writes to R2 (no presign)\r\n// NOTE: For production, add size checks and virus scanning if needed.\r\nexport async function uploadBinary(\r\n  env: Env,\r\n  args: {\r\n    tenant: string;\r\n    albumId: string;\r\n    file: ArrayBuffer;\r\n    contentType: string;\r\n  }\r\n) {\r\n  const key = `media/${args.tenant}/${args.albumId}/${Date.now()}-${id()}`;\r\n  await env.R2_MEDIA.put(key, args.file, { httpMetadata: { contentType: args.contentType } });\r\n  return { r2Key: key };\r\n}\r\n\r\n// STEP 3: Commit metadata entry\r\nexport async function commitMedia(\r\n  env: Env,\r\n  args: {\r\n    tenant: string;\r\n    albumId: string;\r\n    r2Key: string;\r\n    uploaderId: string;\r\n    playerTags?: string[];\r\n    consentCheck?: boolean;\r\n  }\r\n) {\r\n  const m: MediaObj = {\r\n    id: id(),\r\n    r2Key: args.r2Key,\r\n    uploaderId: args.uploaderId,\r\n    playerTags: args.playerTags ?? [],\r\n    consentCheck: !!args.consentCheck,\r\n    ts: Date.now(),\r\n  };\r\n  await kvPutJSON(env.KV_IDEMP, OBJ_KEY(args.tenant, args.albumId, m.id), m);\r\n  return m;\r\n}\r\n\r\nexport async function listMedia(\r\n  env: Env,\r\n  args: { tenant: string; albumId: string; respectConsent?: boolean }\r\n) {\r\n  const objs = await kvListJSON<MediaObj>(env.KV_IDEMP, OBJ_PREFIX(args.tenant, args.albumId));\r\n  // TODO: if respectConsent, filter out objects tagged with players where mediaConsent=false (look up players service)\r\n  return objs.sort((a, b) => a.ts - b.ts);\r\n}\r\n\r\n// Generate a temporary GET URL (signed by R2) \u2014 Workers R2 supports presigned URLs for GET\r\nexport async function getViewUrl(env: Env, r2Key: string, expiresSec = 300) {\r\n  // Not yet supported in R2 GA to presign in-worker; simplest is stream through Worker:\r\n  // GET /api/v1/gallery/file?key=... and backend does env.R2_MEDIA.get(key) and streams to client.\r\n  return { url: `/api/v1/gallery/file?key=${encodeURIComponent(r2Key)}` };\r\n}\r\n", "// src/services/provisioning.ts\r\n\r\nimport { issueTenantAdminJWT } from \"./jwt\";\r\nimport { putTenantConfig } from \"./tenants\";\r\nimport type { TenantConfig, Env } from \"../types\";\r\n\r\n/**\r\n * Automated tenant provisioning service\r\n * Handles end-to-end onboarding of new clubs\r\n */\r\n\r\nexport interface ProvisioningRequest {\r\n  clubName: string;\r\n  clubShortName: string; // Used as tenant ID\r\n  contactEmail: string;\r\n  contactName: string;\r\n  locale?: string;\r\n  timezone?: string;\r\n  plan?: \"free\" | \"managed\" | \"enterprise\";\r\n  makeWebhookUrl?: string;\r\n  promoCode?: string;  // Optional promo code\r\n}\r\n\r\nexport interface ProvisioningResult {\r\n  success: boolean;\r\n  tenant?: {\r\n    id: string;\r\n    name: string;\r\n    adminJWT: string;\r\n    automationJWT: string;\r\n    setupUrl: string;\r\n    adminConsoleUrl: string;\r\n  };\r\n  error?: {\r\n    code: string;\r\n    message: string;\r\n  };\r\n}\r\n\r\n/**\r\n * Provision a new tenant with full automation\r\n */\r\nexport async function provisionTenant(\r\n  env: Env,\r\n  request: ProvisioningRequest\r\n): Promise<ProvisioningResult> {\r\n  try {\r\n    // 1. Validate tenant ID (club short name)\r\n    const tenantId = sanitizeTenantId(request.clubShortName);\r\n\r\n    // Check if tenant already exists\r\n    const existing = await env.KV_IDEMP.get(`tenant:${tenantId}`);\r\n    if (existing) {\r\n      return {\r\n        success: false,\r\n        error: {\r\n          code: \"TENANT_EXISTS\",\r\n          message: `Tenant '${tenantId}' already exists`\r\n        }\r\n      };\r\n    }\r\n\r\n    // 2. Apply promo code if provided\r\n    let finalPlan = request.plan || \"free\";\r\n    let promoCodeApplied = null;\r\n\r\n    if (request.promoCode) {\r\n      const { PromoCodeService } = await import(\"./promoCodes\");\r\n      const promoService = new PromoCodeService(env);\r\n\r\n      const promoResult = await promoService.applyPromoCode(request.promoCode, tenantId);\r\n\r\n      if (promoResult.success && promoResult.discount) {\r\n        promoCodeApplied = {\r\n          code: request.promoCode,\r\n          discount: promoResult.discount\r\n        };\r\n\r\n        // Apply plan upgrade if promo code specifies it\r\n        if (promoResult.discount.type === 'plan_upgrade') {\r\n          finalPlan = promoResult.discount.plan as \"free\" | \"managed\" | \"enterprise\";\r\n        }\r\n\r\n        console.log(`[Provisioning] Promo code applied: ${request.promoCode} for ${tenantId}`);\r\n      } else {\r\n        console.warn(`[Provisioning] Invalid promo code: ${request.promoCode}`, promoResult.error);\r\n        // Don't fail provisioning, just log warning and continue\r\n      }\r\n    }\r\n\r\n    // 3. Determine flags based on final plan\r\n    const flags = determineFlagsForPlan(finalPlan);\r\n\r\n    // 4. Create tenant config\r\n    const tenantConfig: TenantConfig = {\r\n      id: tenantId,\r\n      name: request.clubName,\r\n      locale: request.locale || \"en-GB\",\r\n      tz: request.timezone || \"Europe/London\",\r\n      flags,\r\n      makeWebhookUrl: request.makeWebhookUrl || null,\r\n      metadata: {\r\n        contactEmail: request.contactEmail,\r\n        contactName: request.contactName,\r\n        plan: finalPlan,\r\n        createdAt: new Date().toISOString(),\r\n        provisionedBy: \"automated\",\r\n        ...(promoCodeApplied && {\r\n          promoCode: promoCodeApplied.code,\r\n          promoDiscount: promoCodeApplied.discount\r\n        })\r\n      }\r\n    };\r\n\r\n    await putTenantConfig(env, tenantConfig);\r\n\r\n    // 4. Generate JWT tokens\r\n    const adminJWT = await issueTenantAdminJWT(env, {\r\n      tenant_id: tenantId,\r\n      ttlMinutes: 525600 // 1 year\r\n    });\r\n\r\n    const automationJWT = await issueTenantAdminJWT(env, {\r\n      tenant_id: tenantId,\r\n      ttlMinutes: 525600 // 1 year\r\n    });\r\n\r\n    // 5. Generate setup URLs\r\n    const baseUrl = env.SETUP_URL || \"https://setup-console.team-platform-2025.workers.dev\";\r\n    const setupToken = await generateSetupToken(env, tenantId);\r\n    const setupUrl = `${baseUrl}?token=${setupToken}`;\r\n\r\n    const adminConsoleUrl = env.ADMIN_CONSOLE_URL || \"https://admin-console.team-platform-2025.workers.dev\";\r\n\r\n    // 6. Send welcome email (optional - implement later)\r\n    if (env.SENDGRID_API_KEY || env.RESEND_API_KEY) {\r\n      await sendWelcomeEmail(env, {\r\n        to: request.contactEmail,\r\n        clubName: request.clubName,\r\n        setupUrl,\r\n        adminJWT\r\n      });\r\n    }\r\n\r\n    // 7. Deploy Apps Script automatically (if enabled)\r\n    let appsScriptDeployment = null;\r\n    if (env.APPS_SCRIPT_AUTO_DEPLOY === \"true\") {\r\n      const { deployAppsScriptForTenant } = await import(\"./appsScriptDeployer\");\r\n\r\n      appsScriptDeployment = await deployAppsScriptForTenant(\r\n        env,\r\n        tenantId,\r\n        request.clubName,\r\n        automationJWT\r\n      );\r\n\r\n      if (appsScriptDeployment.success) {\r\n        console.log(`[Provisioning] Apps Script deployed for ${tenantId}:`, appsScriptDeployment.scriptId);\r\n      } else {\r\n        console.warn(`[Provisioning] Apps Script deployment failed (non-critical):`, appsScriptDeployment.error);\r\n      }\r\n    }\r\n\r\n    return {\r\n      success: true,\r\n      tenant: {\r\n        id: tenantId,\r\n        name: request.clubName,\r\n        adminJWT,\r\n        automationJWT,\r\n        setupUrl,\r\n        adminConsoleUrl,\r\n        appsScript: appsScriptDeployment?.success ? {\r\n          scriptId: appsScriptDeployment.scriptId,\r\n          scriptUrl: appsScriptDeployment.scriptUrl,\r\n          webAppUrl: appsScriptDeployment.webAppUrl\r\n        } : null\r\n      }\r\n    };\r\n\r\n  } catch (error: any) {\r\n    console.error(\"PROVISIONING_ERROR\", error);\r\n    return {\r\n      success: false,\r\n      error: {\r\n        code: \"PROVISIONING_FAILED\",\r\n        message: error.message || \"Unknown error\"\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Sanitize tenant ID (lowercase, alphanumeric + hyphens only)\r\n */\r\nfunction sanitizeTenantId(input: string): string {\r\n  return input\r\n    .toLowerCase()\r\n    .replace(/[^a-z0-9-]/g, \"-\")\r\n    .replace(/^-+|-+$/g, \"\")\r\n    .substring(0, 32);\r\n}\r\n\r\n/**\r\n * Determine tenant flags based on plan\r\n */\r\nfunction determineFlagsForPlan(plan: string) {\r\n  switch (plan) {\r\n    case \"enterprise\":\r\n    case \"managed\":\r\n      return { use_make: false, direct_yt: true, direct_fb: true, direct_ig: true };\r\n    case \"free\":\r\n    default:\r\n      return { use_make: true, direct_yt: false };\r\n  }\r\n}\r\n\r\n/**\r\n * Generate time-limited setup token\r\n */\r\nasync function generateSetupToken(env: Env, tenantId: string): Promise<string> {\r\n  const token = crypto.randomUUID();\r\n  const expiresAt = Date.now() + (24 * 60 * 60 * 1000); // 24 hours\r\n\r\n  // Store setup token with 24-hour expiration\r\n  await env.KV_IDEMP.put(\r\n    `setup-token:${token}`,\r\n    JSON.stringify({ tenantId, expiresAt })\r\n  );\r\n\r\n  return token;\r\n}\r\n\r\n/**\r\n * Send welcome email to new tenant\r\n */\r\nasync function sendWelcomeEmail(env: Env, data: {\r\n  to: string;\r\n  clubName: string;\r\n  setupUrl: string;\r\n  adminJWT: string;\r\n}) {\r\n  // Example using Resend API\r\n  if (!env.RESEND_API_KEY) return;\r\n\r\n  await fetch(\"https://api.resend.com/emails\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Authorization\": `Bearer ${env.RESEND_API_KEY}`,\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      from: \"onboarding@yourdomain.com\",\r\n      to: data.to,\r\n      subject: `Welcome to ${data.clubName} - Platform Setup`,\r\n      html: `\r\n        <h1>Welcome to the Platform!</h1>\r\n        <p>Your club <strong>${data.clubName}</strong> has been set up successfully.</p>\r\n\r\n        <h2>Next Steps:</h2>\r\n        <ol>\r\n          <li><a href=\"${data.setupUrl}\">Complete your setup</a> (link expires in 24 hours)</li>\r\n          <li>Configure your automation preferences</li>\r\n          <li>Connect your social media accounts</li>\r\n        </ol>\r\n\r\n        <h2>Your Credentials:</h2>\r\n        <p><strong>Admin Token:</strong> ${data.adminJWT.substring(0, 20)}...</p>\r\n        <p><em>Keep this secure - it provides full access to your account.</em></p>\r\n\r\n        <p>Need help? Reply to this email or visit our documentation.</p>\r\n      `\r\n    })\r\n  });\r\n}\r\n\r\n/**\r\n * Deploy Apps Script instance for tenant (advanced)\r\n * Requires Google Cloud Service Account + Clasp API\r\n */\r\nexport async function deployAppsScript(\r\n  env: Env,\r\n  tenantId: string,\r\n  automationJWT: string\r\n): Promise<{ success: boolean; scriptId?: string; error?: string }> {\r\n  try {\r\n    // This requires:\r\n    // 1. Google Cloud Service Account with Apps Script API enabled\r\n    // 2. Template Apps Script project\r\n    // 3. clasp library or Google Apps Script API\r\n\r\n    // Pseudocode:\r\n    // const serviceAccountKey = env.GOOGLE_SERVICE_ACCOUNT_KEY;\r\n    // const templateScriptId = env.APPS_SCRIPT_TEMPLATE_ID;\r\n\r\n    // 1. Clone template script\r\n    // const newScriptId = await claspClone(templateScriptId, serviceAccountKey);\r\n\r\n    // 2. Update Script Properties\r\n    // await setScriptProperties(newScriptId, {\r\n    //   TENANT_ID: tenantId,\r\n    //   BACKEND_JWT: automationJWT,\r\n    //   BACKEND_API_URL: env.BACKEND_URL\r\n    // });\r\n\r\n    // 3. Deploy as web app\r\n    // await claspDeploy(newScriptId);\r\n\r\n    // For now, return placeholder\r\n    return {\r\n      success: false,\r\n      error: \"Apps Script automation not yet implemented - requires Google Cloud setup\"\r\n    };\r\n\r\n  } catch (error: any) {\r\n    return {\r\n      success: false,\r\n      error: error.message\r\n    };\r\n  }\r\n}\r\n", "const ALLOWED = new Set<string>([\r\n  \"https://app.systontigers.co.uk\",\r\n  \"https://admin.systontigers.co.uk\",\r\n  \"https://setup.systontigers.co.uk\",\r\n  // Add/remove domains carefully; keep this list tight and audited.\r\n  // TODO: replace with real domains:\r\n  \"https://app.example.tld\",\r\n  \"https://admin.example.tld\",\r\n  \"https://setup.example.tld\",\r\n]);\r\n\r\nexport function corsHeaders(origin: string | null) {\r\n  const h = new Headers();\r\n  const allow = origin && ALLOWED.has(origin) ? origin : \"\";\r\n  if (allow) h.set(\"Access-Control-Allow-Origin\", allow);\r\n  h.set(\"Vary\", \"Origin\");\r\n  h.set(\"Access-Control-Allow-Methods\", \"GET,POST,PUT,DELETE,OPTIONS\");\r\n  h.set(\"Access-Control-Allow-Headers\", \"authorization,content-type\");\r\n  h.set(\"Access-Control-Max-Age\", \"600\");\r\n  return h;\r\n}\r\n\r\nexport function isPreflight(req: Request) {\r\n  return req.method === \"OPTIONS\";\r\n}\r\n", "import { logJSON } from \"../lib/log\";\r\nimport type { Env } from \"../types\";\r\n\r\nexport interface RateLimitOptions {\r\n  scope?: string;\r\n  limit?: number;\r\n  windowSeconds?: number;\r\n  requestId?: string;\r\n  path?: string;\r\n}\r\n\r\nexport interface RateLimitResult {\r\n  ok: boolean;\r\n  remaining?: number;\r\n  limit?: number;\r\n  retryAfter?: number;\r\n}\r\n\r\nconst DEFAULT_LIMIT = 60;\r\nconst DEFAULT_WINDOW = 60;\r\nconst DEFAULT_SCOPE = \"global\";\r\n\r\nexport async function rateLimit(\r\n  request: Request,\r\n  env: Env,\r\n  options: RateLimitOptions = {}\r\n): Promise<RateLimitResult> {\r\n  const environment = env.ENVIRONMENT || env.NODE_ENV || \"development\";\r\n  if (environment !== \"production\") {\r\n    return { ok: true };\r\n  }\r\n\r\n  const kv = env.RATE_LIMIT_KV;\r\n  if (!kv) {\r\n    return { ok: true };\r\n  }\r\n\r\n  const limit = options.limit ?? DEFAULT_LIMIT;\r\n  const windowSeconds = options.windowSeconds ?? DEFAULT_WINDOW;\r\n  const scope = options.scope ?? DEFAULT_SCOPE;\r\n  const requestId = options.requestId;\r\n  const path = options.path || new URL(request.url).pathname;\r\n\r\n  const ip = request.headers.get(\"CF-Connecting-IP\") || \"unknown\";\r\n  const key = `rl:${scope}:${ip}`;\r\n\r\n  try {\r\n    const stored = await kv.get(key);\r\n    let remaining = stored ? Number.parseInt(stored, 10) : limit;\r\n    if (!Number.isFinite(remaining)) {\r\n      remaining = limit;\r\n    }\r\n\r\n    if (remaining <= 0) {\r\n      const retryAfter = windowSeconds;\r\n      logJSON({\r\n        level: \"warn\",\r\n        msg: \"rate_limited\",\r\n        path,\r\n        requestId,\r\n        status: 429\r\n      });\r\n      return { ok: false, remaining: 0, limit, retryAfter };\r\n    }\r\n\r\n    const nextRemaining = remaining - 1;\r\n    await kv.put(key, String(nextRemaining), { expirationTtl: windowSeconds });\r\n    return { ok: true, remaining: nextRemaining, limit };\r\n  } catch (err: unknown) {\r\n    logJSON({\r\n      level: \"error\",\r\n      msg: \"rate_limit_error\",\r\n      status: 500,\r\n      path,\r\n      requestId\r\n    });\r\n    return { ok: true };\r\n  }\r\n}\r\n", "export function logJSON(event: {\r\n  level: \"info\"|\"warn\"|\"error\",\r\n  msg: string,\r\n  requestId?: string,\r\n  path?: string,\r\n  status?: number,\r\n  ms?: number,\r\n  tenant?: string\r\n}) {\r\n  console.log(JSON.stringify({ t: new Date().toISOString(), ...event }));\r\n}\r\n\r\nexport function newRequestId() {\r\n  try { return crypto.randomUUID(); } catch { return Math.random().toString(36).slice(2); }\r\n}\r\n", "import { z } from \"zod\";\r\n\r\nexport interface ValidationIssue {\r\n  path: (string | number)[];\r\n  message: string;\r\n  code: string;\r\n}\r\n\r\nexport class RequestValidationError extends Error {\r\n  readonly status: number;\r\n  readonly issues: ValidationIssue[];\r\n\r\n  constructor(issues: ValidationIssue[], status = 400) {\r\n    super(\"INVALID_REQUEST\");\r\n    this.name = \"RequestValidationError\";\r\n    this.status = status;\r\n    this.issues = issues;\r\n  }\r\n}\r\n\r\nexport function isValidationError(error: unknown): error is RequestValidationError {\r\n  return (\r\n    error instanceof RequestValidationError ||\r\n    (\r\n      typeof error === \"object\" &&\r\n      error !== null &&\r\n      \"issues\" in error &&\r\n      Array.isArray((error as RequestValidationError).issues) &&\r\n      \"status\" in error\r\n    )\r\n  );\r\n}\r\n\r\nexport function parse<T>(schema: z.ZodType<T>, value: unknown): T {\r\n  const result = schema.safeParse(value);\r\n  if (!result.success) {\r\n    const issues: ValidationIssue[] = result.error.issues.map((issue) => ({\r\n      path: issue.path,\r\n      message: issue.message,\r\n      code: issue.code\r\n    }));\r\n    throw new RequestValidationError(issues, 400);\r\n  }\r\n  return result.data;\r\n}\r\n\r\n/**\r\n * Helper to create JSON responses\r\n */\r\nexport function json(data: any, status: number = 200, headers?: HeadersInit): Response {\r\n  const hdrs = new Headers(headers || {});\r\n  hdrs.set('Content-Type', 'application/json');\r\n  return new Response(JSON.stringify(data), { status, headers: hdrs });\r\n}\r\n", "declare const APP_VERSION: string;\r\n\r\nexport async function healthz() {\r\n  return Response.json({\r\n    status: \"ok\",\r\n    version: APP_VERSION,\r\n    ts: new Date().toISOString(),\r\n  }, { status: 200 });\r\n}\r\n\r\n// Keep readiness lightweight; touch bindings only if cheap.\r\nexport async function readyz(_env: unknown) {\r\n  return Response.json({\r\n    status: \"ready\",\r\n    version: APP_VERSION,\r\n    ts: new Date().toISOString(),\r\n  }, { status: 200 });\r\n}\r\n", "// src/routes/signup.ts\r\n// Self-Serve Signup System (Phase 3)\r\n\r\nimport { z } from \"zod\";\r\nimport { json, parse, isValidationError } from \"../lib/validate\";\r\nimport { requireJWT } from \"../services/auth\";\r\nimport { issueTenantAdminJWT, generateServiceJWT } from \"../services/jwt\";\r\nimport { isAllowedWebhookHost } from \"../services/tenants\";\r\nimport { logJSON } from \"../lib/log\";\r\n\r\nconst StartSchema = z.object({\r\n  clubName: z.string().min(1, \"Club name required\"),\r\n  clubSlug: z.string().min(3, \"Slug must be at least 3 characters\").regex(/^[a-z0-9-]+$/, \"Slug must be lowercase alphanumeric with hyphens\"),\r\n  email: z.string().email(\"Valid email required\"),\r\n  plan: z.enum([\"starter\", \"pro\"]),\r\n  promoCode: z.string().optional()\r\n});\r\n\r\nconst BrandSchema = z.object({\r\n  primaryColor: z.string().regex(/^#[0-9A-Fa-f]{6}$/, \"Must be valid hex color\"),\r\n  secondaryColor: z.string().regex(/^#[0-9A-Fa-f]{6}$/, \"Must be valid hex color\")\r\n});\r\n\r\nconst MakeSchema = z.object({\r\n  webhookUrl: z.string().url(),\r\n  webhookSecret: z.string().min(16, \"Secret must be at least 16 characters\")\r\n});\r\n\r\n// Helper function to queue provisioning\r\nasync function queueProvisioning(env: any, tenantId: string): Promise<void> {\r\n  try {\r\n    // Generate short-lived service JWT\r\n    const serviceJWT = await generateServiceJWT(env, 30);\r\n\r\n    // Call internal provisioning endpoint\r\n    const baseUrl = env.BACKEND_URL || 'http://localhost:8787';\r\n    await fetch(`${baseUrl}/internal/provision/queue`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${serviceJWT}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ tenantId }),\r\n    });\r\n\r\n    console.log(`[Signup] Queued provisioning for ${tenantId}`);\r\n  } catch (error) {\r\n    console.error(`[Signup] Failed to queue provisioning for ${tenantId}:`, error);\r\n    // Don't fail signup if provisioning queue fails - it can be retried\r\n  }\r\n}\r\n\r\n// POST /public/signup/start - Step 1: Create tenant account\r\nexport async function signupStart(req: Request, env: any, requestId: string, corsHdrs: Headers): Promise<Response> {\r\n  try {\r\n    const body = await req.json().catch(() => ({}));\r\n    const data = parse(StartSchema, body);\r\n\r\n    // Check if slug is already taken\r\n    const existing = await env.DB.prepare(\"SELECT id FROM tenants WHERE slug = ?\").bind(data.clubSlug).first();\r\n    if (existing) {\r\n      return json({ success: false, error: { code: \"SLUG_TAKEN\", message: \"That club slug is already in use\" } }, 400, corsHdrs);\r\n    }\r\n\r\n    // Check if email is already registered\r\n    const existingEmail = await env.DB.prepare(\"SELECT id FROM tenants WHERE email = ?\").bind(data.email).first();\r\n    if (existingEmail) {\r\n      return json({ success: false, error: { code: \"EMAIL_EXISTS\", message: \"That email is already registered\" } }, 400, corsHdrs);\r\n    }\r\n\r\n    // Validate promo code if provided\r\n    let promoId = null;\r\n    let discount = 0;\r\n    let comped = 0;\r\n\r\n    if (data.promoCode) {\r\n      const promo = await env.DB.prepare(`\r\n        SELECT id, code, discount_percent, max_uses, used_count, valid_until\r\n        FROM promo_codes\r\n        WHERE code = ? COLLATE NOCASE\r\n      `).bind(data.promoCode).first();\r\n\r\n      if (!promo) {\r\n        return json({ success: false, error: { code: \"INVALID_PROMO\", message: \"Invalid promo code\" } }, 400, corsHdrs);\r\n      }\r\n\r\n      // Check if promo is expired\r\n      if (promo.valid_until && promo.valid_until < Math.floor(Date.now() / 1000)) {\r\n        return json({ success: false, error: { code: \"PROMO_EXPIRED\", message: \"Promo code has expired\" } }, 400, corsHdrs);\r\n      }\r\n\r\n      // Check if promo has reached max uses\r\n      if (promo.max_uses && promo.used_count >= promo.max_uses) {\r\n        return json({ success: false, error: { code: \"PROMO_MAXED\", message: \"Promo code has reached maximum uses\" } }, 400, corsHdrs);\r\n      }\r\n\r\n      promoId = promo.id;\r\n      discount = promo.discount_percent;\r\n\r\n      // If 100% discount, mark as comped\r\n      if (discount === 100) {\r\n        comped = 1;\r\n      }\r\n    }\r\n\r\n    // Generate tenant ID\r\n    const tenantId = `tenant_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`;\r\n\r\n    // Calculate trial end date (14 days from now)\r\n    const trialEndsAt = Math.floor(Date.now() / 1000) + (14 * 24 * 60 * 60);\r\n\r\n    // Create tenant record\r\n    await env.DB.prepare(`\r\n      INSERT INTO tenants (id, slug, name, email, plan, status, comped, trial_ends_at)\r\n      VALUES (?, ?, ?, ?, ?, 'trial', ?, ?)\r\n    `).bind(tenantId, data.clubSlug, data.clubName, data.email, data.plan, comped, trialEndsAt).run();\r\n\r\n    // Create default brand\r\n    await env.DB.prepare(`\r\n      INSERT INTO tenant_brand (tenant_id, primary_color, secondary_color)\r\n      VALUES (?, '#FFD700', '#000000')\r\n    `).bind(tenantId).run();\r\n\r\n    // Record promo redemption if applicable\r\n    if (promoId) {\r\n      const redemptionId = `redemption_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`;\r\n      await env.DB.prepare(`\r\n        INSERT INTO promo_redemptions (id, tenant_id, promo_code_id)\r\n        VALUES (?, ?, ?)\r\n      `).bind(redemptionId, tenantId, promoId).run();\r\n\r\n      // Increment promo used count\r\n      await env.DB.prepare(`\r\n        UPDATE promo_codes SET used_count = used_count + 1 WHERE id = ?\r\n      `).bind(promoId).run();\r\n    }\r\n\r\n    // Issue admin JWT for this tenant\r\n    const jwt = await issueTenantAdminJWT(env, tenantId, data.email);\r\n\r\n    return json({\r\n      success: true,\r\n      tenant: {\r\n        id: tenantId,\r\n        slug: data.clubSlug,\r\n        name: data.clubName,\r\n        email: data.email,\r\n        plan: data.plan,\r\n        status: \"trial\",\r\n        comped: comped === 1,\r\n        trialEndsAt\r\n      },\r\n      discount,\r\n      jwt\r\n    }, 200, corsHdrs);\r\n\r\n  } catch (err: any) {\r\n    if (isValidationError(err)) {\r\n      return json({\r\n        success: false,\r\n        error: { code: \"INVALID_REQUEST\", message: \"Validation failed\", issues: err.issues }\r\n      }, 400, corsHdrs);\r\n    }\r\n    logJSON(\"error\", requestId, { message: \"SIGNUP_START_ERROR\", error: err.message });\r\n    return json({ success: false, error: { code: \"SIGNUP_FAILED\", message: err.message } }, 500, corsHdrs);\r\n  }\r\n}\r\n\r\n// POST /public/signup/brand - Step 2: Customize brand colors\r\nexport async function signupBrand(req: Request, env: any, requestId: string, corsHdrs: Headers): Promise<Response> {\r\n  try {\r\n    const claims = await requireJWT(req, env);\r\n    const tenantId = claims.tenant_id || claims.tenantId;\r\n\r\n    const body = await req.json().catch(() => ({}));\r\n    const data = parse(BrandSchema, body);\r\n\r\n    // Update brand colors\r\n    await env.DB.prepare(`\r\n      UPDATE tenant_brand\r\n      SET primary_color = ?, secondary_color = ?, updated_at = unixepoch()\r\n      WHERE tenant_id = ?\r\n    `).bind(data.primaryColor, data.secondaryColor, tenantId).run();\r\n\r\n    return json({ success: true }, 200, corsHdrs);\r\n\r\n  } catch (err: any) {\r\n    if (err instanceof Response) throw err;\r\n    if (isValidationError(err)) {\r\n      return json({\r\n        success: false,\r\n        error: { code: \"INVALID_REQUEST\", message: \"Validation failed\", issues: err.issues }\r\n      }, 400, corsHdrs);\r\n    }\r\n    logJSON(\"error\", requestId, { message: \"BRAND_UPDATE_ERROR\", error: err.message });\r\n    return json({ success: false, error: { code: \"BRAND_UPDATE_FAILED\", message: err.message } }, 500, corsHdrs);\r\n  }\r\n}\r\n\r\n// POST /public/signup/starter/make - Step 3a: Configure Make.com webhook (Starter plan)\r\nexport async function signupStarterMake(req: Request, env: any, requestId: string, corsHdrs: Headers): Promise<Response> {\r\n  try {\r\n    const claims = await requireJWT(req, env);\r\n    const tenantId = claims.tenant_id || claims.tenantId;\r\n\r\n    // Verify tenant is on Starter plan\r\n    const tenant = await env.DB.prepare(\"SELECT plan FROM tenants WHERE id = ?\").bind(tenantId).first();\r\n    if (!tenant || tenant.plan !== \"starter\") {\r\n      return json({ success: false, error: { code: \"PLAN_MISMATCH\", message: \"This endpoint is only for Starter plan\" } }, 400, corsHdrs);\r\n    }\r\n\r\n    const body = await req.json().catch(() => ({}));\r\n    const data = parse(MakeSchema, body);\r\n\r\n    // Validate webhook host is allowed\r\n    const webhookHost = new URL(data.webhookUrl).hostname;\r\n    if (!isAllowedWebhookHost(webhookHost, env)) {\r\n      return json({\r\n        success: false,\r\n        error: { code: \"INVALID_WEBHOOK_HOST\", message: \"Webhook host not allowed\" }\r\n      }, 400, corsHdrs);\r\n    }\r\n\r\n    // Create or update Make connection\r\n    const connId = `make_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`;\r\n    await env.DB.prepare(`\r\n      INSERT INTO make_connections (id, tenant_id, webhook_url, webhook_secret)\r\n      VALUES (?, ?, ?, ?)\r\n      ON CONFLICT(tenant_id) DO UPDATE SET\r\n        webhook_url = excluded.webhook_url,\r\n        webhook_secret = excluded.webhook_secret\r\n    `).bind(connId, tenantId, data.webhookUrl, data.webhookSecret).run();\r\n\r\n    // Mark tenant as active\r\n    await env.DB.prepare(`\r\n      UPDATE tenants SET status = 'active', updated_at = unixepoch() WHERE id = ?\r\n    `).bind(tenantId).run();\r\n\r\n    // Queue provisioning in background\r\n    await queueProvisioning(env, tenantId);\r\n\r\n    return json({ success: true }, 200, corsHdrs);\r\n\r\n  } catch (err: any) {\r\n    if (err instanceof Response) throw err;\r\n    if (isValidationError(err)) {\r\n      return json({\r\n        success: false,\r\n        error: { code: \"INVALID_REQUEST\", message: \"Validation failed\", issues: err.issues }\r\n      }, 400, corsHdrs);\r\n    }\r\n    logJSON(\"error\", requestId, { message: \"MAKE_SETUP_ERROR\", error: err.message });\r\n    return json({ success: false, error: { code: \"MAKE_SETUP_FAILED\", message: err.message } }, 500, corsHdrs);\r\n  }\r\n}\r\n\r\n// POST /public/signup/pro/confirm - Step 3b: Confirm Pro plan setup\r\nexport async function signupProConfirm(req: Request, env: any, requestId: string, corsHdrs: Headers): Promise<Response> {\r\n  try {\r\n    const claims = await requireJWT(req, env);\r\n    const tenantId = claims.tenant_id || claims.tenantId;\r\n\r\n    // Verify tenant is on Pro plan\r\n    const tenant = await env.DB.prepare(\"SELECT plan FROM tenants WHERE id = ?\").bind(tenantId).first();\r\n    if (!tenant || tenant.plan !== \"pro\") {\r\n      return json({ success: false, error: { code: \"PLAN_MISMATCH\", message: \"This endpoint is only for Pro plan\" } }, 400, corsHdrs);\r\n    }\r\n\r\n    // Create placeholder pro_automation record (Apps Script deployment happens async)\r\n    const autoId = `pro_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`;\r\n    await env.DB.prepare(`\r\n      INSERT INTO pro_automation (id, tenant_id)\r\n      VALUES (?, ?)\r\n      ON CONFLICT(tenant_id) DO NOTHING\r\n    `).bind(autoId, tenantId).run();\r\n\r\n    // Mark tenant as active\r\n    await env.DB.prepare(`\r\n      UPDATE tenants SET status = 'active', updated_at = unixepoch() WHERE id = ?\r\n    `).bind(tenantId).run();\r\n\r\n    // Queue provisioning in background\r\n    await queueProvisioning(env, tenantId);\r\n\r\n    return json({ success: true }, 200, corsHdrs);\r\n\r\n  } catch (err: any) {\r\n    if (err instanceof Response) throw err;\r\n    logJSON(\"error\", requestId, { message: \"PRO_CONFIRM_ERROR\", error: err.message });\r\n    return json({ success: false, error: { code: \"PRO_CONFIRM_FAILED\", message: err.message } }, 500, corsHdrs);\r\n  }\r\n}\r\n", "// backend/src/routes/magic.ts\r\nimport type { Env } from '../types';\r\nimport { json } from '../lib/validate';\r\nimport { SignJWT, jwtVerify } from 'jose';\r\n\r\n// POST /auth/magic/start  { email, tenantId }\r\nexport async function handleMagicStart(req: Request, env: Env): Promise<Response> {\r\n  const body = await req.json().catch(()=>({}));\r\n  const email = (body.email || '').toString().trim().toLowerCase();\r\n  const tenantId = (body.tenantId || '').toString().trim();\r\n  if (!email || !tenantId) return json({ success:false, error:'email and tenantId required' }, 400);\r\n\r\n  // Generate token (24h)\r\n  const now = Math.floor(Date.now()/1000);\r\n  const token = await new SignJWT({ type:'magic_link', roles:['owner','admin'], tenantId })\r\n    .setProtectedHeader({ alg:'HS256', typ:'JWT' })\r\n    .setIssuer(env.JWT_ISSUER || 'syston.app')\r\n    .setAudience('syston-admin')\r\n    .setSubject(email)\r\n    .setIssuedAt(now)\r\n    .setExpirationTime(now + 24*3600)\r\n    .sign(new TextEncoder().encode(env.JWT_SECRET));\r\n\r\n  const link = `${env.ADMIN_CONSOLE_URL}/admin/onboard?token=${token}`;\r\n  // TODO: send email via provider; for now only log\r\n  console.log(`[Magic] Link for ${email}: ${link}`);\r\n\r\n  return json({ success:true });\r\n}\r\n\r\n// GET /auth/magic/verify?token=...\r\nexport async function handleMagicVerify(req: Request, env: Env): Promise<Response> {\r\n  const token = new URL(req.url).searchParams.get('token') || '';\r\n  if (!token) return json({ success:false, error:'token required' }, 400);\r\n\r\n  const { payload } = await jwtVerify(token, new TextEncoder().encode(env.JWT_SECRET), {\r\n    issuer: env.JWT_ISSUER || 'syston.app',\r\n    audience: 'syston-admin',\r\n    clockTolerance: 10,\r\n  });\r\n\r\n  // Create owner session JWT (shorter ttl, e.g. 7d)\r\n  const now = Math.floor(Date.now()/1000);\r\n  const session = await new SignJWT({\r\n    roles: ['owner','admin'],\r\n    tenantId: payload.tenantId,\r\n  })\r\n    .setProtectedHeader({ alg:'HS256', typ:'JWT' })\r\n    .setIssuer(env.JWT_ISSUER || 'syston.app')\r\n    .setAudience('syston-admin')\r\n    .setSubject(payload.sub as string)\r\n    .setIssuedAt(now)\r\n    .setExpirationTime(now + 7*24*3600)\r\n    .sign(new TextEncoder().encode(env.JWT_SECRET));\r\n\r\n  const hdrs = new Headers({ 'content-type': 'application/json' });\r\n  // HttpOnly cookie for browser\r\n  hdrs.append('Set-Cookie', `owner_session=${session}; Path=/; HttpOnly; Secure; SameSite=Lax; Max-Age=${7*24*3600}`);\r\n  return new Response(JSON.stringify({ success:true, tenantId: payload.tenantId }), { status:200, headers: hdrs });\r\n}\r\n", "/**\r\n * Provisioning Routes\r\n *\r\n * Internal endpoints for tenant provisioning and status tracking\r\n */\r\n\r\nimport type { Env } from '../types';\r\nimport { verifyServiceJWT, generateServiceJWT } from '../services/jwt';\r\n\r\n/**\r\n * POST /internal/provision/queue\r\n * Queue provisioning for a tenant (called after signup)\r\n * Requires service JWT authorization\r\n */\r\nexport async function handleProvisionQueue(\r\n  request: Request,\r\n  env: Env\r\n): Promise<Response> {\r\n  try {\r\n    // Verify service JWT (internal only)\r\n    const authHeader = request.headers.get('Authorization');\r\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\r\n      return Response.json({\r\n        success: false,\r\n        error: { code: 'UNAUTHORIZED', message: 'Service authorization required' },\r\n      }, { status: 401 });\r\n    }\r\n\r\n    const token = authHeader.substring(7);\r\n    const isValid = await verifyServiceJWT(env, token);\r\n\r\n    if (!isValid) {\r\n      return Response.json({\r\n        success: false,\r\n        error: { code: 'INVALID_TOKEN', message: 'Invalid service token' },\r\n      }, { status: 401 });\r\n    }\r\n\r\n    // Parse request body\r\n    const body = await request.json<{ tenantId: string }>();\r\n\r\n    if (!body.tenantId) {\r\n      return Response.json({\r\n        success: false,\r\n        error: { code: 'MISSING_TENANT_ID', message: 'Tenant ID is required' },\r\n      }, { status: 400 });\r\n    }\r\n\r\n    // Get tenant info\r\n    const tenant = await env.DB.prepare(\r\n      `SELECT id, plan FROM tenants WHERE id = ?`\r\n    ).bind(body.tenantId).first<{ id: string; plan: string }>();\r\n\r\n    if (!tenant) {\r\n      return Response.json({\r\n        success: false,\r\n        error: { code: 'TENANT_NOT_FOUND', message: 'Tenant not found' },\r\n      }, { status: 404 });\r\n    }\r\n\r\n    // Get Provisioner Durable Object for this tenant\r\n    const provisionerId = env.PROVISIONER.idFromName(tenant.id);\r\n    const provisioner = env.PROVISIONER.get(provisionerId);\r\n\r\n    // Queue provisioning\r\n    await provisioner.fetch(new Request('https://provisioner/queue', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        tenantId: tenant.id,\r\n        plan: tenant.plan,\r\n      }),\r\n    }));\r\n\r\n    // Trigger run\r\n    const response = await provisioner.fetch(new Request('https://provisioner/run', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        tenantId: tenant.id,\r\n        plan: tenant.plan,\r\n      }),\r\n    }));\r\n\r\n    const result = await response.json<{\r\n      success: boolean;\r\n      message: string;\r\n      state?: unknown;\r\n    }>();\r\n\r\n    return Response.json(result);\r\n  } catch (error) {\r\n    console.error('[Provision Queue] Error:', error);\r\n    return Response.json({\r\n      success: false,\r\n      error: {\r\n        code: 'QUEUE_ERROR',\r\n        message: error instanceof Error ? error.message : String(error),\r\n      },\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n/**\r\n * GET /api/v1/tenants/:id/provision-status\r\n * Get provisioning status for a tenant\r\n * Requires owner session or admin JWT\r\n */\r\nexport async function handleProvisionStatus(\r\n  request: Request,\r\n  env: Env,\r\n  tenantId: string\r\n): Promise<Response> {\r\n  try {\r\n    // Get tenant to verify it exists and get plan\r\n    const tenant = await env.DB.prepare(\r\n      `SELECT id, plan, status, provisioned_at FROM tenants WHERE id = ?`\r\n    ).bind(tenantId).first<{\r\n      id: string;\r\n      plan: string;\r\n      status: string;\r\n      provisioned_at: number | null;\r\n    }>();\r\n\r\n    if (!tenant) {\r\n      return Response.json({\r\n        success: false,\r\n        error: { code: 'TENANT_NOT_FOUND', message: 'Tenant not found' },\r\n      }, { status: 404 });\r\n    }\r\n\r\n    // Get Provisioner Durable Object for this tenant\r\n    const provisionerId = env.PROVISIONER.idFromName(tenant.id);\r\n    const provisioner = env.PROVISIONER.get(provisionerId);\r\n\r\n    // Get status\r\n    const response = await provisioner.fetch(\r\n      new Request(`https://provisioner/status?tenantId=${tenant.id}&plan=${tenant.plan}`)\r\n    );\r\n\r\n    const result = await response.json<{\r\n      success: boolean;\r\n      state?: {\r\n        status: string;\r\n        currentStep: string | null;\r\n        checkpoints: Record<string, {\r\n          step: string;\r\n          status: string;\r\n          error?: string;\r\n        }>;\r\n        error?: string;\r\n      };\r\n    }>();\r\n\r\n    if (!result.success || !result.state) {\r\n      return Response.json({\r\n        success: true,\r\n        data: {\r\n          status: tenant.provisioned_at ? 'completed' : 'pending',\r\n          step: null,\r\n          checkpoints: {},\r\n        },\r\n      });\r\n    }\r\n\r\n    return Response.json({\r\n      success: true,\r\n      data: {\r\n        status: result.state.status,\r\n        currentStep: result.state.currentStep,\r\n        checkpoints: result.state.checkpoints,\r\n        error: result.state.error,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error('[Provision Status] Error:', error);\r\n    return Response.json({\r\n      success: false,\r\n      error: {\r\n        code: 'STATUS_ERROR',\r\n        message: error instanceof Error ? error.message : String(error),\r\n      },\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n/**\r\n * GET /api/v1/tenants/:id/overview\r\n * Get admin overview stats for a tenant\r\n * Requires owner session or admin JWT\r\n */\r\nexport async function handleTenantOverview(\r\n  request: Request,\r\n  env: Env,\r\n  tenantId: string\r\n): Promise<Response> {\r\n  try {\r\n    // Get tenant info\r\n    const tenant = await env.DB.prepare(\r\n      `SELECT t.*, tb.primary_color, tb.secondary_color, tb.badge_url\r\n       FROM tenants t\r\n       LEFT JOIN tenant_brand tb ON t.id = tb.tenant_id\r\n       WHERE t.id = ?`\r\n    ).bind(tenantId).first<{\r\n      id: string;\r\n      slug: string;\r\n      name: string;\r\n      email: string;\r\n      plan: string;\r\n      status: string;\r\n      comped: number;\r\n      trial_ends_at: number | null;\r\n      created_at: number;\r\n      provisioned_at: number | null;\r\n      primary_color: string;\r\n      secondary_color: string;\r\n      badge_url: string | null;\r\n    }>();\r\n\r\n    if (!tenant) {\r\n      return Response.json({\r\n        success: false,\r\n        error: { code: 'TENANT_NOT_FOUND', message: 'Tenant not found' },\r\n      }, { status: 404 });\r\n    }\r\n\r\n    // Get current month usage\r\n    const currentMonth = new Date().toISOString().substring(0, 7); // YYYY-MM\r\n    const usage = await env.DB.prepare(\r\n      `SELECT action_count FROM usage_counters\r\n       WHERE tenant_id = ? AND month = ?`\r\n    ).bind(tenantId, currentMonth).first<{ action_count: number }>();\r\n\r\n    const actionCount = usage?.action_count || 0;\r\n    const limit = tenant.plan === 'starter' && tenant.comped === 0 ? 1000 : null;\r\n\r\n    // Count fixtures\r\n    const fixturesCount = await env.DB.prepare(\r\n      `SELECT COUNT(*) as count FROM fixtures WHERE tenant_id = ?`\r\n    ).bind(tenantId).first<{ count: number }>();\r\n\r\n    // Count results\r\n    const resultsCount = await env.DB.prepare(\r\n      `SELECT COUNT(*) as count FROM results WHERE tenant_id = ?`\r\n    ).bind(tenantId).first<{ count: number }>();\r\n\r\n    // Count feed posts\r\n    const postsCount = await env.DB.prepare(\r\n      `SELECT COUNT(*) as count FROM feed_posts WHERE tenant_id = ?`\r\n    ).bind(tenantId).first<{ count: number }>();\r\n\r\n    // Get Make.com connection (if Starter)\r\n    let makeConnection = null;\r\n    if (tenant.plan === 'starter') {\r\n      makeConnection = await env.DB.prepare(\r\n        `SELECT webhook_url, scenario_id, validated_at, last_synced_at\r\n         FROM make_connections WHERE tenant_id = ?`\r\n      ).bind(tenantId).first<{\r\n        webhook_url: string;\r\n        scenario_id: string | null;\r\n        validated_at: number | null;\r\n        last_synced_at: number | null;\r\n      }>();\r\n    }\r\n\r\n    // Get Pro automation (if Pro)\r\n    let proAutomation = null;\r\n    if (tenant.plan === 'pro') {\r\n      proAutomation = await env.DB.prepare(\r\n        `SELECT apps_script_id, apps_script_deploy_status, kv_namespace, cron_schedule, last_synced_at\r\n         FROM pro_automation WHERE tenant_id = ?`\r\n      ).bind(tenantId).first<{\r\n        apps_script_id: string | null;\r\n        apps_script_deploy_status: string | null;\r\n        kv_namespace: string | null;\r\n        cron_schedule: string | null;\r\n        last_synced_at: number | null;\r\n      }>();\r\n    }\r\n\r\n    return Response.json({\r\n      success: true,\r\n      data: {\r\n        tenant: {\r\n          id: tenant.id,\r\n          slug: tenant.slug,\r\n          name: tenant.name,\r\n          email: tenant.email,\r\n          plan: tenant.plan,\r\n          status: tenant.status,\r\n          comped: tenant.comped === 1,\r\n          trialEndsAt: tenant.trial_ends_at,\r\n          createdAt: tenant.created_at,\r\n          provisionedAt: tenant.provisioned_at,\r\n        },\r\n        brand: {\r\n          primaryColor: tenant.primary_color,\r\n          secondaryColor: tenant.secondary_color,\r\n          badgeUrl: tenant.badge_url,\r\n        },\r\n        usage: {\r\n          actionCount,\r\n          limit,\r\n          remaining: limit ? Math.max(0, limit - actionCount) : null,\r\n          percentUsed: limit ? Math.min(100, Math.round((actionCount / limit) * 100)) : 0,\r\n        },\r\n        stats: {\r\n          fixturesCount: fixturesCount?.count || 0,\r\n          resultsCount: resultsCount?.count || 0,\r\n          postsCount: postsCount?.count || 0,\r\n        },\r\n        automation: tenant.plan === 'starter' ? makeConnection : proAutomation,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error('[Tenant Overview] Error:', error);\r\n    return Response.json({\r\n      success: false,\r\n      error: {\r\n        code: 'OVERVIEW_ERROR',\r\n        message: error instanceof Error ? error.message : String(error),\r\n      },\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n/**\r\n * POST /internal/provision/retry\r\n * Retry failed provisioning steps\r\n * Requires service JWT authorization\r\n */\r\nexport async function handleProvisionRetry(\r\n  request: Request,\r\n  env: Env\r\n): Promise<Response> {\r\n  try {\r\n    // Verify service JWT\r\n    const authHeader = request.headers.get('Authorization');\r\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\r\n      return Response.json({\r\n        success: false,\r\n        error: { code: 'UNAUTHORIZED', message: 'Service authorization required' },\r\n      }, { status: 401 });\r\n    }\r\n\r\n    const token = authHeader.substring(7);\r\n    const isValid = await verifyServiceJWT(env, token);\r\n\r\n    if (!isValid) {\r\n      return Response.json({\r\n        success: false,\r\n        error: { code: 'INVALID_TOKEN', message: 'Invalid service token' },\r\n      }, { status: 401 });\r\n    }\r\n\r\n    // Parse request body\r\n    const body = await request.json<{ tenantId: string }>();\r\n\r\n    if (!body.tenantId) {\r\n      return Response.json({\r\n        success: false,\r\n        error: { code: 'MISSING_TENANT_ID', message: 'Tenant ID is required' },\r\n      }, { status: 400 });\r\n    }\r\n\r\n    // Get tenant info\r\n    const tenant = await env.DB.prepare(\r\n      `SELECT id, plan FROM tenants WHERE id = ?`\r\n    ).bind(body.tenantId).first<{ id: string; plan: string }>();\r\n\r\n    if (!tenant) {\r\n      return Response.json({\r\n        success: false,\r\n        error: { code: 'TENANT_NOT_FOUND', message: 'Tenant not found' },\r\n      }, { status: 404 });\r\n    }\r\n\r\n    // Get Provisioner Durable Object\r\n    const provisionerId = env.PROVISIONER.idFromName(tenant.id);\r\n    const provisioner = env.PROVISIONER.get(provisionerId);\r\n\r\n    // Retry provisioning\r\n    await provisioner.fetch(new Request('https://provisioner/retry', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        tenantId: tenant.id,\r\n        plan: tenant.plan,\r\n      }),\r\n    }));\r\n\r\n    // Trigger run\r\n    const response = await provisioner.fetch(new Request('https://provisioner/run', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        tenantId: tenant.id,\r\n        plan: tenant.plan,\r\n      }),\r\n    }));\r\n\r\n    const result = await response.json<{\r\n      success: boolean;\r\n      message: string;\r\n      state?: unknown;\r\n    }>();\r\n\r\n    return Response.json(result);\r\n  } catch (error) {\r\n    console.error('[Provision Retry] Error:', error);\r\n    return Response.json({\r\n      success: false,\r\n      error: {\r\n        code: 'RETRY_ERROR',\r\n        message: error instanceof Error ? error.message : String(error),\r\n      },\r\n    }, { status: 500 });\r\n  }\r\n}\r\n", "export class TenantRateLimiter {\r\n  state: DurableObjectState; storage: DurableObjectStorage;\r\n  constructor(state: DurableObjectState) { this.state = state; this.storage = state.storage; }\r\n\r\n  async fetch(req: Request): Promise<Response> {\r\n    const url = new URL(req.url);\r\n    if (url.pathname !== \"/check\") return new Response(\"not found\", { status: 404 });\r\n\r\n    const bucket = url.searchParams.get(\"bucket\") || \"post\";\r\n    const now = Date.now(); const windowMs = 1000; const burst = 5;\r\n    const key = `rl:${bucket}:${Math.floor(now / windowMs)}`;\r\n    let used = (await this.storage.get<number>(key)) ?? 0;\r\n\r\n    if (used < burst) {\r\n      await this.storage.put(key, used + 1, { expiration: Math.floor((now + windowMs)/1000) });\r\n      return new Response(JSON.stringify({ ok: true }), {\r\n        headers: {\r\n          \"X-RateLimit-Limit\": String(burst),\r\n          \"X-RateLimit-Remaining\": String(burst-(used+1)),\r\n          \"X-RateLimit-Reset\": \"1\"\r\n        }\r\n      });\r\n    }\r\n\r\n    return new Response(JSON.stringify({ ok: false }), {\r\n      status: 429,\r\n      headers: {\r\n        \"X-RateLimit-Limit\": String(burst),\r\n        \"X-RateLimit-Remaining\": \"0\",\r\n        \"X-RateLimit-Reset\": \"1\"\r\n      }\r\n    });\r\n  }\r\n}\r\n", "// backend/src/do/votingRoom.ts\r\nimport type { Env } from \"../types\";\r\n\r\ntype VoteSettings = {\r\n  tenant: string;\r\n  matchId: string;\r\n  open: boolean;\r\n  candidates: { id: string; name: string }[];\r\n  maxVotesPerUser: number; // default 1\r\n};\r\n\r\ntype Snapshot = {\r\n  settings: VoteSettings;\r\n  counts: Record<string, number>;\r\n  voted: Record<string, true>; // userHash->true\r\n  updatedAt: number;\r\n};\r\n\r\nexport class VotingRoom {\r\n  state: DurableObjectState;\r\n  env: Env;\r\n  snapshot: Snapshot | null = null;\r\n\r\n  constructor(state: DurableObjectState, env: Env) {\r\n    this.state = state;\r\n    this.env = env;\r\n  }\r\n\r\n  // ---- helpers ----\r\n  private keySnap(tenant: string, matchId: string) {\r\n    return `tenants:${tenant}:motm:${matchId}:snapshot`;\r\n  }\r\n  private ensure() {\r\n    if (!this.snapshot) throw new Error(\"room not initialised\");\r\n  }\r\n\r\n  // Load from storage (DO storage) or KV snapshot\r\n  private async load(tenant: string, matchId: string) {\r\n    const local = await this.state.storage.get<Snapshot>(\"snapshot\");\r\n    if (local) { this.snapshot = local; return; }\r\n    const snapKV = await this.env.KV_IDEMP.get(this.keySnap(tenant, matchId), \"json\") as Snapshot | null;\r\n    if (snapKV) {\r\n      await this.state.storage.put(\"snapshot\", snapKV);\r\n      this.snapshot = snapKV;\r\n    }\r\n  }\r\n\r\n  private async save() {\r\n    this.ensure();\r\n    this.snapshot!.updatedAt = Date.now();\r\n    await this.state.storage.put(\"snapshot\", this.snapshot);\r\n  }\r\n\r\n  private async flushToKV() {\r\n    this.ensure();\r\n    const { tenant, matchId } = this.snapshot!.settings;\r\n    await this.env.KV_IDEMP.put(this.keySnap(tenant, matchId), JSON.stringify(this.snapshot));\r\n  }\r\n\r\n  // ---- API ----\r\n  async open(settings: Omit<VoteSettings, \"open\"> & { open?: boolean }) {\r\n    await this.load(settings.tenant, settings.matchId);\r\n    const openSettings: VoteSettings = {\r\n      tenant: settings.tenant,\r\n      matchId: settings.matchId,\r\n      open: true,\r\n      candidates: settings.candidates ?? [],\r\n      maxVotesPerUser: settings.maxVotesPerUser ?? 1,\r\n    };\r\n    this.snapshot = {\r\n      settings: openSettings,\r\n      counts: Object.fromEntries((openSettings.candidates || []).map(c => [c.id, 0])),\r\n      voted: {},\r\n      updatedAt: Date.now(),\r\n    };\r\n    await this.save();\r\n    await this.flushToKV();\r\n    return { ok: true };\r\n  }\r\n\r\n  async vote(candidateId: string, userHash: string) {\r\n    this.ensure();\r\n    if (!this.snapshot!.settings.open) throw new Error(\"voting closed\");\r\n    if (this.snapshot!.voted[userHash]) throw new Error(\"already voted\");\r\n\r\n    if (!(candidateId in this.snapshot!.counts)) throw new Error(\"invalid candidate\");\r\n\r\n    // enforce simple per-user limit (1)\r\n    const limit = this.snapshot!.settings.maxVotesPerUser || 1;\r\n    // NOTE: For >1, track a counter per userHash; for now single vote\r\n    if (limit !== 1) {\r\n      // TODO: expand to counter if you later want >1 votes/user\r\n    }\r\n\r\n    this.snapshot!.counts[candidateId] += 1;\r\n    this.snapshot!.voted[userHash] = true;\r\n\r\n    await this.save();\r\n    // Light flush (don't spam KV): write-through every 5s\r\n    await this.state.storage.put(\"lastWrite\", Date.now());\r\n    const lastWrite = (await this.state.storage.get<number>(\"lastKVFlush\")) || 0;\r\n    if (Date.now() - lastWrite > 5000) {\r\n      await this.flushToKV();\r\n      await this.state.storage.put(\"lastKVFlush\", Date.now());\r\n    }\r\n    return { ok: true };\r\n  }\r\n\r\n  async tally() {\r\n    this.ensure();\r\n    return {\r\n      open: this.snapshot!.settings.open,\r\n      candidates: this.snapshot!.settings.candidates,\r\n      counts: this.snapshot!.counts,\r\n      updatedAt: this.snapshot!.updatedAt,\r\n    };\r\n  }\r\n\r\n  async close() {\r\n    this.ensure();\r\n    this.snapshot!.settings.open = false;\r\n    await this.save();\r\n    await this.flushToKV();\r\n    return { ok: true };\r\n  }\r\n\r\n  // Durable Object stub handler (if you want to call .fetch() directly)\r\n  async fetch(req: Request) {\r\n    const url = new URL(req.url);\r\n    if (req.method === \"POST\" && url.pathname.endsWith(\"/open\")) {\r\n      const s = await req.json() as any;\r\n      return Response.json(await this.open(s));\r\n    }\r\n    if (req.method === \"POST\" && url.pathname.endsWith(\"/vote\")) {\r\n      const { candidateId, userHash } = await req.json() as any;\r\n      return Response.json(await this.vote(candidateId, userHash));\r\n    }\r\n    if (req.method === \"GET\" && url.pathname.endsWith(\"/tally\")) {\r\n      return Response.json(await this.tally());\r\n    }\r\n    if (req.method === \"POST\" && url.pathname.endsWith(\"/close\")) {\r\n      return Response.json(await this.close());\r\n    }\r\n    return new Response(\"Not found\", { status: 404 });\r\n  }\r\n}\r\n", "// backend/src/do/matchRoom.ts\r\nimport type { Env } from \"../types\";\r\nimport { sendToUser } from \"../services/push\";\r\n\r\ntype MatchEvent = {\r\n  id: string;\r\n  ts: number;\r\n  type: \"goal\" | \"yellow\" | \"red\" | \"sub\" | \"ht\" | \"ft\" | \"note\";\r\n  minute?: number;\r\n  payload?: any;\r\n};\r\n\r\ntype MatchState = {\r\n  tenant: string;\r\n  matchId: string;\r\n  title?: string;\r\n  home?: string;\r\n  away?: string;\r\n  kickoffTs?: number;\r\n  timeline: MatchEvent[];\r\n  homeScore: number;\r\n  awayScore: number;\r\n  closed: boolean;\r\n  updatedAt: number;\r\n};\r\n\r\nexport class MatchRoom {\r\n  state: DurableObjectState;\r\n  env: Env;\r\n  matchState: MatchState | null = null;\r\n  lastPushTs: number = 0;\r\n\r\n  constructor(state: DurableObjectState, env: Env) {\r\n    this.state = state;\r\n    this.env = env;\r\n  }\r\n\r\n  private keySnap(tenant: string, matchId: string) {\r\n    return `tenants:${tenant}:matches:${matchId}:live`;\r\n  }\r\n\r\n  private async load(tenant: string, matchId: string) {\r\n    const local = await this.state.storage.get<MatchState>(\"state\");\r\n    if (local) {\r\n      this.matchState = local;\r\n      return;\r\n    }\r\n    const snapKV = (await this.env.KV_IDEMP.get(this.keySnap(tenant, matchId), \"json\")) as MatchState | null;\r\n    if (snapKV) {\r\n      await this.state.storage.put(\"state\", snapKV);\r\n      this.matchState = snapKV;\r\n    }\r\n  }\r\n\r\n  private async save() {\r\n    if (!this.matchState) throw new Error(\"match not initialized\");\r\n    this.matchState.updatedAt = Date.now();\r\n    await this.state.storage.put(\"state\", this.matchState);\r\n  }\r\n\r\n  private async flushToKV() {\r\n    if (!this.matchState) return;\r\n    const { tenant, matchId } = this.matchState;\r\n    await this.env.KV_IDEMP.put(this.keySnap(tenant, matchId), JSON.stringify(this.matchState));\r\n  }\r\n\r\n  private async maybePush(eventType: string, text: string) {\r\n    if (!this.matchState) return;\r\n    const now = Date.now();\r\n    // Goals: immediate; others: throttle to 1/15s\r\n    if (eventType === \"goal\" || now - this.lastPushTs > 15000) {\r\n      this.lastPushTs = now;\r\n      // Stub: send to all tokens for this tenant (in real impl, filter by team/match subscription)\r\n      try {\r\n        const tokensKey = `tenants:${this.matchState.tenant}:push:tokens`;\r\n        const tokens = ((await this.env.KV_IDEMP.get(tokensKey, \"json\")) as string[]) || [];\r\n        if (tokens.length > 0) {\r\n          // Use existing push service if available\r\n          // For now, just log (sendToUser expects userId, we have tokens)\r\n          console.log(`[MatchRoom] Would push to ${tokens.length} tokens: ${text}`);\r\n        }\r\n      } catch (e) {\r\n        console.error(\"[MatchRoom] push error:\", e);\r\n      }\r\n    }\r\n  }\r\n\r\n  async open(data: { tenant: string; matchId: string; title?: string; home?: string; away?: string; kickoffTs?: number }) {\r\n    await this.load(data.tenant, data.matchId);\r\n    this.matchState = {\r\n      tenant: data.tenant,\r\n      matchId: data.matchId,\r\n      title: data.title,\r\n      home: data.home,\r\n      away: data.away,\r\n      kickoffTs: data.kickoffTs,\r\n      timeline: [],\r\n      homeScore: 0,\r\n      awayScore: 0,\r\n      closed: false,\r\n      updatedAt: Date.now(),\r\n    };\r\n    await this.save();\r\n    await this.flushToKV();\r\n    return { ok: true };\r\n  }\r\n\r\n  async event(evt: Omit<MatchEvent, \"id\" | \"ts\">) {\r\n    if (!this.matchState) throw new Error(\"match not initialized\");\r\n    if (this.matchState.closed) throw new Error(\"match closed\");\r\n\r\n    const id = `evt_${Date.now()}_${Math.random().toString(36).slice(2, 9)}`;\r\n    const ts = Date.now();\r\n    const fullEvent: MatchEvent = { id, ts, ...evt };\r\n\r\n    // Update score if goal\r\n    if (evt.type === \"goal\" && evt.payload?.side) {\r\n      if (evt.payload.side === \"home\") this.matchState.homeScore++;\r\n      else if (evt.payload.side === \"away\") this.matchState.awayScore++;\r\n    }\r\n\r\n    this.matchState.timeline.push(fullEvent);\r\n    await this.save();\r\n\r\n    // Light flush (every 5s)\r\n    const lastKVFlush = (await this.state.storage.get<number>(\"lastKVFlush\")) || 0;\r\n    if (ts - lastKVFlush > 5000) {\r\n      await this.flushToKV();\r\n      await this.state.storage.put(\"lastKVFlush\", ts);\r\n    }\r\n\r\n    // Push notification\r\n    let pushText = `Match event: ${evt.type}`;\r\n    if (evt.type === \"goal\" && evt.payload?.scorer) {\r\n      pushText = `\u26BD Goal! ${evt.payload.scorer} (${evt.minute}')`;\r\n    }\r\n    await this.maybePush(evt.type, pushText);\r\n\r\n    return { ok: true, eventId: id };\r\n  }\r\n\r\n  async tally() {\r\n    if (!this.matchState) throw new Error(\"match not initialized\");\r\n    return {\r\n      ok: true,\r\n      data: {\r\n        matchId: this.matchState.matchId,\r\n        title: this.matchState.title,\r\n        home: this.matchState.home,\r\n        away: this.matchState.away,\r\n        homeScore: this.matchState.homeScore,\r\n        awayScore: this.matchState.awayScore,\r\n        timeline: this.matchState.timeline,\r\n        closed: this.matchState.closed,\r\n        updatedAt: this.matchState.updatedAt,\r\n      },\r\n    };\r\n  }\r\n\r\n  async close() {\r\n    if (!this.matchState) throw new Error(\"match not initialized\");\r\n    this.matchState.closed = true;\r\n    await this.save();\r\n    await this.flushToKV();\r\n    return { ok: true };\r\n  }\r\n\r\n  async fetch(req: Request) {\r\n    const url = new URL(req.url);\r\n    if (req.method === \"POST\" && url.pathname.endsWith(\"/open\")) {\r\n      const body = (await req.json()) as any;\r\n      return Response.json(await this.open(body));\r\n    }\r\n    if (req.method === \"POST\" && url.pathname.endsWith(\"/event\")) {\r\n      const body = (await req.json()) as any;\r\n      return Response.json(await this.event(body));\r\n    }\r\n    if (req.method === \"GET\" && url.pathname.endsWith(\"/tally\")) {\r\n      return Response.json(await this.tally());\r\n    }\r\n    if (req.method === \"POST\" && url.pathname.endsWith(\"/close\")) {\r\n      return Response.json(await this.close());\r\n    }\r\n    return new Response(\"Not found\", { status: 404 });\r\n  }\r\n}\r\n", "// backend/src/do/chatRoom.ts\r\nimport type { Env } from \"../types\";\r\n\r\ntype ChatMessage = {\r\n  id: string;\r\n  ts: number;\r\n  userId: string;\r\n  text: string;\r\n  media?: string[];\r\n};\r\n\r\ntype ChatState = {\r\n  tenant: string;\r\n  roomId: string;\r\n  messages: ChatMessage[];\r\n  updatedAt: number;\r\n};\r\n\r\nexport class ChatRoom {\r\n  state: DurableObjectState;\r\n  env: Env;\r\n  chatState: ChatState | null = null;\r\n  typingUsers: Map<string, number> = new Map(); // userId -> expiryTs\r\n\r\n  constructor(state: DurableObjectState, env: Env) {\r\n    this.state = state;\r\n    this.env = env;\r\n  }\r\n\r\n  private keySnap(tenant: string, roomId: string) {\r\n    return `tenants:${tenant}:chat:${roomId}:last`;\r\n  }\r\n\r\n  private keyIndex(tenant: string) {\r\n    return `tenants:${tenant}:chat:index`;\r\n  }\r\n\r\n  private async load(tenant: string, roomId: string) {\r\n    const local = await this.state.storage.get<ChatState>(\"state\");\r\n    if (local) {\r\n      this.chatState = local;\r\n      return;\r\n    }\r\n    const snapKV = (await this.env.KV_IDEMP.get(this.keySnap(tenant, roomId), \"json\")) as ChatState | null;\r\n    if (snapKV) {\r\n      await this.state.storage.put(\"state\", snapKV);\r\n      this.chatState = snapKV;\r\n    } else {\r\n      // Initialize new room\r\n      this.chatState = {\r\n        tenant,\r\n        roomId,\r\n        messages: [],\r\n        updatedAt: Date.now(),\r\n      };\r\n      await this.state.storage.put(\"state\", this.chatState);\r\n    }\r\n  }\r\n\r\n  private async save() {\r\n    if (!this.chatState) throw new Error(\"chat not initialized\");\r\n    this.chatState.updatedAt = Date.now();\r\n    await this.state.storage.put(\"state\", this.chatState);\r\n  }\r\n\r\n  private async flushToKV() {\r\n    if (!this.chatState) return;\r\n    const { tenant, roomId } = this.chatState;\r\n    // Keep last 200 messages in KV\r\n    const snapshot = {\r\n      ...this.chatState,\r\n      messages: this.chatState.messages.slice(-200),\r\n    };\r\n    await this.env.KV_IDEMP.put(this.keySnap(tenant, roomId), JSON.stringify(snapshot));\r\n\r\n    // Update rooms index\r\n    const indexKey = this.keyIndex(tenant);\r\n    const existing = ((await this.env.KV_IDEMP.get(indexKey, \"json\")) as any[]) || [];\r\n    const row = { roomId, lastTs: this.chatState.updatedAt };\r\n    const next = [row, ...existing.filter((r) => r.roomId !== roomId)];\r\n    await this.env.KV_IDEMP.put(indexKey, JSON.stringify(next.slice(0, 1000)));\r\n  }\r\n\r\n  async send(data: { tenant: string; roomId: string; userId: string; text: string; mediaIds?: string[] }) {\r\n    await this.load(data.tenant, data.roomId);\r\n    if (!this.chatState) throw new Error(\"chat not initialized\");\r\n\r\n    // Simple bad-words filter (optional)\r\n    const badWords = [\"badword1\", \"badword2\"]; // extend as needed\r\n    let filtered = data.text;\r\n    for (const word of badWords) {\r\n      filtered = filtered.replace(new RegExp(word, \"gi\"), \"***\");\r\n    }\r\n\r\n    const id = `msg_${Date.now()}_${Math.random().toString(36).slice(2, 9)}`;\r\n    const ts = Date.now();\r\n    const msg: ChatMessage = {\r\n      id,\r\n      ts,\r\n      userId: data.userId,\r\n      text: filtered,\r\n      media: data.mediaIds,\r\n    };\r\n\r\n    this.chatState.messages.push(msg);\r\n    // Keep last 500 in memory\r\n    if (this.chatState.messages.length > 500) {\r\n      this.chatState.messages = this.chatState.messages.slice(-500);\r\n    }\r\n\r\n    await this.save();\r\n\r\n    // Flush to KV every 5s\r\n    const lastKVFlush = (await this.state.storage.get<number>(\"lastKVFlush\")) || 0;\r\n    if (ts - lastKVFlush > 5000) {\r\n      await this.flushToKV();\r\n      await this.state.storage.put(\"lastKVFlush\", ts);\r\n    }\r\n\r\n    return { ok: true, messageId: id };\r\n  }\r\n\r\n  async history(data: { tenant: string; roomId: string; cursor?: string; limit?: number }) {\r\n    await this.load(data.tenant, data.roomId);\r\n    if (!this.chatState) throw new Error(\"chat not initialized\");\r\n\r\n    const limit = data.limit || 50;\r\n    let messages = [...this.chatState.messages];\r\n\r\n    // Simple cursor: timestamp-based\r\n    if (data.cursor) {\r\n      const cursorTs = parseInt(data.cursor, 10);\r\n      messages = messages.filter((m) => m.ts < cursorTs);\r\n    }\r\n\r\n    // Return newest first\r\n    messages.sort((a, b) => b.ts - a.ts);\r\n    const page = messages.slice(0, limit);\r\n    const nextCursor = page.length > 0 ? String(page[page.length - 1].ts) : null;\r\n\r\n    return {\r\n      ok: true,\r\n      data: {\r\n        messages: page,\r\n        nextCursor,\r\n      },\r\n    };\r\n  }\r\n\r\n  async typing(data: { tenant: string; roomId: string; userId: string; typing: boolean }) {\r\n    await this.load(data.tenant, data.roomId);\r\n    if (!this.chatState) throw new Error(\"chat not initialized\");\r\n\r\n    const now = Date.now();\r\n    if (data.typing) {\r\n      this.typingUsers.set(data.userId, now + 10000); // 10s TTL\r\n    } else {\r\n      this.typingUsers.delete(data.userId);\r\n    }\r\n\r\n    // Clean expired\r\n    for (const [userId, expiryTs] of this.typingUsers.entries()) {\r\n      if (now > expiryTs) this.typingUsers.delete(userId);\r\n    }\r\n\r\n    return { ok: true, typing: Array.from(this.typingUsers.keys()) };\r\n  }\r\n\r\n  async fetch(req: Request) {\r\n    const url = new URL(req.url);\r\n    if (req.method === \"POST\" && url.pathname.endsWith(\"/send\")) {\r\n      const body = (await req.json()) as any;\r\n      return Response.json(await this.send(body));\r\n    }\r\n    if (req.method === \"GET\" && url.pathname.endsWith(\"/history\")) {\r\n      const tenant = url.searchParams.get(\"tenant\") || \"\";\r\n      const roomId = url.searchParams.get(\"roomId\") || \"\";\r\n      const cursor = url.searchParams.get(\"cursor\") || undefined;\r\n      const limit = parseInt(url.searchParams.get(\"limit\") || \"50\", 10);\r\n      return Response.json(await this.history({ tenant, roomId, cursor, limit }));\r\n    }\r\n    if (req.method === \"POST\" && url.pathname.endsWith(\"/typing\")) {\r\n      const body = (await req.json()) as any;\r\n      return Response.json(await this.typing(body));\r\n    }\r\n    return new Response(\"Not found\", { status: 404 });\r\n  }\r\n}\r\n", "// backend/src/do/geoFenceManager.ts\r\nimport type { Env } from \"../types\";\r\n\r\ninterface UserLocation {\r\n  token: string;\r\n  latitude: number;\r\n  longitude: number;\r\n  timestamp: number;\r\n}\r\n\r\ninterface VenueLocation {\r\n  latitude: number;\r\n  longitude: number;\r\n}\r\n\r\ninterface GeoFenceState {\r\n  tenant: string;\r\n  matchId: string;\r\n  venueLocation?: VenueLocation;\r\n  userLocations: Map<string, UserLocation>; // token -> location\r\n  lastCleanup: number;\r\n}\r\n\r\nexport class GeoFenceManager {\r\n  state: DurableObjectState;\r\n  env: Env;\r\n  geoState: GeoFenceState | null = null;\r\n\r\n  constructor(state: DurableObjectState, env: Env) {\r\n    this.state = state;\r\n    this.env = env;\r\n  }\r\n\r\n  private async load() {\r\n    const stored = await this.state.storage.get<GeoFenceState>(\"geoState\");\r\n    if (stored) {\r\n      // Convert plain object to Map\r\n      this.geoState = {\r\n        ...stored,\r\n        userLocations: new Map(Object.entries(stored.userLocations || {})),\r\n      };\r\n    }\r\n  }\r\n\r\n  private async save() {\r\n    if (!this.geoState) return;\r\n\r\n    // Convert Map to plain object for storage\r\n    const toStore = {\r\n      ...this.geoState,\r\n      userLocations: Object.fromEntries(this.geoState.userLocations),\r\n    };\r\n\r\n    await this.state.storage.put(\"geoState\", toStore);\r\n  }\r\n\r\n  /**\r\n   * Initialize geo-fence for a match\r\n   */\r\n  async init(data: { tenant: string; matchId: string; venueLatitude?: number; venueLongitude?: number }) {\r\n    await this.load();\r\n\r\n    this.geoState = {\r\n      tenant: data.tenant,\r\n      matchId: data.matchId,\r\n      venueLocation: data.venueLatitude && data.venueLongitude\r\n        ? { latitude: data.venueLatitude, longitude: data.venueLongitude }\r\n        : undefined,\r\n      userLocations: new Map(),\r\n      lastCleanup: Date.now(),\r\n    };\r\n\r\n    await this.save();\r\n    return { ok: true };\r\n  }\r\n\r\n  /**\r\n   * Update user location\r\n   */\r\n  async updateLocation(data: { token: string; latitude: number; longitude: number }) {\r\n    await this.load();\r\n\r\n    if (!this.geoState) {\r\n      throw new Error(\"Geo-fence not initialized\");\r\n    }\r\n\r\n    const location: UserLocation = {\r\n      token: data.token,\r\n      latitude: data.latitude,\r\n      longitude: data.longitude,\r\n      timestamp: Date.now(),\r\n    };\r\n\r\n    this.geoState.userLocations.set(data.token, location);\r\n    await this.save();\r\n\r\n    // Cleanup old locations every 5 minutes\r\n    if (Date.now() - this.geoState.lastCleanup > 300000) {\r\n      await this.cleanupOldLocations();\r\n    }\r\n\r\n    return { ok: true };\r\n  }\r\n\r\n  /**\r\n   * Set venue location\r\n   */\r\n  async setVenue(data: { latitude: number; longitude: number }) {\r\n    await this.load();\r\n\r\n    if (!this.geoState) {\r\n      throw new Error(\"Geo-fence not initialized\");\r\n    }\r\n\r\n    this.geoState.venueLocation = {\r\n      latitude: data.latitude,\r\n      longitude: data.longitude,\r\n    };\r\n\r\n    await this.save();\r\n    return { ok: true };\r\n  }\r\n\r\n  /**\r\n   * Get tokens of users who should receive notification (>500m from venue)\r\n   */\r\n  async getNotificationTokens(): Promise<string[]> {\r\n    await this.load();\r\n\r\n    if (!this.geoState || !this.geoState.venueLocation) {\r\n      // If no venue location set, send to all users\r\n      return Array.from(this.geoState?.userLocations.keys() || []);\r\n    }\r\n\r\n    const tokens: string[] = [];\r\n    const venue = this.geoState.venueLocation;\r\n\r\n    for (const [token, userLoc] of this.geoState.userLocations.entries()) {\r\n      const distance = this.calculateDistance(\r\n        userLoc.latitude,\r\n        userLoc.longitude,\r\n        venue.latitude,\r\n        venue.longitude\r\n      );\r\n\r\n      // Only send to users > 500m away\r\n      if (distance > 500) {\r\n        tokens.push(token);\r\n      } else {\r\n        console.log(`[GeoFence] User ${token} is at venue (${distance.toFixed(0)}m), skipping notification`);\r\n      }\r\n    }\r\n\r\n    return tokens;\r\n  }\r\n\r\n  /**\r\n   * Calculate distance between two coordinates (Haversine formula)\r\n   * Returns distance in meters\r\n   */\r\n  private calculateDistance(lat1: number, lon1: number, lat2: number, lon2: number): number {\r\n    const R = 6371e3; // Earth radius in meters\r\n    const \u03C61 = (lat1 * Math.PI) / 180;\r\n    const \u03C62 = (lat2 * Math.PI) / 180;\r\n    const \u0394\u03C6 = ((lat2 - lat1) * Math.PI) / 180;\r\n    const \u0394\u03BB = ((lon2 - lon1) * Math.PI) / 180;\r\n\r\n    const a =\r\n      Math.sin(\u0394\u03C6 / 2) * Math.sin(\u0394\u03C6 / 2) +\r\n      Math.cos(\u03C61) * Math.cos(\u03C62) * Math.sin(\u0394\u03BB / 2) * Math.sin(\u0394\u03BB / 2);\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\r\n    return R * c;\r\n  }\r\n\r\n  /**\r\n   * Clean up locations older than 10 minutes\r\n   */\r\n  private async cleanupOldLocations() {\r\n    if (!this.geoState) return;\r\n\r\n    const now = Date.now();\r\n    const maxAge = 600000; // 10 minutes\r\n\r\n    for (const [token, location] of this.geoState.userLocations.entries()) {\r\n      if (now - location.timestamp > maxAge) {\r\n        this.geoState.userLocations.delete(token);\r\n        console.log(`[GeoFence] Removed stale location for token ${token}`);\r\n      }\r\n    }\r\n\r\n    this.geoState.lastCleanup = now;\r\n    await this.save();\r\n  }\r\n\r\n  /**\r\n   * Get current state (for debugging)\r\n   */\r\n  async getState() {\r\n    await this.load();\r\n\r\n    if (!this.geoState) {\r\n      return { ok: false, error: \"Not initialized\" };\r\n    }\r\n\r\n    return {\r\n      ok: true,\r\n      data: {\r\n        tenant: this.geoState.tenant,\r\n        matchId: this.geoState.matchId,\r\n        venueLocation: this.geoState.venueLocation,\r\n        userCount: this.geoState.userLocations.size,\r\n        users: Array.from(this.geoState.userLocations.values()).map((loc) => ({\r\n          latitude: loc.latitude,\r\n          longitude: loc.longitude,\r\n          timestamp: loc.timestamp,\r\n          age: Date.now() - loc.timestamp,\r\n        })),\r\n      },\r\n    };\r\n  }\r\n\r\n  async fetch(req: Request) {\r\n    const url = new URL(req.url);\r\n\r\n    if (req.method === \"POST\" && url.pathname.endsWith(\"/init\")) {\r\n      const body = (await req.json()) as any;\r\n      return Response.json(await this.init(body));\r\n    }\r\n\r\n    if (req.method === \"POST\" && url.pathname.endsWith(\"/location\")) {\r\n      const body = (await req.json()) as any;\r\n      return Response.json(await this.updateLocation(body));\r\n    }\r\n\r\n    if (req.method === \"POST\" && url.pathname.endsWith(\"/venue\")) {\r\n      const body = (await req.json()) as any;\r\n      return Response.json(await this.setVenue(body));\r\n    }\r\n\r\n    if (req.method === \"GET\" && url.pathname.endsWith(\"/tokens\")) {\r\n      const tokens = await this.getNotificationTokens();\r\n      return Response.json({ ok: true, tokens });\r\n    }\r\n\r\n    if (req.method === \"GET\" && url.pathname.endsWith(\"/state\")) {\r\n      return Response.json(await this.getState());\r\n    }\r\n\r\n    return new Response(\"Not found\", { status: 404 });\r\n  }\r\n}\r\n", "// backend/src/do/provisioner.ts\r\n// Cloudflare Durable Object for tenant provisioning (idempotent, checkpointed)\r\n\r\nimport type { Env } from '../types';\r\n\r\ntype StepStatus = 'pending'|'running'|'completed'|'failed';\r\nexport type ProvisioningStep =\r\n  | 'seedDefaultContent'\r\n  | 'configureRouting'\r\n  | 'validateWebhook'   // Starter\r\n  | 'deployAutomations' // Pro\r\n  | 'deployAppsScript'  // Pro\r\n  | 'sendOwnerEmails'\r\n  | 'markReady';\r\n\r\nexport interface ProvisioningCheckpoint {\r\n  step: ProvisioningStep;\r\n  status: StepStatus;\r\n  startedAt?: number;\r\n  completedAt?: number;\r\n  error?: string;\r\n  retryCount?: number;\r\n}\r\n\r\nexport interface ProvisioningState {\r\n  tenantId: string;\r\n  plan: 'starter'|'pro';\r\n  currentStep: ProvisioningStep|null;\r\n  checkpoints: Record<ProvisioningStep, ProvisioningCheckpoint>;\r\n  status: 'idle'|'running'|'completed'|'failed';\r\n  startedAt?: number;\r\n  completedAt?: number;\r\n  error?: string;\r\n}\r\n\r\nconst COMMON: ProvisioningStep[] = ['seedDefaultContent','configureRouting'];\r\nconst ORDER_STARTER: ProvisioningStep[] = [...COMMON,'validateWebhook','sendOwnerEmails','markReady'];\r\nconst ORDER_PRO:     ProvisioningStep[] = [...COMMON,'deployAutomations','deployAppsScript','sendOwnerEmails','markReady'];\r\n\r\nexport class Provisioner {\r\n  private storage: DurableObjectStorage;\r\n  private env: Env;\r\n  private stateCache: ProvisioningState | null = null;\r\n\r\n  constructor(state: DurableObjectState, env: Env) {\r\n    this.storage = state.storage;\r\n    this.env = env;\r\n  }\r\n\r\n  // ---- persistence helpers ----\r\n  private async loadState(tenantId: string, plan: 'starter'|'pro') {\r\n    if (this.stateCache) return;\r\n    const stored = await this.storage.get<ProvisioningState>('state');\r\n    if (stored) {\r\n      this.stateCache = stored;\r\n      return;\r\n    }\r\n    const order = plan === 'starter' ? ORDER_STARTER : ORDER_PRO;\r\n    const checkpoints = {} as Record<ProvisioningStep, ProvisioningCheckpoint>;\r\n    for (const step of order) checkpoints[step] = { step, status: 'pending' };\r\n    this.stateCache = { tenantId, plan, currentStep: null, checkpoints, status: 'idle' };\r\n    await this.saveState();\r\n  }\r\n  private async saveState() { if (this.stateCache) await this.storage.put('state', this.stateCache); }\r\n  private get order() { return this.stateCache!.plan === 'starter' ? ORDER_STARTER : ORDER_PRO; }\r\n  private nextStep(): ProvisioningStep | null {\r\n    for (const s of this.order) if (this.stateCache!.checkpoints[s].status !== 'completed') return s;\r\n    return null;\r\n  }\r\n  private async markStart(step: ProvisioningStep) {\r\n    this.stateCache!.currentStep = step;\r\n    const cp = this.stateCache!.checkpoints[step];\r\n    this.stateCache!.checkpoints[step] = { ...cp, status: 'running', startedAt: Date.now() };\r\n    await this.saveState();\r\n  }\r\n  private async markDone(step: ProvisioningStep) {\r\n    const cp = this.stateCache!.checkpoints[step];\r\n    this.stateCache!.checkpoints[step] = { ...cp, status: 'completed', completedAt: Date.now() };\r\n    await this.saveState();\r\n  }\r\n  private async markFail(step: ProvisioningStep, err: string) {\r\n    const cp = this.stateCache!.checkpoints[step];\r\n    this.stateCache!.checkpoints[step] = { ...cp, status: 'failed', error: err, retryCount: (cp.retryCount ?? 0) + 1 };\r\n    await this.saveState();\r\n  }\r\n\r\n  // ---- steps ----\r\n  private async step_seedDefaultContent() {\r\n    const t = this.stateCache!.tenantId;\r\n    // Welcome post\r\n    await this.env.DB.prepare(\r\n      `INSERT INTO feed_posts (id, tenant_id, title, content, author, created_at, updated_at)\r\n       VALUES (?, ?, ?, ?, ?, ?, ?)`\r\n    ).bind(`post_${crypto.randomUUID()}`, t, 'Welcome to Your Club Platform! \uD83C\uDF89',\r\n      'Your platform is ready. Start by adding fixtures and news.',\r\n      'System', Date.now(), Date.now()).run();\r\n\r\n    // Example fixture in 7 days\r\n    const nextWeek = Date.now() + 7*24*3600*1000;\r\n    await this.env.DB.prepare(\r\n      `INSERT INTO fixtures (id, tenant_id, home_team, away_team, venue, kick_off, status, created_at)\r\n       VALUES (?, ?, ?, ?, ?, ?, ?, ?)`\r\n    ).bind(`fixture_${crypto.randomUUID()}`, t, 'Home Team', 'Away Team', 'Home Ground',\r\n      nextWeek, 'scheduled', Date.now()).run();\r\n  }\r\n\r\n  private async step_configureRouting() {\r\n    const t = this.stateCache!.tenantId;\r\n    await this.env.DB.prepare(`UPDATE tenants SET route_ready = 1, updated_at = ? WHERE id = ?`)\r\n      .bind(Date.now(), t).run();\r\n  }\r\n\r\n  private async step_validateWebhook() {\r\n    const t = this.stateCache!.tenantId;\r\n    const row = await this.env.DB.prepare(\r\n      `SELECT webhook_url, webhook_secret FROM make_connections WHERE tenant_id = ?`\r\n    ).bind(t).first<{ webhook_url: string; webhook_secret: string }>();\r\n    if (!row) throw new Error('Make.com connection not found');\r\n\r\n    const ts = Date.now().toString();\r\n    const sig = await this.hmac(row.webhook_secret, `HEAD:${ts}`);\r\n    const res = await fetch(row.webhook_url, { method: 'HEAD', headers: { 'X-Signature': sig, 'X-Timestamp': ts }});\r\n    if (!res.ok && res.status !== 405) throw new Error(`Webhook validation status ${res.status}`);\r\n\r\n    await this.env.DB.prepare(\r\n      `UPDATE make_connections SET validated_at = ?, updated_at = ? WHERE tenant_id = ?`\r\n    ).bind(Date.now(), Date.now(), t).run();\r\n  }\r\n\r\n  private async step_deployAutomations() {\r\n    const t = this.stateCache!.tenantId;\r\n    const kvNamespace = `tenant_${t.replace(/^tenant_/, '')}`;\r\n    await this.env.DB.prepare(\r\n      `UPDATE pro_automation SET kv_namespace = ?, cron_schedule = ?, updated_at = ? WHERE tenant_id = ?`\r\n    ).bind(kvNamespace, '0 */6 * * *', Date.now(), t).run();\r\n  }\r\n\r\n  private async step_deployAppsScript() {\r\n    if (this.env.APPS_SCRIPT_AUTO_DEPLOY !== 'true') return;\r\n    const t = this.stateCache!.tenantId;\r\n    const job = `deploy_${crypto.randomUUID()}`;\r\n    await this.env.DB.prepare(\r\n      `UPDATE pro_automation\r\n         SET apps_script_deploy_job_id = ?, apps_script_deploy_status = ?, updated_at = ?\r\n       WHERE tenant_id = ?`\r\n    ).bind(job, 'ready', Date.now(), t).run();\r\n  }\r\n\r\n  private async step_sendOwnerEmails() {\r\n    const t = this.stateCache!.tenantId;\r\n    const tenant = await this.env.DB.prepare(\r\n      `SELECT id, slug, name, email FROM tenants WHERE id = ?`\r\n    ).bind(t).first<{ id:string; slug:string; name:string; email:string }>();\r\n    if (!tenant) throw new Error('Tenant not found');\r\n\r\n    const token = await this.magicToken(t, tenant.email);\r\n    const link = `${this.env.ADMIN_CONSOLE_URL}/admin/onboard?token=${token}`;\r\n    // TODO: integrate real email provider; for now, just record timestamp\r\n    await this.env.DB.prepare(`UPDATE tenants SET owner_email_sent_at = ?, updated_at = ? WHERE id = ?`)\r\n      .bind(Date.now(), Date.now(), t).run();\r\n    console.log(`[Provisioner] Magic link for ${tenant.email}: ${link}`);\r\n  }\r\n\r\n  private async step_markReady() {\r\n    const t = this.stateCache!.tenantId;\r\n    await this.env.DB.prepare(\r\n      `UPDATE tenants SET status = 'active', provisioned_at = ?, updated_at = ? WHERE id = ?`\r\n    ).bind(Date.now(), Date.now(), t).run();\r\n  }\r\n\r\n  // ---- runner ----\r\n  private async runAll() {\r\n    this.stateCache!.status = 'running';\r\n    this.stateCache!.startedAt ??= Date.now();\r\n    await this.saveState();\r\n\r\n    try {\r\n      let step = this.nextStep();\r\n      while (step) {\r\n        await this.markStart(step);\r\n        try {\r\n          switch (step) {\r\n            case 'seedDefaultContent':  await this.step_seedDefaultContent(); break;\r\n            case 'configureRouting':    await this.step_configureRouting();   break;\r\n            case 'validateWebhook':     await this.step_validateWebhook();    break;\r\n            case 'deployAutomations':   await this.step_deployAutomations();  break;\r\n            case 'deployAppsScript':    await this.step_deployAppsScript();   break;\r\n            case 'sendOwnerEmails':     await this.step_sendOwnerEmails();    break;\r\n            case 'markReady':           await this.step_markReady();          break;\r\n          }\r\n          await this.markDone(step);\r\n        } catch (e:any) {\r\n          await this.markFail(step, e?.message ?? String(e));\r\n          throw e;\r\n        }\r\n        step = this.nextStep();\r\n      }\r\n      this.stateCache!.status = 'completed';\r\n      this.stateCache!.completedAt = Date.now();\r\n      this.stateCache!.currentStep = null;\r\n      await this.saveState();\r\n    } catch (e) {\r\n      this.stateCache!.status = 'failed';\r\n      this.stateCache!.error = (e as any)?.message ?? String(e);\r\n      await this.saveState();\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  // ---- crypto helpers ----\r\n  private async hmac(secret: string, data: string) {\r\n    const enc = new TextEncoder();\r\n    const key = await crypto.subtle.importKey('raw', enc.encode(secret), { name:'HMAC', hash:'SHA-256' }, false, ['sign']);\r\n    const sig = await crypto.subtle.sign('HMAC', key, enc.encode(data));\r\n    return [...new Uint8Array(sig)].map(b => b.toString(16).padStart(2,'0')).join('');\r\n  }\r\n\r\n  private async magicToken(tenantId: string, email: string) {\r\n    const enc = new TextEncoder();\r\n    const header  = btoa(JSON.stringify({ alg:'HS256', typ:'JWT' })).replace(/=+$/,'');\r\n    const payload = btoa(JSON.stringify({\r\n      iss: this.env.JWT_ISSUER || 'syston.app',\r\n      aud: this.env.JWT_AUDIENCE || 'syston-admin',\r\n      sub: email, tenantId, type:'magic_link', roles:['owner','admin'],\r\n      iat: Math.floor(Date.now()/1000),\r\n      exp: Math.floor(Date.now()/1000) + 24*3600\r\n    })).replace(/=+$/,'');\r\n    const data = `${header}.${payload}`;\r\n    const key = await crypto.subtle.importKey('raw', enc.encode(this.env.JWT_SECRET), {name:'HMAC', hash:'SHA-256'}, false,['sign']);\r\n    const sig = await crypto.subtle.sign('HMAC', key, enc.encode(data));\r\n    const b64 = btoa(String.fromCharCode(...new Uint8Array(sig))).replace(/\\+/g,'-').replace(/\\//g,'_').replace(/=+$/,'');\r\n    return `${data}.${b64}`;\r\n  }\r\n\r\n  // ---- HTTP endpoints on the DO ----\r\n  async fetch(req: Request) {\r\n    const url = new URL(req.url);\r\n\r\n    if (req.method === 'POST' && url.pathname === '/queue') {\r\n      const { tenantId, plan } = await req.json() as { tenantId: string; plan: 'starter'|'pro' };\r\n      await this.loadState(tenantId, plan);\r\n      // if already running/completed, just return state\r\n      return Response.json({ success:true, state: this.stateCache });\r\n    }\r\n\r\n    if (req.method === 'POST' && url.pathname === '/run') {\r\n      const { tenantId, plan } = await req.json() as { tenantId: string; plan: 'starter'|'pro' };\r\n      await this.loadState(tenantId, plan);\r\n      // fire and forget\r\n      (async () => { await this.runAll(); })();\r\n      return Response.json({ success:true, state: this.stateCache });\r\n    }\r\n\r\n    if (req.method === 'GET' && url.pathname === '/status') {\r\n      if (!this.stateCache) return Response.json({ success:true, state:null });\r\n      return Response.json({ success:true, state: this.stateCache });\r\n    }\r\n\r\n    if (req.method === 'POST' && url.pathname === '/retry') {\r\n      const { tenantId, plan } = await req.json() as { tenantId: string; plan: 'starter'|'pro' };\r\n      await this.loadState(tenantId, plan);\r\n      // reset failed steps to pending\r\n      for (const s of this.order) if (this.stateCache!.checkpoints[s].status === 'failed') {\r\n        this.stateCache!.checkpoints[s].status = 'pending';\r\n        this.stateCache!.checkpoints[s].error = undefined;\r\n      }\r\n      this.stateCache!.status = 'idle';\r\n      await this.saveState();\r\n      return Response.json({ success:true, state:this.stateCache });\r\n    }\r\n\r\n    return new Response('Not found', { status: 404 });\r\n  }\r\n}\r\n"],
  "mappings": "oLAuBO,SAASA,EAA0BC,EAAM,CAC/C,OAAO,IAAI,MAAM,WAAWA,CAAI,0BAA0B,CAC3D,CAEO,SAASC,GAAeD,EAAM,CAIpC,OAAO,OAAO,OAHHE,EAAA,IAAM,CAChB,MAAMH,EAA0BC,CAAI,CACrC,EAFW,MAGc,CAAE,UAAW,EAAK,CAAC,CAC7C,CASO,SAASG,GAAoBH,EAAM,CACzC,OAAO,KAAM,CACZ,UAAY,GACZ,aAAc,CACb,MAAM,IAAI,MAAM,WAAWA,CAAI,0BAA0B,CAC1D,CACD,CACD,CAhDA,IAAAI,GAAAC,EAAA,KAAAC,IAAAC,IAAAC,IAuBgBN,EAAAH,EAAA,6BAIAG,EAAAD,GAAA,kBAcAC,EAAAC,GAAA,yBCzChB,IACMM,GACAC,GACAC,GAuBOC,GAyBAC,GAWAC,GAIAC,GAyBAC,GAaAC,GA4FAC,GAmCAC,GAvObC,GAAAC,EAAA,KAAAC,IAAAC,IAAAH,IAAAI,KACMf,GAAc,WAAW,aAAa,YAAc,KAAK,IAAI,EAC7DC,GAAkB,WAAW,aAAa,IAAM,WAAW,YAAY,IAAI,KAAK,WAAW,WAAW,EAAI,IAAM,KAAK,IAAI,EAAID,GAC7HE,GAAa,CAClB,KAAM,OACN,UAAW,OACX,UAAW,EACX,SAAU,EACV,UAAW,EACX,QAAS,EACT,kBAAmB,EACnB,YAAa,EACb,UAAW,EACX,SAAU,EACV,SAAU,EACV,cAAe,CACd,UAAW,EACX,OAAQ,EACR,cAAe,CAChB,EACA,OAAQ,OACR,QAAS,CACR,OAAO,IACR,CACD,EAEaC,GAAN,KAAuB,CA1B9B,MA0B8B,CAAAa,EAAA,yBAC7B,UAAY,GACZ,OACA,UAAY,QACZ,KACA,UACA,YAAYC,EAAMC,EAAS,CAC1B,KAAK,KAAOD,EACZ,KAAK,UAAYC,GAAS,WAAajB,GAAgB,EACvD,KAAK,OAASiB,GAAS,MACxB,CACA,IAAI,UAAW,CACd,OAAOjB,GAAgB,EAAI,KAAK,SACjC,CACA,QAAS,CACR,MAAO,CACN,KAAM,KAAK,KACX,UAAW,KAAK,UAChB,UAAW,KAAK,UAChB,SAAU,KAAK,SACf,OAAQ,KAAK,MACd,CACD,CACD,EAEaG,GAAkB,cAA8BD,EAAiB,CAnD9E,MAmD8E,CAAAa,EAAA,wBAC7E,UAAY,OACZ,aAAc,CAEb,MAAM,GAAG,SAAS,CACnB,CACA,IAAI,UAAW,CACd,MAAO,EACR,CACD,EAEaX,GAAN,cAAiCF,EAAiB,CA9DzD,MA8DyD,CAAAa,EAAA,2BACxD,UAAY,SACb,EAEaV,GAAN,cAAwCH,EAAiB,CAlEhE,MAkEgE,CAAAa,EAAA,kCAC/D,UAAY,WACZ,aAAe,CAAC,EAChB,WAAa,EACb,aAAe,EACf,gBAAkB,EAClB,gBAAkB,EAClB,kBAAoB,EACpB,gBAAkB,EAClB,WAAa,EACb,cAAgB,GAChB,KAAO,GACP,gBAAkB,GAClB,YAAc,EACd,cAAgB,EAChB,aAAe,EACf,YAAc,EACd,cAAgB,EAChB,sBAAwB,EACxB,UAAY,EACZ,aAAe,EACf,YAAc,EACd,eAAiB,CAClB,EAEaT,GAAN,KAAmC,CA3F1C,MA2F0C,CAAAS,EAAA,qCACzC,UAAY,GACZ,YAAa,CACZ,MAAO,CAAC,CACT,CACA,iBAAiBG,EAAOC,EAAO,CAC9B,MAAO,CAAC,CACT,CACA,iBAAiBC,EAAM,CACtB,MAAO,CAAC,CACT,CACD,EAEab,GAAN,KAAkB,CAxGzB,MAwGyB,CAAAQ,EAAA,oBACxB,UAAY,GACZ,WAAahB,GACb,YAAc,IAAI,IAClB,SAAW,CAAC,EACZ,0BAA4B,EAC5B,WAAa,OACb,OAAS,OACT,SAASsB,EAAKC,EAAU,CACvB,MAAMC,EAA0B,sBAAsB,CACvD,CACA,IAAI,YAAa,CAChB,OAAOtB,EACR,CACA,sBAAuB,CACtB,MAAO,CAAC,CACT,CACA,oBAAqB,CAIpB,OAAO,IAAII,GAA0B,EAAE,CACxC,CACA,2BAA6B,KAC7B,KAAM,CAEL,OAAI,KAAK,aAAeN,GAChBC,GAAgB,EAEjB,KAAK,IAAI,EAAI,KAAK,UAC1B,CACA,WAAWwB,EAAU,CACpB,KAAK,SAAWA,EAAW,KAAK,SAAS,OAAQC,GAAMA,EAAE,OAASD,CAAQ,EAAI,KAAK,SAAS,OAAQC,GAAMA,EAAE,YAAc,MAAM,CACjI,CACA,cAAcC,EAAa,CAC1B,KAAK,SAAWA,EAAc,KAAK,SAAS,OAAQD,GAAMA,EAAE,OAASC,CAAW,EAAI,KAAK,SAAS,OAAQD,GAAMA,EAAE,YAAc,SAAS,CAC1I,CACA,sBAAuB,CACtB,KAAK,SAAW,KAAK,SAAS,OAAQ,GAAM,EAAE,YAAc,YAAc,EAAE,YAAc,YAAY,CACvG,CACA,YAAa,CACZ,OAAO,KAAK,QACb,CACA,iBAAiBT,EAAMI,EAAM,CAC5B,OAAO,KAAK,SAAS,OAAQK,GAAMA,EAAE,OAAST,IAAS,CAACI,GAAQK,EAAE,YAAcL,EAAK,CACtF,CACA,iBAAiBA,EAAM,CACtB,OAAO,KAAK,SAAS,OAAQK,GAAMA,EAAE,YAAcL,CAAI,CACxD,CACA,KAAKJ,EAAMC,EAAS,CAEnB,IAAMU,EAAQ,IAAIxB,GAAgBa,EAAMC,CAAO,EAC/C,YAAK,SAAS,KAAKU,CAAK,EACjBA,CACR,CACA,QAAQD,EAAaE,EAAuBC,EAAS,CACpD,IAAIC,EACAC,EACA,OAAOH,GAA0B,UACpCE,EAAQ,KAAK,iBAAiBF,EAAuB,MAAM,EAAE,CAAC,GAAG,UACjEG,EAAM,KAAK,iBAAiBF,EAAS,MAAM,EAAE,CAAC,GAAG,YAEjDC,EAAQ,OAAO,WAAWF,GAAuB,KAAK,GAAK,KAAK,IAAI,EACpEG,EAAM,OAAO,WAAWH,GAAuB,GAAG,GAAK,KAAK,IAAI,GAEjE,IAAMD,EAAQ,IAAIvB,GAAmBsB,EAAa,CACjD,UAAWI,EACX,OAAQ,CACP,MAAAA,EACA,IAAAC,CACD,CACD,CAAC,EACD,YAAK,SAAS,KAAKJ,CAAK,EACjBA,CACR,CACA,4BAA4BK,EAAS,CACpC,KAAK,0BAA4BA,CAClC,CACA,iBAAiBZ,EAAMa,EAAUhB,EAAS,CACzC,MAAMM,EAA0B,8BAA8B,CAC/D,CACA,oBAAoBH,EAAMa,EAAUhB,EAAS,CAC5C,MAAMM,EAA0B,iCAAiC,CAClE,CACA,cAAcW,EAAO,CACpB,MAAMX,EAA0B,2BAA2B,CAC5D,CACA,QAAS,CACR,OAAO,IACR,CACD,EAEaf,GAAN,KAA0B,CApMjC,MAoMiC,CAAAO,EAAA,4BAChC,UAAY,GACZ,OAAO,oBAAsB,CAAC,EAC9B,UAAY,KACZ,YAAYoB,EAAU,CACrB,KAAK,UAAYA,CAClB,CACA,aAAc,CACb,MAAO,CAAC,CACT,CACA,YAAa,CACZ,MAAMZ,EAA0B,gCAAgC,CACjE,CACA,QAAQN,EAAS,CAChB,MAAMM,EAA0B,6BAA6B,CAC9D,CACA,KAAKa,EAAI,CACR,OAAOA,CACR,CACA,gBAAgBA,EAAIC,KAAYC,EAAM,CACrC,OAAOF,EAAG,KAAKC,EAAS,GAAGC,CAAI,CAChC,CACA,SAAU,CACT,MAAO,EACR,CACA,gBAAiB,CAChB,MAAO,EACR,CACA,aAAc,CACb,OAAO,IACR,CACD,EAIa7B,GAAc,WAAW,aAAe,qBAAsB,WAAW,YAAc,WAAW,YAAc,IAAIF,KCvOjI,IAAAgC,GAAAC,EAAA,KAAAC,IAAAC,IAAAC,IAEAA,OCFA,IAAAC,EAAAC,EAAA,KAAAC,KAUA,WAAW,YAAcC,GACzB,WAAW,YAAcC,GACzB,WAAW,iBAAmBC,GAC9B,WAAW,gBAAkBC,GAC7B,WAAW,mBAAqBC,GAChC,WAAW,oBAAsBC,GACjC,WAAW,6BAA+BC,GAC1C,WAAW,0BAA4BC,KCjBvC,IAAOC,EAAPC,GAAAC,EAAA,KAAAC,IAAAC,IAAAC,IAAOL,EAAQ,OAAO,OAAO,IAAM,CAAC,EAAG,CAAE,UAAW,EAAK,CAAC,ICA1D,OAAS,YAAAM,OAAgB,cAAzB,IAGMC,EAEOC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAEAC,GAGAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAKAC,GACAC,GAxCbC,GAAAC,EAAA,KAAAC,IAAAC,IAAAC,IACAC,KACAC,KACMpC,EAAW,WAAW,QAEfC,GAAgB,GAChBC,GAAU,IAAIH,GACdI,GAAU,IAAIJ,GACdK,GAAMJ,GAAU,KAAOqC,EACvBhC,GAAOL,GAAU,MAAQI,GACzBE,GAAQN,GAAU,OAASK,GAC3BE,GAAQP,GAAU,OAASI,GAC3BI,GAAQR,GAAU,OAASI,GAC3BK,GAAQT,GAAU,OAASI,GAC3BM,GAAOV,GAAU,MAAQS,GAEzBE,GAAaX,GAAU,YAA8BsC,GAAe,oBAAoB,EAGxF1B,GAAQZ,GAAU,OAASqC,EAC3BxB,GAAQb,GAAU,OAASqC,EAC3BvB,GAAad,GAAU,YAAcqC,EACrCtB,GAAMf,GAAU,KAAOqC,EACvBrB,GAAShB,GAAU,QAAUqC,EAC7BpB,GAAQjB,GAAU,OAASqC,EAC3BnB,GAAWlB,GAAU,UAAYqC,EACjClB,GAAiBnB,GAAU,gBAAkBqC,EAC7CjB,GAAUpB,GAAU,SAAWqC,EAC/BhB,GAAarB,GAAU,YAAcqC,EACrCf,GAAOtB,GAAU,MAAQqC,EACzBd,GAAUvB,GAAU,SAAWqC,EAC/Bb,GAAUxB,GAAU,SAAWqC,EAC/BZ,GAAYzB,GAAU,WAAaqC,EACnCX,GAAU1B,GAAU,SAA2BuC,GAAoB,iBAAiB,EACpFZ,GAAyB,IAAI,IAK7BC,GAAsBS,EACtBR,GAAsBQ,ICxCnC,IAkBMG,GAEJC,GACAC,GAEAC,GACAC,GACAC,GAEAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAWKC,GAxDPC,GAAAC,EAAA,KAAAC,IAAAC,IAAAC,IAAAJ,KAkBM1B,GAAiB,WAAW,QACrB,CACX,OAAAC,GACA,MAAAC,GAEA,QAAAC,GACA,MAAAC,GACA,WAAAC,GAEA,WAAAC,GACA,MAAAC,GACA,IAAAC,GACA,OAAAC,GACA,MAAAC,GACA,MAAAC,GACA,eAAAC,GACA,SAAAC,GACA,KAAAC,GACA,IAAAC,GACA,QAAAC,GACA,WAAAC,GACA,MAAAC,GACA,KAAAC,GACA,QAAAC,GACA,QAAAC,GACA,UAAAC,GACA,MAAAC,GACA,KAAAC,IACExB,GACJ,OAAO,OAAOA,GAAgB,CAC5B,QAAA+B,GACA,cAAAC,GACA,QAAAC,GACA,oBAAAC,GACA,QAAAC,GACA,oBAAAC,GACA,OAAAC,EACF,CAAC,EACMZ,GAAQzB,KCxDf,IAAAsC,EAAAC,EAAA,KAAAC,KACA,WAAW,QAAUC,KCDrB,IACaC,GADbC,GAAAC,EAAA,KAAAC,IAAAC,IAAAC,IACaL,GAAyB,OAAO,OAAOM,EAAA,SAAgBC,EAAW,CAC9E,IAAMC,EAAM,KAAK,IAAI,EAEfC,EAAU,KAAK,MAAMD,EAAM,GAAG,EAE9BE,EAAQF,EAAM,IAAM,IAC1B,GAAID,EAAW,CACd,IAAII,EAAcF,EAAUF,EAAU,CAAC,EACnCK,EAAYF,EAAQH,EAAU,CAAC,EACnC,OAAIK,EAAY,IACfD,EAAcA,EAAc,EAC5BC,EAAY,IAAMA,GAEZ,CAACD,EAAaC,CAAS,CAC/B,CACA,MAAO,CAACH,EAASC,CAAK,CACvB,EAhBoD,UAgBjD,CAAE,OAAQJ,EAAA,UAAkB,CAE9B,OAAO,OAAO,KAAK,IAAI,EAAI,GAAG,CAC/B,EAHa,SAGX,CAAC,ICpBH,IAAaO,GAAbC,GAAAC,EAAA,KAAAC,IAAAC,IAAAC,IAAaL,GAAN,KAAiB,CAAxB,MAAwB,CAAAM,EAAA,mBACvB,GACA,MAAQ,GACR,MAAQ,GACR,YAAYC,EAAI,CACf,KAAK,GAAKA,CACX,CACA,WAAWC,EAAM,CAChB,YAAK,MAAQA,EACN,IACR,CACD,ICXA,IAAaC,GAAbC,GAAAC,EAAA,KAAAC,IAAAC,IAAAC,IAAaL,GAAN,KAAkB,CAAzB,MAAyB,CAAAM,EAAA,oBACxB,GACA,QAAU,GACV,KAAO,GACP,MAAQ,GACR,YAAYC,EAAI,CACf,KAAK,GAAKA,CACX,CACA,UAAUC,EAAKC,EAAU,CACxB,OAAAA,GAAYA,EAAS,EACd,EACR,CACA,gBAAgBA,EAAU,CACzB,OAAAA,GAAYA,EAAS,EACd,EACR,CACA,SAASC,EAAGC,EAAGF,EAAU,CACxB,OAAAA,GAAY,OAAOA,GAAa,YAAcA,EAAS,EAChD,EACR,CACA,WAAWG,EAAIC,EAAIJ,EAAU,CAC5B,OAAAA,GAAYA,EAAS,EACd,EACR,CACA,cAAcK,EAAK,CAClB,MAAO,EACR,CACA,UAAUC,EAAOD,EAAK,CACrB,MAAO,EACR,CACA,eAAgB,CACf,MAAO,CAAC,KAAK,QAAS,KAAK,IAAI,CAChC,CACA,MAAME,EAAKC,EAAUC,EAAI,CACpBF,aAAe,aAClBA,EAAM,IAAI,YAAY,EAAE,OAAOA,CAAG,GAEnC,GAAI,CACH,QAAQ,IAAIA,CAAG,CAChB,MAAQ,CAAC,CACT,OAAAE,GAAM,OAAOA,GAAO,YAAcA,EAAG,EAC9B,EACR,CACD,IC3CA,IAAAC,GAAAC,EAAA,KAAAC,IAAAC,IAAAC,IAEAC,KACAC,OCHA,IACaC,GADbC,GAAAC,EAAA,KAAAC,IAAAC,IAAAC,IACaL,GAAe,YCD5B,OAAS,gBAAAM,OAAoB,cAA7B,IAKaC,GALbC,GAAAC,EAAA,KAAAC,IAAAC,IAAAC,IACAC,KACAC,KAEAC,KACaR,GAAN,MAAMS,UAAgBV,EAAa,CAL1C,MAK0C,CAAAW,EAAA,gBACzC,IACA,OACA,SACA,YAAYC,EAAM,CACjB,MAAM,EACN,KAAK,IAAMA,EAAK,IAChB,KAAK,OAASA,EAAK,OACnB,KAAK,SAAWA,EAAK,SACrB,QAAWC,IAAQ,CAAC,GAAG,OAAO,oBAAoBH,EAAQ,SAAS,EAAG,GAAG,OAAO,oBAAoBV,GAAa,SAAS,CAAC,EAAG,CAC7H,IAAMc,EAAQ,KAAKD,CAAI,EACnB,OAAOC,GAAU,aACpB,KAAKD,CAAI,EAAIC,EAAM,KAAK,IAAI,EAE9B,CACD,CAEA,YAAYC,EAASC,EAAMC,EAAM,CAChC,QAAQ,KAAK,GAAGA,EAAO,IAAIA,CAAI,KAAO,EAAE,GAAGD,EAAO,GAAGA,CAAI,KAAO,EAAE,GAAGD,CAAO,EAAE,CAC/E,CACA,QAAQG,EAAM,CAEb,OAAO,MAAM,KAAK,GAAGA,CAAI,CAC1B,CACA,UAAUC,EAAW,CACpB,OAAO,MAAM,UAAUA,CAAS,CACjC,CAEAC,GACAC,GACAC,GACA,IAAI,OAAQ,CACX,OAAO,KAAKF,KAAW,IAAIG,GAAW,CAAC,CACxC,CACA,IAAI,QAAS,CACZ,OAAO,KAAKF,KAAY,IAAIG,GAAY,CAAC,CAC1C,CACA,IAAI,QAAS,CACZ,OAAO,KAAKF,KAAY,IAAIE,GAAY,CAAC,CAC1C,CAEAC,GAAO,IACP,MAAMC,EAAK,CACV,KAAKD,GAAOC,CACb,CACA,KAAM,CACL,OAAO,KAAKD,EACb,CAEA,KAAO,GACP,SAAW,GACX,KAAO,CAAC,EACR,MAAQ,GACR,SAAW,CAAC,EACZ,SAAW,GACX,MAAQ,GACR,IAAM,IACN,KAAO,IACP,IAAI,SAAU,CACb,MAAO,IAAIE,EAAY,EACxB,CACA,IAAI,UAAW,CACd,MAAO,CAAE,KAAMA,EAAa,CAC7B,CACA,IAAI,6BAA8B,CACjC,OAAO,IAAI,GACZ,CACA,IAAI,mBAAoB,CACvB,MAAO,EACR,CACA,IAAI,WAAY,CACf,MAAO,EACR,CACA,IAAI,kBAAmB,CACtB,MAAO,EACR,CACA,IAAI,kBAAmB,CACtB,MAAO,EACR,CACA,IAAI,UAAW,CACd,MAAO,CAAC,CACT,CACA,IAAI,SAAU,CACb,MAAO,CAAC,CACT,CACA,IAAI,WAAY,CACf,MAAO,EACR,CACA,IAAI,QAAS,CACZ,MAAO,CAAC,CACT,CACA,IAAI,gBAAiB,CACpB,MAAO,CAAC,CACT,CACA,mBAAoB,CACnB,MAAO,EACR,CACA,iBAAkB,CACjB,MAAO,EACR,CACA,QAAS,CACR,MAAO,EACR,CACA,eAAgB,CACf,MAAO,CAAC,CACT,CAEA,KAAM,CAEN,CACA,OAAQ,CAER,CAEA,OAAQ,CACP,MAAMC,EAA0B,eAAe,CAChD,CACA,kBAAmB,CAEnB,CACA,wBAAyB,CACxB,MAAMA,EAA0B,gCAAgC,CACjE,CACA,MAAO,CACN,MAAMA,EAA0B,cAAc,CAC/C,CACA,YAAa,CACZ,MAAMA,EAA0B,oBAAoB,CACrD,CACA,MAAO,CACN,MAAMA,EAA0B,cAAc,CAC/C,CACA,OAAQ,CACP,MAAMA,EAA0B,eAAe,CAChD,CACA,QAAS,CACR,MAAMA,EAA0B,gBAAgB,CACjD,CACA,sBAAuB,CACtB,MAAMA,EAA0B,8BAA8B,CAC/D,CACA,aAAc,CACb,MAAMA,EAA0B,qBAAqB,CACtD,CACA,YAAa,CACZ,MAAMA,EAA0B,oBAAoB,CACrD,CACA,UAAW,CACV,MAAMA,EAA0B,kBAAkB,CACnD,CACA,qCAAsC,CACrC,MAAMA,EAA0B,6CAA6C,CAC9E,CACA,qCAAsC,CACrC,MAAMA,EAA0B,6CAA6C,CAC9E,CACA,YAAa,CACZ,MAAMA,EAA0B,oBAAoB,CACrD,CACA,WAAY,CACX,MAAMA,EAA0B,mBAAmB,CACpD,CACA,QAAS,CACR,MAAMA,EAA0B,gBAAgB,CACjD,CACA,SAAU,CACT,MAAMA,EAA0B,iBAAiB,CAClD,CAEA,WAAa,CAAE,IAAqBC,GAAe,wBAAwB,CAAE,EAC7E,OAAS,CACR,UAAW,GACX,SAAU,GACV,OAAQ,UACR,QAAS,GACT,mBAAoB,GACpB,eAAgB,GAChB,0BAA2B,GAC3B,UAA2BA,GAAe,0BAA0B,EACpE,YAA6BA,GAAe,4BAA4B,CACzE,EACA,aAAe,CACd,SAA0BA,GAAe,+BAA+B,EACxE,WAA4BA,GAAe,iCAAiC,EAC5E,mBAAoCA,GAAe,yCAAyC,CAC7F,EACA,YAAc,OAAO,OAAO,KAAO,CAClC,aAAc,EACd,IAAK,EACL,SAAU,EACV,UAAW,EACX,SAAU,CACX,GAAI,CAAE,IAAKlB,EAAA,IAAM,EAAN,MAAQ,CAAC,EAEpB,WAAa,OACb,OAAS,OAET,KAAO,OACP,SAAW,OACX,QAAU,OACV,QAAU,OACV,QAAU,OACV,OAAS,OACT,UAAY,OACZ,OAAS,OACT,QAAU,OACV,QAAU,OACV,OAAS,OACT,UAAY,OACZ,OAAS,OAET,QAAU,OACV,aAAe,OACf,SAAW,OACX,cAAgB,OAChB,UAAY,OACZ,cAAgB,OAChB,gBAAkB,OAClB,kBAAoB,OACpB,mBAAqB,OACrB,MAAQ,OACR,iBAAmB,OACnB,UAAY,OACZ,2BAA6B,OAC7B,0BAA4B,OAC5B,cAAgB,OAChB,YAAc,OACd,aAAe,OACf,gBAAkB,OAClB,SAAW,OACX,MAAQ,OACR,eAAiB,MAClB,IC7OA,IAEMmjQPC,GAAAC,EAAA,KAAAC,IAAAC,IAAAC,IAAAC,KACAL,KACMnH,GAAgB,WAAW,QACpBC,GAAmBD,GAAc,iBACxCE,GAAiBD,GAAiB,cAAc,EAChDE,GAAqB,WAAW,WAAW,mBAAmB,yBAC9DC,GAAe,IAAIqH,GAAa,CACpC,IAAKzH,GAAc,IAEnB,OAAQG,GAAqBD,GAAe,OAASO,GAErD,SAAUP,GAAe,QAC3B,CAAC,EACY,CAAE,KAAAG,GAAM,SAAAC,GAAU,SAAAC,IAAaL,GAC/B,CAEX,IAAAM,GAEA,OAAAC,GAEA,SAAAC,IACEN,GACS,CACX,SAAAO,GACA,YAAAC,GACA,QAAAC,GACA,aAAAC,GACA,aAAAC,GACA,cAAAC,GACA,gBAAAC,GACA,MAAAC,GACA,OAAAC,GACA,WAAAC,GACA,WAAAC,IACEjB,GACS,CAEX,UAAAkB,GAEA,cAAAC,GAEA,SAAAC,GAEA,gBAAAC,GAEA,kBAAAC,GAEA,mBAAAC,GAEA,MAAAC,GAEA,eAAAC,GAEA,iBAAAC,GAEA,UAAAC,GAEA,2BAAAC,GAEA,0BAAAC,GAEA,cAAAC,GACA,MAAAC,GACA,YAAAC,GACA,4BAAAC,GACA,KAAAC,GACA,KAAAC,GACA,MAAAC,GACA,gBAAAC,GAEA,QAAAC,GACA,QAAAC,GACA,MAAAC,GACA,OAAAC,GACA,UAAAC,GACA,kBAAAC,GACA,SAAAC,GACA,IAAAC,GACA,UAAAC,GACA,OAAAC,GAEA,OAAAC,GACA,KAAAC,GACA,YAAAC,GACA,WAAAC,GACA,SAAAC,GACA,SAAAC,GACA,SAAAC,GACA,aAAAC,GACA,uBAAAC,GACA,QAAAC,GACA,QAAAC,GACA,OAAAC,GACA,UAAAC,GACA,gBAAAC,GACA,OAAAC,GACA,oCAAAC,GAEA,WAAAC,GACA,KAAAC,GACA,cAAAC,GACA,UAAAC,GACA,YAAAC,GACA,YAAAC,GAEA,eAAAC,GACA,IAAAC,GACA,GAAAC,GACA,KAAAC,GAEA,UAAAC,GACA,WAAAC,GACA,IAAAC,GACA,KAAAC,GACA,gBAAAC,GACA,oBAAAC,GACA,aAAAC,GAEA,WAAAC,GACA,IAAAC,GACA,QAAAC,GACA,mBAAAC,GACA,eAAAC,GACA,OAAAC,GACA,cAAAC,GACA,KAAAC,GACA,QAAAC,GACA,QAAAC,GACA,OAAAC,GACA,UAAAC,GACA,gBAAAC,GACA,qBAAAC,GACA,OAAAC,GACA,oCAAAC,GACA,kBAAAC,GACA,OAAAC,GACA,MAAAC,GACA,OAAAC,GACA,iBAAAC,GACA,MAAAC,GACA,iBAAAC,GACA,MAAAC,GACA,MAAAC,GACA,OAAAC,GACA,QAAAC,GACA,SAAAC,IACE7G,GAAqBD,GAAiBE,GACpC6G,GAAW,CACf,MAAA9E,GACA,YAAAC,GACA,4BAAAC,GACA,oCAAA8B,GACA,oCAAAiC,GACA,YAAA5B,GACA,kBAAA6B,GACA,KAAA/D,GACA,KAAAC,GACA,MAAAC,GACA,MAAAI,GACA,OAAAC,GACA,UAAAC,GACA,kBAAAC,GACA,gBAAAN,GACA,SAAAO,GACA,IAAAC,GACA,UAAAC,GACA,OAAAC,GACA,WAAA/B,GACA,KAAAiC,GACA,YAAAC,GACA,IAAA9C,GACA,WAAA+C,GACA,SAAAC,GACA,SAAAC,GACA,KAAApD,GACA,aAAAsD,GACA,SAAArD,GACA,iBAAAL,GACA,uBAAA2D,GACA,gBAAAK,GACA,OAAAxD,GACA,KAAA4D,GACA,UAAAE,GACA,cAAAD,GACA,YAAAG,GACA,SAAA/D,GACA,GAAAkE,GACA,IAAAD,GACA,KAAAE,GACA,IAAAG,GACA,SAAAzE,GACA,KAAA0E,GACA,gBAAAC,GACA,oBAAAC,GACA,aAAAC,GACA,QAAAG,GACA,mBAAAC,GACA,eAAAC,GACA,OAAAC,GACA,cAAAC,GACA,gBAAAM,GACA,qBAAAC,GACA,OAAAI,GACA,MAAAC,GACA,OAAAC,GACA,MAAAE,GACA,iBAAAD,GACA,iBAAAE,GACA,MAAAC,GACA,OAAAE,GACA,QAAAC,GACA,SAAAC,GAEA,OAAA5D,GACA,WAAAgB,GACA,eAAAM,GACA,WAAAW,GACA,UAAAP,GACA,OAAA3D,GACA,QAAAuB,GACA,KAAAkD,GACA,SAAAlC,GACA,QAAAf,GACA,QAAAkB,GACA,QAAAC,GACA,OAAAC,GACA,UAAAC,GACA,OAAAE,GACA,QAAA2B,GACA,QAAAC,GACA,OAAAC,GACA,UAAAC,GACA,OAAAG,GACA,WAAApB,GACA,WAAA1D,GACA,QAAAR,GACA,aAAAC,GACA,SAAAU,GACA,cAAAR,GACA,UAAAM,GACA,cAAAC,GACA,gBAAAE,GACA,kBAAAC,GACA,mBAAAC,GACA,MAAAC,GACA,iBAAAE,GACA,UAAAC,GACA,2BAAAC,GACA,0BAAAC,GACA,cAAAC,GACA,YAAAtB,GACA,aAAAG,GACA,gBAAAE,GACA,SAAAN,GACA,MAAAO,GACA,eAAAW,EACF,EACOqF,GAAQD,KCjQf,IAAAS,EAAAC,EAAA,KAAAC,KACA,WAAW,QAAUC,KCDrB,IAAWC,EA6DAC,GASEC,EAsBAC,GA5FbC,GAAAC,EAAA,KAAAC,IAAAC,IAAAC,KACC,SAAUR,EAAM,CACbA,EAAK,YAAeS,GAAM,CAAE,EAC5B,SAASC,EAASC,EAAM,CAAE,CAAjBC,EAAAF,EAAA,YACTV,EAAK,SAAWU,EAChB,SAASG,EAAYC,EAAI,CACrB,MAAM,IAAI,KACd,CAFSF,EAAAC,EAAA,eAGTb,EAAK,YAAca,EACnBb,EAAK,YAAee,GAAU,CAC1B,IAAMC,EAAM,CAAC,EACb,QAAWC,KAAQF,EACfC,EAAIC,CAAI,EAAIA,EAEhB,OAAOD,CACX,EACAhB,EAAK,mBAAsBgB,GAAQ,CAC/B,IAAME,EAAYlB,EAAK,WAAWgB,CAAG,EAAE,OAAQG,GAAM,OAAOH,EAAIA,EAAIG,CAAC,CAAC,GAAM,QAAQ,EAC9EC,EAAW,CAAC,EAClB,QAAWD,KAAKD,EACZE,EAASD,CAAC,EAAIH,EAAIG,CAAC,EAEvB,OAAOnB,EAAK,aAAaoB,CAAQ,CACrC,EACApB,EAAK,aAAgBgB,GACVhB,EAAK,WAAWgB,CAAG,EAAE,IAAI,SAAUK,EAAG,CACzC,OAAOL,EAAIK,CAAC,CAChB,CAAC,EAELrB,EAAK,WAAa,OAAO,OAAO,MAAS,WAClCgB,GAAQ,OAAO,KAAKA,CAAG,EACvBM,GAAW,CACV,IAAMC,EAAO,CAAC,EACd,QAAWC,KAAOF,EACV,OAAO,UAAU,eAAe,KAAKA,EAAQE,CAAG,GAChDD,EAAK,KAAKC,CAAG,EAGrB,OAAOD,CACX,EACJvB,EAAK,KAAO,CAACyB,EAAKC,IAAY,CAC1B,QAAWT,KAAQQ,EACf,GAAIC,EAAQT,CAAI,EACZ,OAAOA,CAGnB,EACAjB,EAAK,UAAY,OAAO,OAAO,WAAc,WACtC2B,GAAQ,OAAO,UAAUA,CAAG,EAC5BA,GAAQ,OAAOA,GAAQ,UAAY,OAAO,SAASA,CAAG,GAAK,KAAK,MAAMA,CAAG,IAAMA,EACtF,SAASC,EAAWC,EAAOC,EAAY,MAAO,CAC1C,OAAOD,EAAM,IAAKF,GAAS,OAAOA,GAAQ,SAAW,IAAIA,CAAG,IAAMA,CAAI,EAAE,KAAKG,CAAS,CAC1F,CAFSlB,EAAAgB,EAAA,cAGT5B,EAAK,WAAa4B,EAClB5B,EAAK,sBAAwB,CAACS,EAAGsB,IACzB,OAAOA,GAAU,SACVA,EAAM,SAAS,EAEnBA,CAEf,GAAG/B,IAASA,EAAO,CAAC,EAAE,GAErB,SAAUC,EAAY,CACnBA,EAAW,YAAc,CAAC+B,EAAOC,KACtB,CACH,GAAGD,EACH,GAAGC,CACP,EAER,GAAGhC,KAAeA,GAAa,CAAC,EAAE,EACrBC,EAAgBF,EAAK,YAAY,CAC1C,SACA,MACA,SACA,UACA,QACA,UACA,OACA,SACA,SACA,WACA,YACA,OACA,QACA,SACA,UACA,UACA,OACA,QACA,MACA,KACJ,CAAC,EACYG,GAAgBS,EAACsB,GAAS,CAEnC,OADU,OAAOA,EACN,CACP,IAAK,YACD,OAAOhC,EAAc,UACzB,IAAK,SACD,OAAOA,EAAc,OACzB,IAAK,SACD,OAAO,OAAO,MAAMgC,CAAI,EAAIhC,EAAc,IAAMA,EAAc,OAClE,IAAK,UACD,OAAOA,EAAc,QACzB,IAAK,WACD,OAAOA,EAAc,SACzB,IAAK,SACD,OAAOA,EAAc,OACzB,IAAK,SACD,OAAOA,EAAc,OACzB,IAAK,SACD,OAAI,MAAM,QAAQgC,CAAI,EACXhC,EAAc,MAErBgC,IAAS,KACFhC,EAAc,KAErBgC,EAAK,MAAQ,OAAOA,EAAK,MAAS,YAAcA,EAAK,OAAS,OAAOA,EAAK,OAAU,WAC7EhC,EAAc,QAErB,OAAO,IAAQ,KAAegC,aAAgB,IACvChC,EAAc,IAErB,OAAO,IAAQ,KAAegC,aAAgB,IACvChC,EAAc,IAErB,OAAO,KAAS,KAAegC,aAAgB,KACxChC,EAAc,KAElBA,EAAc,OACzB,QACI,OAAOA,EAAc,OAC7B,CACJ,EAxC6B,mBC5F7B,IACaiC,EAkBAC,GAIAC,EAvBbC,GAAAC,EAAA,KAAAC,IAAAC,IAAAC,IAAAC,KACaR,EAAeS,EAAK,YAAY,CACzC,eACA,kBACA,SACA,gBACA,8BACA,qBACA,oBACA,oBACA,sBACA,eACA,iBACA,YACA,UACA,6BACA,kBACA,YACJ,CAAC,EACYR,GAAgBS,EAACC,GACb,KAAK,UAAUA,EAAK,KAAM,CAAC,EAC5B,QAAQ,cAAe,KAAK,EAFf,iBAIhBT,EAAN,MAAMU,UAAiB,KAAM,CAvBpC,MAuBoC,CAAAF,EAAA,iBAChC,IAAI,QAAS,CACT,OAAO,KAAK,MAChB,CACA,YAAYG,EAAQ,CAChB,MAAM,EACN,KAAK,OAAS,CAAC,EACf,KAAK,SAAYC,GAAQ,CACrB,KAAK,OAAS,CAAC,GAAG,KAAK,OAAQA,CAAG,CACtC,EACA,KAAK,UAAY,CAACC,EAAO,CAAC,IAAM,CAC5B,KAAK,OAAS,CAAC,GAAG,KAAK,OAAQ,GAAGA,CAAI,CAC1C,EACA,IAAMC,EAAc,WAAW,UAC3B,OAAO,eAEP,OAAO,eAAe,KAAMA,CAAW,EAGvC,KAAK,UAAYA,EAErB,KAAK,KAAO,WACZ,KAAK,OAASH,CAClB,CACA,OAAOI,EAAS,CACZ,IAAMC,EAASD,GACX,SAAUE,EAAO,CACb,OAAOA,EAAM,OACjB,EACEC,EAAc,CAAE,QAAS,CAAC,CAAE,EAC5BC,EAAeX,EAACY,GAAU,CAC5B,QAAWH,KAASG,EAAM,OACtB,GAAIH,EAAM,OAAS,gBACfA,EAAM,YAAY,IAAIE,CAAY,UAE7BF,EAAM,OAAS,sBACpBE,EAAaF,EAAM,eAAe,UAE7BA,EAAM,OAAS,oBACpBE,EAAaF,EAAM,cAAc,UAE5BA,EAAM,KAAK,SAAW,EAC3BC,EAAY,QAAQ,KAAKF,EAAOC,CAAK,CAAC,MAErC,CACD,IAAII,EAAOH,EACPI,EAAI,EACR,KAAOA,EAAIL,EAAM,KAAK,QAAQ,CAC1B,IAAMM,EAAKN,EAAM,KAAKK,CAAC,EACNA,IAAML,EAAM,KAAK,OAAS,GAYvCI,EAAKE,CAAE,EAAIF,EAAKE,CAAE,GAAK,CAAE,QAAS,CAAC,CAAE,EACrCF,EAAKE,CAAE,EAAE,QAAQ,KAAKP,EAAOC,CAAK,CAAC,GAXnCI,EAAKE,CAAE,EAAIF,EAAKE,CAAE,GAAK,CAAE,QAAS,CAAC,CAAE,EAazCF,EAAOA,EAAKE,CAAE,EACdD,GACJ,CACJ,CAER,EAvCqB,gBAwCrB,OAAAH,EAAa,IAAI,EACVD,CACX,CACA,OAAO,OAAOM,EAAO,CACjB,GAAI,EAAEA,aAAiBd,GACnB,MAAM,IAAI,MAAM,mBAAmBc,CAAK,EAAE,CAElD,CACA,UAAW,CACP,OAAO,KAAK,OAChB,CACA,IAAI,SAAU,CACV,OAAO,KAAK,UAAU,KAAK,OAAQjB,EAAK,sBAAuB,CAAC,CACpE,CACA,IAAI,SAAU,CACV,OAAO,KAAK,OAAO,SAAW,CAClC,CACA,QAAQS,EAAUC,GAAUA,EAAM,QAAS,CACvC,IAAMC,EAAc,CAAC,EACfO,EAAa,CAAC,EACpB,QAAWb,KAAO,KAAK,OACnB,GAAIA,EAAI,KAAK,OAAS,EAAG,CACrB,IAAMc,EAAUd,EAAI,KAAK,CAAC,EAC1BM,EAAYQ,CAAO,EAAIR,EAAYQ,CAAO,GAAK,CAAC,EAChDR,EAAYQ,CAAO,EAAE,KAAKV,EAAOJ,CAAG,CAAC,CACzC,MAEIa,EAAW,KAAKT,EAAOJ,CAAG,CAAC,EAGnC,MAAO,CAAE,WAAAa,EAAY,YAAAP,CAAY,CACrC,CACA,IAAI,YAAa,CACb,OAAO,KAAK,QAAQ,CACxB,CACJ,EACAlB,EAAS,OAAUW,GACD,IAAIX,EAASW,CAAM,IClIrC,IAEMgB,GA0GCC,GA5GPC,GAAAC,EAAA,KAAAC,IAAAC,IAAAC,IAAAC,KACAC,KACMR,GAAWS,EAAA,CAACC,EAAOC,IAAS,CAC9B,IAAIC,EACJ,OAAQF,EAAM,KAAM,CAChB,KAAKG,EAAa,aACVH,EAAM,WAAaI,EAAc,UACjCF,EAAU,WAGVA,EAAU,YAAYF,EAAM,QAAQ,cAAcA,EAAM,QAAQ,GAEpE,MACJ,KAAKG,EAAa,gBACdD,EAAU,mCAAmC,KAAK,UAAUF,EAAM,SAAUK,EAAK,qBAAqB,CAAC,GACvG,MACJ,KAAKF,EAAa,kBACdD,EAAU,kCAAkCG,EAAK,WAAWL,EAAM,KAAM,IAAI,CAAC,GAC7E,MACJ,KAAKG,EAAa,cACdD,EAAU,gBACV,MACJ,KAAKC,EAAa,4BACdD,EAAU,yCAAyCG,EAAK,WAAWL,EAAM,OAAO,CAAC,GACjF,MACJ,KAAKG,EAAa,mBACdD,EAAU,gCAAgCG,EAAK,WAAWL,EAAM,OAAO,CAAC,eAAeA,EAAM,QAAQ,IACrG,MACJ,KAAKG,EAAa,kBACdD,EAAU,6BACV,MACJ,KAAKC,EAAa,oBACdD,EAAU,+BACV,MACJ,KAAKC,EAAa,aACdD,EAAU,eACV,MACJ,KAAKC,EAAa,eACV,OAAOH,EAAM,YAAe,SACxB,aAAcA,EAAM,YACpBE,EAAU,gCAAgCF,EAAM,WAAW,QAAQ,IAC/D,OAAOA,EAAM,WAAW,UAAa,WACrCE,EAAU,GAAGA,CAAO,sDAAsDF,EAAM,WAAW,QAAQ,KAGlG,eAAgBA,EAAM,WAC3BE,EAAU,mCAAmCF,EAAM,WAAW,UAAU,IAEnE,aAAcA,EAAM,WACzBE,EAAU,iCAAiCF,EAAM,WAAW,QAAQ,IAGpEK,EAAK,YAAYL,EAAM,UAAU,EAGhCA,EAAM,aAAe,QAC1BE,EAAU,WAAWF,EAAM,UAAU,GAGrCE,EAAU,UAEd,MACJ,KAAKC,EAAa,UACVH,EAAM,OAAS,QACfE,EAAU,sBAAsBF,EAAM,MAAQ,UAAYA,EAAM,UAAY,WAAa,WAAW,IAAIA,EAAM,OAAO,cAChHA,EAAM,OAAS,SACpBE,EAAU,uBAAuBF,EAAM,MAAQ,UAAYA,EAAM,UAAY,WAAa,MAAM,IAAIA,EAAM,OAAO,gBAC5GA,EAAM,OAAS,SACpBE,EAAU,kBAAkBF,EAAM,MAAQ,oBAAsBA,EAAM,UAAY,4BAA8B,eAAe,GAAGA,EAAM,OAAO,GAC1IA,EAAM,OAAS,SACpBE,EAAU,kBAAkBF,EAAM,MAAQ,oBAAsBA,EAAM,UAAY,4BAA8B,eAAe,GAAGA,EAAM,OAAO,GAC1IA,EAAM,OAAS,OACpBE,EAAU,gBAAgBF,EAAM,MAAQ,oBAAsBA,EAAM,UAAY,4BAA8B,eAAe,GAAG,IAAI,KAAK,OAAOA,EAAM,OAAO,CAAC,CAAC,GAE/JE,EAAU,gBACd,MACJ,KAAKC,EAAa,QACVH,EAAM,OAAS,QACfE,EAAU,sBAAsBF,EAAM,MAAQ,UAAYA,EAAM,UAAY,UAAY,WAAW,IAAIA,EAAM,OAAO,cAC/GA,EAAM,OAAS,SACpBE,EAAU,uBAAuBF,EAAM,MAAQ,UAAYA,EAAM,UAAY,UAAY,OAAO,IAAIA,EAAM,OAAO,gBAC5GA,EAAM,OAAS,SACpBE,EAAU,kBAAkBF,EAAM,MAAQ,UAAYA,EAAM,UAAY,wBAA0B,WAAW,IAAIA,EAAM,OAAO,GACzHA,EAAM,OAAS,SACpBE,EAAU,kBAAkBF,EAAM,MAAQ,UAAYA,EAAM,UAAY,wBAA0B,WAAW,IAAIA,EAAM,OAAO,GACzHA,EAAM,OAAS,OACpBE,EAAU,gBAAgBF,EAAM,MAAQ,UAAYA,EAAM,UAAY,2BAA6B,cAAc,IAAI,IAAI,KAAK,OAAOA,EAAM,OAAO,CAAC,CAAC,GAEpJE,EAAU,gBACd,MACJ,KAAKC,EAAa,OACdD,EAAU,gBACV,MACJ,KAAKC,EAAa,2BACdD,EAAU,2CACV,MACJ,KAAKC,EAAa,gBACdD,EAAU,gCAAgCF,EAAM,UAAU,GAC1D,MACJ,KAAKG,EAAa,WACdD,EAAU,wBACV,MACJ,QACIA,EAAUD,EAAK,aACfI,EAAK,YAAYL,CAAK,CAC9B,CACA,MAAO,CAAE,QAAAE,CAAQ,CACrB,EAzGiB,YA0GVX,GAAQD,KCzGR,SAASgB,GAAYC,EAAK,CAC7BC,GAAmBD,CACvB,CACO,SAASE,IAAc,CAC1B,OAAOD,EACX,CARA,IACIA,GADJE,GAAAC,EAAA,KAAAC,IAAAC,IAAAC,IAAAC,KACIP,GAAmBQ,GAEPC,EAAAX,GAAA,eAGAW,EAAAR,GAAA,iBCyBT,SAASS,EAAkBC,EAAKC,EAAW,CAC9C,IAAMC,EAAcC,GAAY,EAC1BC,EAAQC,GAAU,CACpB,UAAWJ,EACX,KAAMD,EAAI,KACV,KAAMA,EAAI,KACV,UAAW,CACPA,EAAI,OAAO,mBACXA,EAAI,eACJE,EACAA,IAAgBI,GAAkB,OAAYA,EAClD,EAAE,OAAQC,GAAM,CAAC,CAACA,CAAC,CACvB,CAAC,EACDP,EAAI,OAAO,OAAO,KAAKI,CAAK,CAChC,CA7CA,IAEaC,GA4BAG,GAgBAC,EAsDAC,EAGAC,GACAC,EACAC,GACAC,GACAC,GACAC,GA5GbC,GAAAC,EAAA,KAAAC,IAAAC,IAAAC,IAAAC,KACAC,KACalB,GAAYmB,EAACC,GAAW,CACjC,GAAM,CAAE,KAAAC,EAAM,KAAAC,EAAM,UAAAC,EAAW,UAAA3B,CAAU,EAAIwB,EACvCI,EAAW,CAAC,GAAGF,EAAM,GAAI1B,EAAU,MAAQ,CAAC,CAAE,EAC9C6B,EAAY,CACd,GAAG7B,EACH,KAAM4B,CACV,EACA,GAAI5B,EAAU,UAAY,OACtB,MAAO,CACH,GAAGA,EACH,KAAM4B,EACN,QAAS5B,EAAU,OACvB,EAEJ,IAAI8B,EAAe,GACbC,EAAOJ,EACR,OAAQK,GAAM,CAAC,CAACA,CAAC,EACjB,MAAM,EACN,QAAQ,EACb,QAAWC,KAAOF,EACdD,EAAeG,EAAIJ,EAAW,CAAE,KAAAJ,EAAM,aAAcK,CAAa,CAAC,EAAE,QAExE,MAAO,CACH,GAAG9B,EACH,KAAM4B,EACN,QAASE,CACb,CACJ,EA3ByB,aA4BZvB,GAAa,CAAC,EACXgB,EAAAzB,EAAA,qBAeHU,EAAN,MAAM0B,CAAY,CA9CzB,MA8CyB,CAAAX,EAAA,oBACrB,aAAc,CACV,KAAK,MAAQ,OACjB,CACA,OAAQ,CACA,KAAK,QAAU,UACf,KAAK,MAAQ,QACrB,CACA,OAAQ,CACA,KAAK,QAAU,YACf,KAAK,MAAQ,UACrB,CACA,OAAO,WAAWY,EAAQC,EAAS,CAC/B,IAAMC,EAAa,CAAC,EACpB,QAAWC,KAAKF,EAAS,CACrB,GAAIE,EAAE,SAAW,UACb,OAAO7B,EACP6B,EAAE,SAAW,SACbH,EAAO,MAAM,EACjBE,EAAW,KAAKC,EAAE,KAAK,CAC3B,CACA,MAAO,CAAE,OAAQH,EAAO,MAAO,MAAOE,CAAW,CACrD,CACA,aAAa,iBAAiBF,EAAQI,EAAO,CACzC,IAAMC,EAAY,CAAC,EACnB,QAAWC,KAAQF,EAAO,CACtB,IAAMG,EAAM,MAAMD,EAAK,IACjBE,EAAQ,MAAMF,EAAK,MACzBD,EAAU,KAAK,CACX,IAAAE,EACA,MAAAC,CACJ,CAAC,CACL,CACA,OAAOT,EAAY,gBAAgBC,EAAQK,CAAS,CACxD,CACA,OAAO,gBAAgBL,EAAQI,EAAO,CAClC,IAAMK,EAAc,CAAC,EACrB,QAAWH,KAAQF,EAAO,CACtB,GAAM,CAAE,IAAAG,EAAK,MAAAC,CAAM,EAAIF,EAGvB,GAFIC,EAAI,SAAW,WAEfC,EAAM,SAAW,UACjB,OAAOlC,EACPiC,EAAI,SAAW,SACfP,EAAO,MAAM,EACbQ,EAAM,SAAW,SACjBR,EAAO,MAAM,EACbO,EAAI,QAAU,cAAgB,OAAOC,EAAM,MAAU,KAAeF,EAAK,aACzEG,EAAYF,EAAI,KAAK,EAAIC,EAAM,MAEvC,CACA,MAAO,CAAE,OAAQR,EAAO,MAAO,MAAOS,CAAY,CACtD,CACJ,EACanC,EAAU,OAAO,OAAO,CACjC,OAAQ,SACZ,CAAC,EACYC,GAAQa,EAACoB,IAAW,CAAE,OAAQ,QAAS,MAAAA,CAAM,GAArC,SACRhC,EAAKY,EAACoB,IAAW,CAAE,OAAQ,QAAS,MAAAA,CAAM,GAArC,MACL/B,GAAYW,EAACjB,GAAMA,EAAE,SAAW,UAApB,aACZO,GAAUU,EAACjB,GAAMA,EAAE,SAAW,QAApB,WACVQ,GAAUS,EAACjB,GAAMA,EAAE,SAAW,QAApB,WACVS,GAAUQ,EAACjB,GAAM,OAAO,QAAY,KAAeA,aAAa,QAAtD,aC5GvB,IAAAuC,GAAAC,EAAA,KAAAC,IAAAC,IAAAC,MCAA,IAAWC,EAAXC,GAAAC,EAAA,KAAAC,IAAAC,IAAAC,KACC,SAAUL,EAAW,CAClBA,EAAU,SAAYM,GAAY,OAAOA,GAAY,SAAW,CAAE,QAAAA,CAAQ,EAAIA,GAAW,CAAC,EAE1FN,EAAU,SAAYM,GAAY,OAAOA,GAAY,SAAWA,EAAUA,GAAS,OACvF,GAAGN,IAAcA,EAAY,CAAC,EAAE,ICwChC,SAASO,EAAoBC,EAAQ,CACjC,GAAI,CAACA,EACD,MAAO,CAAC,EACZ,GAAM,CAAE,SAAAC,EAAU,mBAAAC,EAAoB,eAAAC,EAAgB,YAAAC,CAAY,EAAIJ,EACtE,GAAIC,IAAaC,GAAsBC,GACnC,MAAM,IAAI,MAAM,0FAA0F,EAE9G,OAAIF,EACO,CAAE,SAAUA,EAAU,YAAAG,CAAY,EAatC,CAAE,SAZSC,EAAA,CAACC,EAAKC,IAAQ,CAC5B,GAAM,CAAE,QAAAC,CAAQ,EAAIR,EACpB,OAAIM,EAAI,OAAS,qBACN,CAAE,QAASE,GAAWD,EAAI,YAAa,EAE9C,OAAOA,EAAI,KAAS,IACb,CAAE,QAASC,GAAWL,GAAkBI,EAAI,YAAa,EAEhED,EAAI,OAAS,eACN,CAAE,QAASC,EAAI,YAAa,EAChC,CAAE,QAASC,GAAWN,GAAsBK,EAAI,YAAa,CACxE,EAXkB,aAYY,YAAAH,CAAY,CAC9C,CAoVA,SAASK,GAAgBC,EAAM,CAC3B,IAAIC,EAAqB,WACrBD,EAAK,UACLC,EAAqB,GAAGA,CAAkB,UAAUD,EAAK,SAAS,IAE7DA,EAAK,WAAa,OACvBC,EAAqB,GAAGA,CAAkB,cAE9C,IAAMC,EAAoBF,EAAK,UAAY,IAAM,IACjD,MAAO,8BAA8BC,CAAkB,IAAIC,CAAiB,EAChF,CACA,SAASC,GAAUH,EAAM,CACrB,OAAO,IAAI,OAAO,IAAID,GAAgBC,CAAI,CAAC,GAAG,CAClD,CAEO,SAASI,GAAcJ,EAAM,CAChC,IAAIK,EAAQ,GAAGC,EAAe,IAAIP,GAAgBC,CAAI,CAAC,GACjDO,EAAO,CAAC,EACd,OAAAA,EAAK,KAAKP,EAAK,MAAQ,KAAO,GAAG,EAC7BA,EAAK,QACLO,EAAK,KAAK,sBAAsB,EACpCF,EAAQ,GAAGA,CAAK,IAAIE,EAAK,KAAK,GAAG,CAAC,IAC3B,IAAI,OAAO,IAAIF,CAAK,GAAG,CAClC,CACA,SAASG,GAAUC,EAAIC,EAAS,CAI5B,MAHK,IAAAA,IAAY,MAAQ,CAACA,IAAYC,GAAU,KAAKF,CAAE,IAGlDC,IAAY,MAAQ,CAACA,IAAYE,GAAU,KAAKH,CAAE,EAI3D,CACA,SAASI,GAAWC,EAAKC,EAAK,CAC1B,GAAI,CAACC,GAAS,KAAKF,CAAG,EAClB,MAAO,GACX,GAAI,CACA,GAAM,CAACG,CAAM,EAAIH,EAAI,MAAM,GAAG,EAC9B,GAAI,CAACG,EACD,MAAO,GAEX,IAAMC,EAASD,EACV,QAAQ,KAAM,GAAG,EACjB,QAAQ,KAAM,GAAG,EACjB,OAAOA,EAAO,QAAW,EAAKA,EAAO,OAAS,GAAM,EAAI,GAAG,EAC1DE,EAAU,KAAK,MAAM,KAAKD,CAAM,CAAC,EAOvC,MANI,SAAOC,GAAY,UAAYA,IAAY,MAE3C,QAASA,GAAWA,GAAS,MAAQ,OAErC,CAACA,EAAQ,KAETJ,GAAOI,EAAQ,MAAQJ,EAG/B,MACM,CACF,MAAO,EACX,CACJ,CACA,SAASK,GAAYX,EAAIC,EAAS,CAI9B,MAHK,IAAAA,IAAY,MAAQ,CAACA,IAAYW,GAAc,KAAKZ,CAAE,IAGtDC,IAAY,MAAQ,CAACA,IAAYY,GAAc,KAAKb,CAAE,EAI/D,CAmkBA,SAASc,GAAmBC,EAAKC,EAAM,CACnC,IAAMC,GAAeF,EAAI,SAAS,EAAE,MAAM,GAAG,EAAE,CAAC,GAAK,IAAI,OACnDG,GAAgBF,EAAK,SAAS,EAAE,MAAM,GAAG,EAAE,CAAC,GAAK,IAAI,OACrDG,EAAWF,EAAcC,EAAeD,EAAcC,EACtDE,EAAS,OAAO,SAASL,EAAI,QAAQI,CAAQ,EAAE,QAAQ,IAAK,EAAE,CAAC,EAC/DE,EAAU,OAAO,SAASL,EAAK,QAAQG,CAAQ,EAAE,QAAQ,IAAK,EAAE,CAAC,EACvE,OAAQC,EAASC,EAAW,IAAMF,CACtC,CAkxBA,SAASG,GAAeC,EAAQ,CAC5B,GAAIA,aAAkBC,EAAW,CAC7B,IAAMC,EAAW,CAAC,EAClB,QAAWC,KAAOH,EAAO,MAAO,CAC5B,IAAMI,EAAcJ,EAAO,MAAMG,CAAG,EACpCD,EAASC,CAAG,EAAIE,GAAY,OAAON,GAAeK,CAAW,CAAC,CAClE,CACA,OAAO,IAAIH,EAAU,CACjB,GAAGD,EAAO,KACV,MAAOrC,EAAA,IAAMuC,EAAN,QACX,CAAC,CACL,KACK,QAAIF,aAAkBM,GAChB,IAAIA,GAAS,CAChB,GAAGN,EAAO,KACV,KAAMD,GAAeC,EAAO,OAAO,CACvC,CAAC,EAEIA,aAAkBK,GAChBA,GAAY,OAAON,GAAeC,EAAO,OAAO,CAAC,CAAC,EAEpDA,aAAkBO,GAChBA,GAAY,OAAOR,GAAeC,EAAO,OAAO,CAAC,CAAC,EAEpDA,aAAkBQ,GAChBA,GAAS,OAAOR,EAAO,MAAM,IAAKS,GAASV,GAAeU,CAAI,CAAC,CAAC,EAGhET,CAEf,CAwmBA,SAASU,GAAYC,EAAGC,EAAG,CACvB,IAAMC,EAAQC,GAAcH,CAAC,EACvBI,EAAQD,GAAcF,CAAC,EAC7B,GAAID,IAAMC,EACN,MAAO,CAAE,MAAO,GAAM,KAAMD,CAAE,EAE7B,GAAIE,IAAUG,EAAc,QAAUD,IAAUC,EAAc,OAAQ,CACvE,IAAMC,EAAQC,EAAK,WAAWN,CAAC,EACzBO,EAAaD,EAAK,WAAWP,CAAC,EAAE,OAAQR,GAAQc,EAAM,QAAQd,CAAG,IAAM,EAAE,EACzEiB,EAAS,CAAE,GAAGT,EAAG,GAAGC,CAAE,EAC5B,QAAWT,KAAOgB,EAAY,CAC1B,IAAME,EAAcX,GAAYC,EAAER,CAAG,EAAGS,EAAET,CAAG,CAAC,EAC9C,GAAI,CAACkB,EAAY,MACb,MAAO,CAAE,MAAO,EAAM,EAE1BD,EAAOjB,CAAG,EAAIkB,EAAY,IAC9B,CACA,MAAO,CAAE,MAAO,GAAM,KAAMD,CAAO,CACvC,SACSP,IAAUG,EAAc,OAASD,IAAUC,EAAc,MAAO,CACrE,GAAIL,EAAE,SAAWC,EAAE,OACf,MAAO,CAAE,MAAO,EAAM,EAE1B,IAAMU,EAAW,CAAC,EAClB,QAASC,EAAQ,EAAGA,EAAQZ,EAAE,OAAQY,IAAS,CAC3C,IAAMC,EAAQb,EAAEY,CAAK,EACfE,EAAQb,EAAEW,CAAK,EACfF,EAAcX,GAAYc,EAAOC,CAAK,EAC5C,GAAI,CAACJ,EAAY,MACb,MAAO,CAAE,MAAO,EAAM,EAE1BC,EAAS,KAAKD,EAAY,IAAI,CAClC,CACA,MAAO,CAAE,MAAO,GAAM,KAAMC,CAAS,CACzC,KACK,QAAIT,IAAUG,EAAc,MAAQD,IAAUC,EAAc,MAAQ,CAACL,GAAM,CAACC,EACtE,CAAE,MAAO,GAAM,KAAMD,CAAE,EAGvB,CAAE,MAAO,EAAM,CAE9B,CAweA,SAASe,GAAcC,EAAQrE,EAAQ,CACnC,OAAO,IAAIsE,GAAQ,CACf,OAAAD,EACA,SAAUE,EAAsB,QAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,CACL,CA8gBA,SAASwE,GAAYxE,EAAQyE,EAAM,CAC/B,IAAMC,EAAI,OAAO1E,GAAW,WAAaA,EAAOyE,CAAI,EAAI,OAAOzE,GAAW,SAAW,CAAE,QAASA,CAAO,EAAIA,EAE3G,OADW,OAAO0E,GAAM,SAAW,CAAE,QAASA,CAAE,EAAIA,CAExD,CACO,SAASC,GAAOC,EAAOC,EAAU,CAAC,EAWzCC,EAAO,CACH,OAAIF,EACOG,GAAO,OAAO,EAAE,YAAY,CAACN,EAAMlE,IAAQ,CAC9C,IAAMyE,EAAIJ,EAAMH,CAAI,EACpB,GAAIO,aAAa,QACb,OAAOA,EAAE,KAAMA,GAAM,CACjB,GAAI,CAACA,EAAG,CACJ,IAAMhF,EAASwE,GAAYK,EAASJ,CAAI,EAClCQ,EAASjF,EAAO,OAAS8E,GAAS,GACxCvE,EAAI,SAAS,CAAE,KAAM,SAAU,GAAGP,EAAQ,MAAOiF,CAAO,CAAC,CAC7D,CACJ,CAAC,EAEL,GAAI,CAACD,EAAG,CACJ,IAAMhF,EAASwE,GAAYK,EAASJ,CAAI,EAClCQ,EAASjF,EAAO,OAAS8E,GAAS,GACxCvE,EAAI,SAAS,CAAE,KAAM,SAAU,GAAGP,EAAQ,MAAOiF,CAAO,CAAC,CAC7D,CAEJ,CAAC,EACEF,GAAO,OAAO,CACzB,CAvgHA,IAKMG,GAoBAC,GA2COC,EAsSPC,GACAC,GACAC,GAGAC,GACAC,GACA/D,GACAgE,GAaAC,GAIAC,GACFC,GAEExE,GACAU,GAGAT,GACAU,GAEA8D,GAEAC,GAMA/E,GACAgF,GAsEOC,GA0kBAC,GA+OAC,GAgLAC,GAyBAC,GA+GAC,GAqBAC,GAqBAC,GAqBAzB,GAgBA0B,GAgBAC,GAiBAC,GAqBA3D,GAoIAL,EAoYAiE,GAuGPC,GA6COC,GAyHAC,GAuDA7D,GAsEA8D,GAsDAC,GAmEAC,GAsFAC,GAkHAC,GAiBAC,GA+BA/C,GAiEAgD,GAsCAC,GA8BAC,GAmJAzE,GAmBAE,GAmBAwE,GAyBAC,GA2DAC,GAqBAC,GACAC,GAcAC,GA0DAC,GAoEAC,GAGFzD,EA2CL0D,GAKAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACOC,GAWAC,GA5mHbC,GAAAC,EAAA,KAAAC,IAAAC,IAAAC,IAAAC,KACAC,KACAC,KACAC,KACAC,KACMhG,GAAN,KAAyB,CALzB,MAKyB,CAAA7E,EAAA,2BACrB,YAAY8K,EAAQC,EAAOC,EAAMxI,EAAK,CAClC,KAAK,YAAc,CAAC,EACpB,KAAK,OAASsI,EACd,KAAK,KAAOC,EACZ,KAAK,MAAQC,EACb,KAAK,KAAOxI,CAChB,CACA,IAAI,MAAO,CACP,OAAK,KAAK,YAAY,SACd,MAAM,QAAQ,KAAK,IAAI,EACvB,KAAK,YAAY,KAAK,GAAG,KAAK,MAAO,GAAG,KAAK,IAAI,EAGjD,KAAK,YAAY,KAAK,GAAG,KAAK,MAAO,KAAK,IAAI,GAG/C,KAAK,WAChB,CACJ,EACMsC,GAAe9E,EAAA,CAACE,EAAK+K,IAAW,CAClC,GAAIC,GAAQD,CAAM,EACd,MAAO,CAAE,QAAS,GAAM,KAAMA,EAAO,KAAM,EAG3C,GAAI,CAAC/K,EAAI,OAAO,OAAO,OACnB,MAAM,IAAI,MAAM,2CAA2C,EAE/D,MAAO,CACH,QAAS,GACT,IAAI,OAAQ,CACR,GAAI,KAAK,OACL,OAAO,KAAK,OAChB,IAAMiL,EAAQ,IAAIC,EAASlL,EAAI,OAAO,MAAM,EAC5C,YAAK,OAASiL,EACP,KAAK,MAChB,CACJ,CAER,EAnBqB,gBAoBZnL,EAAAN,EAAA,uBAuBIqF,EAAN,KAAc,CApErB,MAoEqB,CAAA/E,EAAA,gBACjB,IAAI,aAAc,CACd,OAAO,KAAK,KAAK,WACrB,CACA,SAASqL,EAAO,CACZ,OAAOlI,GAAckI,EAAM,IAAI,CACnC,CACA,gBAAgBA,EAAOnL,EAAK,CACxB,OAAQA,GAAO,CACX,OAAQmL,EAAM,OAAO,OACrB,KAAMA,EAAM,KACZ,WAAYlI,GAAckI,EAAM,IAAI,EACpC,eAAgB,KAAK,KAAK,SAC1B,KAAMA,EAAM,KACZ,OAAQA,EAAM,MAClB,CACJ,CACA,oBAAoBA,EAAO,CACvB,MAAO,CACH,OAAQ,IAAIC,EACZ,IAAK,CACD,OAAQD,EAAM,OAAO,OACrB,KAAMA,EAAM,KACZ,WAAYlI,GAAckI,EAAM,IAAI,EACpC,eAAgB,KAAK,KAAK,SAC1B,KAAMA,EAAM,KACZ,OAAQA,EAAM,MAClB,CACJ,CACJ,CACA,WAAWA,EAAO,CACd,IAAMJ,EAAS,KAAK,OAAOI,CAAK,EAChC,GAAIE,GAAQN,CAAM,EACd,MAAM,IAAI,MAAM,wCAAwC,EAE5D,OAAOA,CACX,CACA,YAAYI,EAAO,CACf,IAAMJ,EAAS,KAAK,OAAOI,CAAK,EAChC,OAAO,QAAQ,QAAQJ,CAAM,CACjC,CACA,MAAM7G,EAAMzE,EAAQ,CAChB,IAAMsL,EAAS,KAAK,UAAU7G,EAAMzE,CAAM,EAC1C,GAAIsL,EAAO,QACP,OAAOA,EAAO,KAClB,MAAMA,EAAO,KACjB,CACA,UAAU7G,EAAMzE,EAAQ,CACpB,IAAMO,EAAM,CACR,OAAQ,CACJ,OAAQ,CAAC,EACT,MAAOP,GAAQ,OAAS,GACxB,mBAAoBA,GAAQ,QAChC,EACA,KAAMA,GAAQ,MAAQ,CAAC,EACvB,eAAgB,KAAK,KAAK,SAC1B,OAAQ,KACR,KAAAyE,EACA,WAAYjB,GAAciB,CAAI,CAClC,EACM6G,EAAS,KAAK,WAAW,CAAE,KAAA7G,EAAM,KAAMlE,EAAI,KAAM,OAAQA,CAAI,CAAC,EACpE,OAAO4E,GAAa5E,EAAK+K,CAAM,CACnC,CACA,YAAY7G,EAAM,CACd,IAAMlE,EAAM,CACR,OAAQ,CACJ,OAAQ,CAAC,EACT,MAAO,CAAC,CAAC,KAAK,WAAW,EAAE,KAC/B,EACA,KAAM,CAAC,EACP,eAAgB,KAAK,KAAK,SAC1B,OAAQ,KACR,KAAAkE,EACA,WAAYjB,GAAciB,CAAI,CAClC,EACA,GAAI,CAAC,KAAK,WAAW,EAAE,MACnB,GAAI,CACA,IAAM6G,EAAS,KAAK,WAAW,CAAE,KAAA7G,EAAM,KAAM,CAAC,EAAG,OAAQlE,CAAI,CAAC,EAC9D,OAAOgL,GAAQD,CAAM,EACf,CACE,MAAOA,EAAO,KAClB,EACE,CACE,OAAQ/K,EAAI,OAAO,MACvB,CACR,OACOsL,EAAK,CACJA,GAAK,SAAS,YAAY,GAAG,SAAS,aAAa,IACnD,KAAK,WAAW,EAAE,MAAQ,IAE9BtL,EAAI,OAAS,CACT,OAAQ,CAAC,EACT,MAAO,EACX,CACJ,CAEJ,OAAO,KAAK,YAAY,CAAE,KAAAkE,EAAM,KAAM,CAAC,EAAG,OAAQlE,CAAI,CAAC,EAAE,KAAM+K,GAAWC,GAAQD,CAAM,EAClF,CACE,MAAOA,EAAO,KAClB,EACE,CACE,OAAQ/K,EAAI,OAAO,MACvB,CAAC,CACT,CACA,MAAM,WAAWkE,EAAMzE,EAAQ,CAC3B,IAAMsL,EAAS,MAAM,KAAK,eAAe7G,EAAMzE,CAAM,EACrD,GAAIsL,EAAO,QACP,OAAOA,EAAO,KAClB,MAAMA,EAAO,KACjB,CACA,MAAM,eAAe7G,EAAMzE,EAAQ,CAC/B,IAAMO,EAAM,CACR,OAAQ,CACJ,OAAQ,CAAC,EACT,mBAAoBP,GAAQ,SAC5B,MAAO,EACX,EACA,KAAMA,GAAQ,MAAQ,CAAC,EACvB,eAAgB,KAAK,KAAK,SAC1B,OAAQ,KACR,KAAAyE,EACA,WAAYjB,GAAciB,CAAI,CAClC,EACMqH,EAAmB,KAAK,OAAO,CAAE,KAAArH,EAAM,KAAMlE,EAAI,KAAM,OAAQA,CAAI,CAAC,EACpE+K,EAAS,MAAOM,GAAQE,CAAgB,EAAIA,EAAmB,QAAQ,QAAQA,CAAgB,GACrG,OAAO3G,GAAa5E,EAAK+K,CAAM,CACnC,CACA,OAAO1G,EAAOpE,EAAS,CACnB,IAAMuL,EAAqB1L,EAAC6B,GACpB,OAAO1B,GAAY,UAAY,OAAOA,EAAY,IAC3C,CAAE,QAAAA,CAAQ,EAEZ,OAAOA,GAAY,WACjBA,EAAQ0B,CAAG,EAGX1B,EARY,sBAW3B,OAAO,KAAK,YAAY,CAAC0B,EAAK3B,IAAQ,CAClC,IAAM+K,EAAS1G,EAAM1C,CAAG,EAClB8J,EAAW3L,EAAA,IAAME,EAAI,SAAS,CAChC,KAAM0L,EAAa,OACnB,GAAGF,EAAmB7J,CAAG,CAC7B,CAAC,EAHgB,YAIjB,OAAI,OAAO,QAAY,KAAeoJ,aAAkB,QAC7CA,EAAO,KAAM7G,GACXA,EAKM,IAJPuH,EAAS,EACF,GAKd,EAEAV,EAKM,IAJPU,EAAS,EACF,GAKf,CAAC,CACL,CACA,WAAWpH,EAAOsH,EAAgB,CAC9B,OAAO,KAAK,YAAY,CAAChK,EAAK3B,IACrBqE,EAAM1C,CAAG,EAKH,IAJP3B,EAAI,SAAS,OAAO2L,GAAmB,WAAaA,EAAehK,EAAK3B,CAAG,EAAI2L,CAAc,EACtF,GAKd,CACL,CACA,YAAYC,EAAY,CACpB,OAAO,IAAI3E,GAAW,CAClB,OAAQ,KACR,SAAUjD,EAAsB,WAChC,OAAQ,CAAE,KAAM,aAAc,WAAA4H,CAAW,CAC7C,CAAC,CACL,CACA,YAAYA,EAAY,CACpB,OAAO,KAAK,YAAYA,CAAU,CACtC,CACA,YAAYC,EAAK,CAEb,KAAK,IAAM,KAAK,eAChB,KAAK,KAAOA,EACZ,KAAK,MAAQ,KAAK,MAAM,KAAK,IAAI,EACjC,KAAK,UAAY,KAAK,UAAU,KAAK,IAAI,EACzC,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,EAC3C,KAAK,eAAiB,KAAK,eAAe,KAAK,IAAI,EACnD,KAAK,IAAM,KAAK,IAAI,KAAK,IAAI,EAC7B,KAAK,OAAS,KAAK,OAAO,KAAK,IAAI,EACnC,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,EAC3C,KAAK,YAAc,KAAK,YAAY,KAAK,IAAI,EAC7C,KAAK,SAAW,KAAK,SAAS,KAAK,IAAI,EACvC,KAAK,SAAW,KAAK,SAAS,KAAK,IAAI,EACvC,KAAK,QAAU,KAAK,QAAQ,KAAK,IAAI,EACrC,KAAK,MAAQ,KAAK,MAAM,KAAK,IAAI,EACjC,KAAK,QAAU,KAAK,QAAQ,KAAK,IAAI,EACrC,KAAK,GAAK,KAAK,GAAG,KAAK,IAAI,EAC3B,KAAK,IAAM,KAAK,IAAI,KAAK,IAAI,EAC7B,KAAK,UAAY,KAAK,UAAU,KAAK,IAAI,EACzC,KAAK,MAAQ,KAAK,MAAM,KAAK,IAAI,EACjC,KAAK,QAAU,KAAK,QAAQ,KAAK,IAAI,EACrC,KAAK,MAAQ,KAAK,MAAM,KAAK,IAAI,EACjC,KAAK,SAAW,KAAK,SAAS,KAAK,IAAI,EACvC,KAAK,KAAO,KAAK,KAAK,KAAK,IAAI,EAC/B,KAAK,SAAW,KAAK,SAAS,KAAK,IAAI,EACvC,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,EAC3C,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,EAC3C,KAAK,WAAW,EAAI,CAChB,QAAS,EACT,OAAQ,MACR,SAAU/L,EAACoE,GAAS,KAAK,WAAW,EAAEA,CAAI,EAAhC,WACd,CACJ,CACA,UAAW,CACP,OAAO1B,GAAY,OAAO,KAAM,KAAK,IAAI,CAC7C,CACA,UAAW,CACP,OAAOE,GAAY,OAAO,KAAM,KAAK,IAAI,CAC7C,CACA,SAAU,CACN,OAAO,KAAK,SAAS,EAAE,SAAS,CACpC,CACA,OAAQ,CACJ,OAAOD,GAAS,OAAO,IAAI,CAC/B,CACA,SAAU,CACN,OAAOuE,GAAW,OAAO,KAAM,KAAK,IAAI,CAC5C,CACA,GAAG8E,EAAQ,CACP,OAAOzF,GAAS,OAAO,CAAC,KAAMyF,CAAM,EAAG,KAAK,IAAI,CACpD,CACA,IAAIC,EAAU,CACV,OAAOvF,GAAgB,OAAO,KAAMuF,EAAU,KAAK,IAAI,CAC3D,CACA,UAAUC,EAAW,CACjB,OAAO,IAAI/E,GAAW,CAClB,GAAGzH,EAAoB,KAAK,IAAI,EAChC,OAAQ,KACR,SAAUwE,EAAsB,WAChC,OAAQ,CAAE,KAAM,YAAa,UAAAgI,CAAU,CAC3C,CAAC,CACL,CACA,QAAQH,EAAK,CACT,IAAMI,EAAmB,OAAOJ,GAAQ,WAAaA,EAAM,IAAMA,EACjE,OAAO,IAAI3E,GAAW,CAClB,GAAG1H,EAAoB,KAAK,IAAI,EAChC,UAAW,KACX,aAAcyM,EACd,SAAUjI,EAAsB,UACpC,CAAC,CACL,CACA,OAAQ,CACJ,OAAO,IAAIsD,GAAW,CAClB,SAAUtD,EAAsB,WAChC,KAAM,KACN,GAAGxE,EAAoB,KAAK,IAAI,CACpC,CAAC,CACL,CACA,MAAMqM,EAAK,CACP,IAAMK,EAAiB,OAAOL,GAAQ,WAAaA,EAAM,IAAMA,EAC/D,OAAO,IAAI1E,GAAS,CAChB,GAAG3H,EAAoB,KAAK,IAAI,EAChC,UAAW,KACX,WAAY0M,EACZ,SAAUlI,EAAsB,QACpC,CAAC,CACL,CACA,SAASnE,EAAa,CAClB,IAAMsM,EAAO,KAAK,YAClB,OAAO,IAAIA,EAAK,CACZ,GAAG,KAAK,KACR,YAAAtM,CACJ,CAAC,CACL,CACA,KAAKuM,EAAQ,CACT,OAAO7E,GAAY,OAAO,KAAM6E,CAAM,CAC1C,CACA,UAAW,CACP,OAAO5E,GAAY,OAAO,IAAI,CAClC,CACA,YAAa,CACT,OAAO,KAAK,UAAU,MAAS,EAAE,OACrC,CACA,YAAa,CACT,OAAO,KAAK,UAAU,IAAI,EAAE,OAChC,CACJ,EACM1C,GAAY,iBACZC,GAAa,cACbC,GAAY,4BAGZC,GAAY,yFACZC,GAAc,oBACd/D,GAAW,mDACXgE,GAAgB,2SAahBC,GAAa,qFAIbC,GAAc,uDAGdvE,GAAY,sHACZU,GAAgB,2IAGhBT,GAAY,wpBACZU,GAAgB,0rBAEhB8D,GAAc,mEAEdC,GAAiB,yEAMjB/E,GAAkB,oMAClBgF,GAAY,IAAI,OAAO,IAAIhF,EAAe,GAAG,EAC1CX,EAAAI,GAAA,mBAWAJ,EAAAQ,GAAA,aAIOR,EAAAS,GAAA,iBASPT,EAAAa,GAAA,aASAb,EAAAkB,GAAA,cA2BAlB,EAAAyB,GAAA,eASImE,GAAN,MAAM2G,UAAkBxH,CAAQ,CA5dvC,MA4duC,CAAA/E,EAAA,kBACnC,OAAOqL,EAAO,CAKV,GAJI,KAAK,KAAK,SACVA,EAAM,KAAO,OAAOA,EAAM,IAAI,GAEf,KAAK,SAASA,CAAK,IACnBhI,EAAc,OAAQ,CACrC,IAAMnD,EAAM,KAAK,gBAAgBmL,CAAK,EACtC,OAAAmB,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,aACnB,SAAUvI,EAAc,OACxB,SAAUnD,EAAI,UAClB,CAAC,EACMuM,CACX,CACA,IAAMC,EAAS,IAAIpB,EACfpL,EACJ,QAAWqE,KAAS,KAAK,KAAK,OAC1B,GAAIA,EAAM,OAAS,MACX8G,EAAM,KAAK,OAAS9G,EAAM,QAC1BrE,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,UACnB,QAASrH,EAAM,MACf,KAAM,SACN,UAAW,GACX,MAAO,GACP,QAASA,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,WAGZnI,EAAM,OAAS,MAChB8G,EAAM,KAAK,OAAS9G,EAAM,QAC1BrE,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,QACnB,QAASrH,EAAM,MACf,KAAM,SACN,UAAW,GACX,MAAO,GACP,QAASA,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,WAGZnI,EAAM,OAAS,SAAU,CAC9B,IAAMoI,EAAStB,EAAM,KAAK,OAAS9G,EAAM,MACnCqI,EAAWvB,EAAM,KAAK,OAAS9G,EAAM,OACvCoI,GAAUC,KACV1M,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACjCyM,EACAH,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,QACnB,QAASrH,EAAM,MACf,KAAM,SACN,UAAW,GACX,MAAO,GACP,QAASA,EAAM,OACnB,CAAC,EAEIqI,GACLJ,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,UACnB,QAASrH,EAAM,MACf,KAAM,SACN,UAAW,GACX,MAAO,GACP,QAASA,EAAM,OACnB,CAAC,EAELmI,EAAO,MAAM,EAErB,SACSnI,EAAM,OAAS,QACfe,GAAW,KAAK+F,EAAM,IAAI,IAC3BnL,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,WAAY,QACZ,KAAM0L,EAAa,eACnB,QAASrH,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,WAGZnI,EAAM,OAAS,QACfiB,KACDA,GAAa,IAAI,OAAOD,GAAa,GAAG,GAEvCC,GAAW,KAAK6F,EAAM,IAAI,IAC3BnL,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,WAAY,QACZ,KAAM0L,EAAa,eACnB,QAASrH,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,WAGZnI,EAAM,OAAS,OACfY,GAAU,KAAKkG,EAAM,IAAI,IAC1BnL,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,WAAY,OACZ,KAAM0L,EAAa,eACnB,QAASrH,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,WAGZnI,EAAM,OAAS,SACfa,GAAY,KAAKiG,EAAM,IAAI,IAC5BnL,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,WAAY,SACZ,KAAM0L,EAAa,eACnB,QAASrH,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,WAGZnI,EAAM,OAAS,OACfS,GAAU,KAAKqG,EAAM,IAAI,IAC1BnL,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,WAAY,OACZ,KAAM0L,EAAa,eACnB,QAASrH,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,WAGZnI,EAAM,OAAS,QACfU,GAAW,KAAKoG,EAAM,IAAI,IAC3BnL,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,WAAY,QACZ,KAAM0L,EAAa,eACnB,QAASrH,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,WAGZnI,EAAM,OAAS,OACfW,GAAU,KAAKmG,EAAM,IAAI,IAC1BnL,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,WAAY,OACZ,KAAM0L,EAAa,eACnB,QAASrH,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,WAGZnI,EAAM,OAAS,MACpB,GAAI,CACA,IAAI,IAAI8G,EAAM,IAAI,CACtB,MACM,CACFnL,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,WAAY,MACZ,KAAM0L,EAAa,eACnB,QAASrH,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,CACjB,MAEKnI,EAAM,OAAS,SACpBA,EAAM,MAAM,UAAY,EACLA,EAAM,MAAM,KAAK8G,EAAM,IAAI,IAE1CnL,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,WAAY,QACZ,KAAM0L,EAAa,eACnB,QAASrH,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,IAGZnI,EAAM,OAAS,OACpB8G,EAAM,KAAOA,EAAM,KAAK,KAAK,EAExB9G,EAAM,OAAS,WACf8G,EAAM,KAAK,SAAS9G,EAAM,MAAOA,EAAM,QAAQ,IAChDrE,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,eACnB,WAAY,CAAE,SAAUrH,EAAM,MAAO,SAAUA,EAAM,QAAS,EAC9D,QAASA,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,GAGZnI,EAAM,OAAS,cACpB8G,EAAM,KAAOA,EAAM,KAAK,YAAY,EAE/B9G,EAAM,OAAS,cACpB8G,EAAM,KAAOA,EAAM,KAAK,YAAY,EAE/B9G,EAAM,OAAS,aACf8G,EAAM,KAAK,WAAW9G,EAAM,KAAK,IAClCrE,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,eACnB,WAAY,CAAE,WAAYrH,EAAM,KAAM,EACtC,QAASA,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,GAGZnI,EAAM,OAAS,WACf8G,EAAM,KAAK,SAAS9G,EAAM,KAAK,IAChCrE,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,eACnB,WAAY,CAAE,SAAUrH,EAAM,KAAM,EACpC,QAASA,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,GAGZnI,EAAM,OAAS,WACN9D,GAAc8D,CAAK,EACtB,KAAK8G,EAAM,IAAI,IACtBnL,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,eACnB,WAAY,WACZ,QAASrH,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,GAGZnI,EAAM,OAAS,OACNoB,GACH,KAAK0F,EAAM,IAAI,IACtBnL,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,eACnB,WAAY,OACZ,QAASrH,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,GAGZnI,EAAM,OAAS,OACN/D,GAAU+D,CAAK,EAClB,KAAK8G,EAAM,IAAI,IACtBnL,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,eACnB,WAAY,OACZ,QAASrH,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,GAGZnI,EAAM,OAAS,WACfc,GAAc,KAAKgG,EAAM,IAAI,IAC9BnL,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,WAAY,WACZ,KAAM0L,EAAa,eACnB,QAASrH,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,GAGZnI,EAAM,OAAS,KACf1D,GAAUwK,EAAM,KAAM9G,EAAM,OAAO,IACpCrE,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,WAAY,KACZ,KAAM0L,EAAa,eACnB,QAASrH,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,GAGZnI,EAAM,OAAS,MACfrD,GAAWmK,EAAM,KAAM9G,EAAM,GAAG,IACjCrE,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,WAAY,MACZ,KAAM0L,EAAa,eACnB,QAASrH,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,GAGZnI,EAAM,OAAS,OACf9C,GAAY4J,EAAM,KAAM9G,EAAM,OAAO,IACtCrE,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,WAAY,OACZ,KAAM0L,EAAa,eACnB,QAASrH,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,GAGZnI,EAAM,OAAS,SACfkB,GAAY,KAAK4F,EAAM,IAAI,IAC5BnL,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,WAAY,SACZ,KAAM0L,EAAa,eACnB,QAASrH,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,GAGZnI,EAAM,OAAS,YACfmB,GAAe,KAAK2F,EAAM,IAAI,IAC/BnL,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,WAAY,YACZ,KAAM0L,EAAa,eACnB,QAASrH,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,GAIjBnJ,EAAK,YAAYgB,CAAK,EAG9B,MAAO,CAAE,OAAQmI,EAAO,MAAO,MAAOrB,EAAM,IAAK,CACrD,CACA,OAAO3K,EAAOmM,EAAY1M,EAAS,CAC/B,OAAO,KAAK,WAAYiE,GAAS1D,EAAM,KAAK0D,CAAI,EAAG,CAC/C,WAAAyI,EACA,KAAMjB,EAAa,eACnB,GAAGkB,EAAU,SAAS3M,CAAO,CACjC,CAAC,CACL,CACA,UAAUoE,EAAO,CACb,OAAO,IAAIgI,EAAU,CACjB,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQhI,CAAK,CACvC,CAAC,CACL,CACA,MAAMpE,EAAS,CACX,OAAO,KAAK,UAAU,CAAE,KAAM,QAAS,GAAG2M,EAAU,SAAS3M,CAAO,CAAE,CAAC,CAC3E,CACA,IAAIA,EAAS,CACT,OAAO,KAAK,UAAU,CAAE,KAAM,MAAO,GAAG2M,EAAU,SAAS3M,CAAO,CAAE,CAAC,CACzE,CACA,MAAMA,EAAS,CACX,OAAO,KAAK,UAAU,CAAE,KAAM,QAAS,GAAG2M,EAAU,SAAS3M,CAAO,CAAE,CAAC,CAC3E,CACA,KAAKA,EAAS,CACV,OAAO,KAAK,UAAU,CAAE,KAAM,OAAQ,GAAG2M,EAAU,SAAS3M,CAAO,CAAE,CAAC,CAC1E,CACA,OAAOA,EAAS,CACZ,OAAO,KAAK,UAAU,CAAE,KAAM,SAAU,GAAG2M,EAAU,SAAS3M,CAAO,CAAE,CAAC,CAC5E,CACA,KAAKA,EAAS,CACV,OAAO,KAAK,UAAU,CAAE,KAAM,OAAQ,GAAG2M,EAAU,SAAS3M,CAAO,CAAE,CAAC,CAC1E,CACA,MAAMA,EAAS,CACX,OAAO,KAAK,UAAU,CAAE,KAAM,QAAS,GAAG2M,EAAU,SAAS3M,CAAO,CAAE,CAAC,CAC3E,CACA,KAAKA,EAAS,CACV,OAAO,KAAK,UAAU,CAAE,KAAM,OAAQ,GAAG2M,EAAU,SAAS3M,CAAO,CAAE,CAAC,CAC1E,CACA,OAAOA,EAAS,CACZ,OAAO,KAAK,UAAU,CAAE,KAAM,SAAU,GAAG2M,EAAU,SAAS3M,CAAO,CAAE,CAAC,CAC5E,CACA,UAAUA,EAAS,CAEf,OAAO,KAAK,UAAU,CAClB,KAAM,YACN,GAAG2M,EAAU,SAAS3M,CAAO,CACjC,CAAC,CACL,CACA,IAAI4M,EAAS,CACT,OAAO,KAAK,UAAU,CAAE,KAAM,MAAO,GAAGD,EAAU,SAASC,CAAO,CAAE,CAAC,CACzE,CACA,GAAGA,EAAS,CACR,OAAO,KAAK,UAAU,CAAE,KAAM,KAAM,GAAGD,EAAU,SAASC,CAAO,CAAE,CAAC,CACxE,CACA,KAAKA,EAAS,CACV,OAAO,KAAK,UAAU,CAAE,KAAM,OAAQ,GAAGD,EAAU,SAASC,CAAO,CAAE,CAAC,CAC1E,CACA,SAASA,EAAS,CACd,OAAI,OAAOA,GAAY,SACZ,KAAK,UAAU,CAClB,KAAM,WACN,UAAW,KACX,OAAQ,GACR,MAAO,GACP,QAASA,CACb,CAAC,EAEE,KAAK,UAAU,CAClB,KAAM,WACN,UAAW,OAAOA,GAAS,UAAc,IAAc,KAAOA,GAAS,UACvE,OAAQA,GAAS,QAAU,GAC3B,MAAOA,GAAS,OAAS,GACzB,GAAGD,EAAU,SAASC,GAAS,OAAO,CAC1C,CAAC,CACL,CACA,KAAK5M,EAAS,CACV,OAAO,KAAK,UAAU,CAAE,KAAM,OAAQ,QAAAA,CAAQ,CAAC,CACnD,CACA,KAAK4M,EAAS,CACV,OAAI,OAAOA,GAAY,SACZ,KAAK,UAAU,CAClB,KAAM,OACN,UAAW,KACX,QAASA,CACb,CAAC,EAEE,KAAK,UAAU,CAClB,KAAM,OACN,UAAW,OAAOA,GAAS,UAAc,IAAc,KAAOA,GAAS,UACvE,GAAGD,EAAU,SAASC,GAAS,OAAO,CAC1C,CAAC,CACL,CACA,SAAS5M,EAAS,CACd,OAAO,KAAK,UAAU,CAAE,KAAM,WAAY,GAAG2M,EAAU,SAAS3M,CAAO,CAAE,CAAC,CAC9E,CACA,MAAMO,EAAOP,EAAS,CAClB,OAAO,KAAK,UAAU,CAClB,KAAM,QACN,MAAOO,EACP,GAAGoM,EAAU,SAAS3M,CAAO,CACjC,CAAC,CACL,CACA,SAAS4K,EAAOgC,EAAS,CACrB,OAAO,KAAK,UAAU,CAClB,KAAM,WACN,MAAOhC,EACP,SAAUgC,GAAS,SACnB,GAAGD,EAAU,SAASC,GAAS,OAAO,CAC1C,CAAC,CACL,CACA,WAAWhC,EAAO5K,EAAS,CACvB,OAAO,KAAK,UAAU,CAClB,KAAM,aACN,MAAO4K,EACP,GAAG+B,EAAU,SAAS3M,CAAO,CACjC,CAAC,CACL,CACA,SAAS4K,EAAO5K,EAAS,CACrB,OAAO,KAAK,UAAU,CAClB,KAAM,WACN,MAAO4K,EACP,GAAG+B,EAAU,SAAS3M,CAAO,CACjC,CAAC,CACL,CACA,IAAI6M,EAAW7M,EAAS,CACpB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO6M,EACP,GAAGF,EAAU,SAAS3M,CAAO,CACjC,CAAC,CACL,CACA,IAAI8M,EAAW9M,EAAS,CACpB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO8M,EACP,GAAGH,EAAU,SAAS3M,CAAO,CACjC,CAAC,CACL,CACA,OAAO+M,EAAK/M,EAAS,CACjB,OAAO,KAAK,UAAU,CAClB,KAAM,SACN,MAAO+M,EACP,GAAGJ,EAAU,SAAS3M,CAAO,CACjC,CAAC,CACL,CAIA,SAASA,EAAS,CACd,OAAO,KAAK,IAAI,EAAG2M,EAAU,SAAS3M,CAAO,CAAC,CAClD,CACA,MAAO,CACH,OAAO,IAAIoM,EAAU,CACjB,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQ,CAAE,KAAM,MAAO,CAAC,CAClD,CAAC,CACL,CACA,aAAc,CACV,OAAO,IAAIA,EAAU,CACjB,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQ,CAAE,KAAM,aAAc,CAAC,CACzD,CAAC,CACL,CACA,aAAc,CACV,OAAO,IAAIA,EAAU,CACjB,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQ,CAAE,KAAM,aAAc,CAAC,CACzD,CAAC,CACL,CACA,IAAI,YAAa,CACb,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMY,GAAOA,EAAG,OAAS,UAAU,CACjE,CACA,IAAI,QAAS,CACT,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,MAAM,CAC7D,CACA,IAAI,QAAS,CACT,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,MAAM,CAC7D,CACA,IAAI,YAAa,CACb,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,UAAU,CACjE,CACA,IAAI,SAAU,CACV,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,OAAO,CAC9D,CACA,IAAI,OAAQ,CACR,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,KAAK,CAC5D,CACA,IAAI,SAAU,CACV,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,OAAO,CAC9D,CACA,IAAI,QAAS,CACT,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,MAAM,CAC7D,CACA,IAAI,UAAW,CACX,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,QAAQ,CAC/D,CACA,IAAI,QAAS,CACT,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,MAAM,CAC7D,CACA,IAAI,SAAU,CACV,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,OAAO,CAC9D,CACA,IAAI,QAAS,CACT,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,MAAM,CAC7D,CACA,IAAI,MAAO,CACP,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,IAAI,CAC3D,CACA,IAAI,QAAS,CACT,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,MAAM,CAC7D,CACA,IAAI,UAAW,CACX,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,QAAQ,CAC/D,CACA,IAAI,aAAc,CAEd,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,WAAW,CAClE,CACA,IAAI,WAAY,CACZ,IAAIC,EAAM,KACV,QAAWD,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACRC,IAAQ,MAAQD,EAAG,MAAQC,KAC3BA,EAAMD,EAAG,OAGrB,OAAOC,CACX,CACA,IAAI,WAAY,CACZ,IAAIC,EAAM,KACV,QAAWF,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACRE,IAAQ,MAAQF,EAAG,MAAQE,KAC3BA,EAAMF,EAAG,OAGrB,OAAOE,CACX,CACJ,EACAzH,GAAU,OAAUjG,GACT,IAAIiG,GAAU,CACjB,OAAQ,CAAC,EACT,SAAU1B,EAAsB,UAChC,OAAQvE,GAAQ,QAAU,GAC1B,GAAGD,EAAoBC,CAAM,CACjC,CAAC,EAGIK,EAAA4B,GAAA,sBAQIiE,GAAN,MAAMyH,UAAkBvI,CAAQ,CAtiCvC,MAsiCuC,CAAA/E,EAAA,kBACnC,aAAc,CACV,MAAM,GAAG,SAAS,EAClB,KAAK,IAAM,KAAK,IAChB,KAAK,IAAM,KAAK,IAChB,KAAK,KAAO,KAAK,UACrB,CACA,OAAOqL,EAAO,CAKV,GAJI,KAAK,KAAK,SACVA,EAAM,KAAO,OAAOA,EAAM,IAAI,GAEf,KAAK,SAASA,CAAK,IACnBhI,EAAc,OAAQ,CACrC,IAAMnD,EAAM,KAAK,gBAAgBmL,CAAK,EACtC,OAAAmB,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,aACnB,SAAUvI,EAAc,OACxB,SAAUnD,EAAI,UAClB,CAAC,EACMuM,CACX,CACA,IAAIvM,EACEwM,EAAS,IAAIpB,EACnB,QAAW/G,KAAS,KAAK,KAAK,OACtBA,EAAM,OAAS,MACVhB,EAAK,UAAU8H,EAAM,IAAI,IAC1BnL,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,aACnB,SAAU,UACV,SAAU,QACV,QAASrH,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,GAGZnI,EAAM,OAAS,OACHA,EAAM,UAAY8G,EAAM,KAAO9G,EAAM,MAAQ8G,EAAM,MAAQ9G,EAAM,SAE9ErE,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,UACnB,QAASrH,EAAM,MACf,KAAM,SACN,UAAWA,EAAM,UACjB,MAAO,GACP,QAASA,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,GAGZnI,EAAM,OAAS,OACLA,EAAM,UAAY8G,EAAM,KAAO9G,EAAM,MAAQ8G,EAAM,MAAQ9G,EAAM,SAE5ErE,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,QACnB,QAASrH,EAAM,MACf,KAAM,SACN,UAAWA,EAAM,UACjB,MAAO,GACP,QAASA,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,GAGZnI,EAAM,OAAS,aAChB3C,GAAmByJ,EAAM,KAAM9G,EAAM,KAAK,IAAM,IAChDrE,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,gBACnB,WAAYrH,EAAM,MAClB,QAASA,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,GAGZnI,EAAM,OAAS,SACf,OAAO,SAAS8G,EAAM,IAAI,IAC3BnL,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,WACnB,QAASrH,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,GAIjBnJ,EAAK,YAAYgB,CAAK,EAG9B,MAAO,CAAE,OAAQmI,EAAO,MAAO,MAAOrB,EAAM,IAAK,CACrD,CACA,IAAIN,EAAO5K,EAAS,CAChB,OAAO,KAAK,SAAS,MAAO4K,EAAO,GAAM+B,EAAU,SAAS3M,CAAO,CAAC,CACxE,CACA,GAAG4K,EAAO5K,EAAS,CACf,OAAO,KAAK,SAAS,MAAO4K,EAAO,GAAO+B,EAAU,SAAS3M,CAAO,CAAC,CACzE,CACA,IAAI4K,EAAO5K,EAAS,CAChB,OAAO,KAAK,SAAS,MAAO4K,EAAO,GAAM+B,EAAU,SAAS3M,CAAO,CAAC,CACxE,CACA,GAAG4K,EAAO5K,EAAS,CACf,OAAO,KAAK,SAAS,MAAO4K,EAAO,GAAO+B,EAAU,SAAS3M,CAAO,CAAC,CACzE,CACA,SAASoN,EAAMxC,EAAOyC,EAAWrN,EAAS,CACtC,OAAO,IAAImN,EAAU,CACjB,GAAG,KAAK,KACR,OAAQ,CACJ,GAAG,KAAK,KAAK,OACb,CACI,KAAAC,EACA,MAAAxC,EACA,UAAAyC,EACA,QAASV,EAAU,SAAS3M,CAAO,CACvC,CACJ,CACJ,CAAC,CACL,CACA,UAAUoE,EAAO,CACb,OAAO,IAAI+I,EAAU,CACjB,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQ/I,CAAK,CACvC,CAAC,CACL,CACA,IAAIpE,EAAS,CACT,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,QAAS2M,EAAU,SAAS3M,CAAO,CACvC,CAAC,CACL,CACA,SAASA,EAAS,CACd,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,EACP,UAAW,GACX,QAAS2M,EAAU,SAAS3M,CAAO,CACvC,CAAC,CACL,CACA,SAASA,EAAS,CACd,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,EACP,UAAW,GACX,QAAS2M,EAAU,SAAS3M,CAAO,CACvC,CAAC,CACL,CACA,YAAYA,EAAS,CACjB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,EACP,UAAW,GACX,QAAS2M,EAAU,SAAS3M,CAAO,CACvC,CAAC,CACL,CACA,YAAYA,EAAS,CACjB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,EACP,UAAW,GACX,QAAS2M,EAAU,SAAS3M,CAAO,CACvC,CAAC,CACL,CACA,WAAW4K,EAAO5K,EAAS,CACvB,OAAO,KAAK,UAAU,CAClB,KAAM,aACN,MAAO4K,EACP,QAAS+B,EAAU,SAAS3M,CAAO,CACvC,CAAC,CACL,CACA,OAAOA,EAAS,CACZ,OAAO,KAAK,UAAU,CAClB,KAAM,SACN,QAAS2M,EAAU,SAAS3M,CAAO,CACvC,CAAC,CACL,CACA,KAAKA,EAAS,CACV,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,UAAW,GACX,MAAO,OAAO,iBACd,QAAS2M,EAAU,SAAS3M,CAAO,CACvC,CAAC,EAAE,UAAU,CACT,KAAM,MACN,UAAW,GACX,MAAO,OAAO,iBACd,QAAS2M,EAAU,SAAS3M,CAAO,CACvC,CAAC,CACL,CACA,IAAI,UAAW,CACX,IAAIiN,EAAM,KACV,QAAWD,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACRC,IAAQ,MAAQD,EAAG,MAAQC,KAC3BA,EAAMD,EAAG,OAGrB,OAAOC,CACX,CACA,IAAI,UAAW,CACX,IAAIC,EAAM,KACV,QAAWF,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACRE,IAAQ,MAAQF,EAAG,MAAQE,KAC3BA,EAAMF,EAAG,OAGrB,OAAOE,CACX,CACA,IAAI,OAAQ,CACR,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMF,GAAOA,EAAG,OAAS,OAAUA,EAAG,OAAS,cAAgB5J,EAAK,UAAU4J,EAAG,KAAK,CAAE,CACtH,CACA,IAAI,UAAW,CACX,IAAIE,EAAM,KACND,EAAM,KACV,QAAWD,KAAM,KAAK,KAAK,OAAQ,CAC/B,GAAIA,EAAG,OAAS,UAAYA,EAAG,OAAS,OAASA,EAAG,OAAS,aACzD,MAAO,GAEFA,EAAG,OAAS,OACbC,IAAQ,MAAQD,EAAG,MAAQC,KAC3BA,EAAMD,EAAG,OAERA,EAAG,OAAS,QACbE,IAAQ,MAAQF,EAAG,MAAQE,KAC3BA,EAAMF,EAAG,MAErB,CACA,OAAO,OAAO,SAASC,CAAG,GAAK,OAAO,SAASC,CAAG,CACtD,CACJ,EACAxH,GAAU,OAAUlG,GACT,IAAIkG,GAAU,CACjB,OAAQ,CAAC,EACT,SAAU3B,EAAsB,UAChC,OAAQvE,GAAQ,QAAU,GAC1B,GAAGD,EAAoBC,CAAM,CACjC,CAAC,EAEQmG,GAAN,MAAM2H,UAAkB1I,CAAQ,CArxCvC,MAqxCuC,CAAA/E,EAAA,kBACnC,aAAc,CACV,MAAM,GAAG,SAAS,EAClB,KAAK,IAAM,KAAK,IAChB,KAAK,IAAM,KAAK,GACpB,CACA,OAAOqL,EAAO,CACV,GAAI,KAAK,KAAK,OACV,GAAI,CACAA,EAAM,KAAO,OAAOA,EAAM,IAAI,CAClC,MACM,CACF,OAAO,KAAK,iBAAiBA,CAAK,CACtC,CAGJ,GADmB,KAAK,SAASA,CAAK,IACnBhI,EAAc,OAC7B,OAAO,KAAK,iBAAiBgI,CAAK,EAEtC,IAAInL,EACEwM,EAAS,IAAIpB,EACnB,QAAW/G,KAAS,KAAK,KAAK,OACtBA,EAAM,OAAS,OACEA,EAAM,UAAY8G,EAAM,KAAO9G,EAAM,MAAQ8G,EAAM,MAAQ9G,EAAM,SAE9ErE,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,UACnB,KAAM,SACN,QAASrH,EAAM,MACf,UAAWA,EAAM,UACjB,QAASA,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,GAGZnI,EAAM,OAAS,OACLA,EAAM,UAAY8G,EAAM,KAAO9G,EAAM,MAAQ8G,EAAM,MAAQ9G,EAAM,SAE5ErE,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,QACnB,KAAM,SACN,QAASrH,EAAM,MACf,UAAWA,EAAM,UACjB,QAASA,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,GAGZnI,EAAM,OAAS,aAChB8G,EAAM,KAAO9G,EAAM,QAAU,OAAO,CAAC,IACrCrE,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,gBACnB,WAAYrH,EAAM,MAClB,QAASA,EAAM,OACnB,CAAC,EACDmI,EAAO,MAAM,GAIjBnJ,EAAK,YAAYgB,CAAK,EAG9B,MAAO,CAAE,OAAQmI,EAAO,MAAO,MAAOrB,EAAM,IAAK,CACrD,CACA,iBAAiBA,EAAO,CACpB,IAAMnL,EAAM,KAAK,gBAAgBmL,CAAK,EACtC,OAAAmB,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,aACnB,SAAUvI,EAAc,OACxB,SAAUnD,EAAI,UAClB,CAAC,EACMuM,CACX,CACA,IAAI1B,EAAO5K,EAAS,CAChB,OAAO,KAAK,SAAS,MAAO4K,EAAO,GAAM+B,EAAU,SAAS3M,CAAO,CAAC,CACxE,CACA,GAAG4K,EAAO5K,EAAS,CACf,OAAO,KAAK,SAAS,MAAO4K,EAAO,GAAO+B,EAAU,SAAS3M,CAAO,CAAC,CACzE,CACA,IAAI4K,EAAO5K,EAAS,CAChB,OAAO,KAAK,SAAS,MAAO4K,EAAO,GAAM+B,EAAU,SAAS3M,CAAO,CAAC,CACxE,CACA,GAAG4K,EAAO5K,EAAS,CACf,OAAO,KAAK,SAAS,MAAO4K,EAAO,GAAO+B,EAAU,SAAS3M,CAAO,CAAC,CACzE,CACA,SAASoN,EAAMxC,EAAOyC,EAAWrN,EAAS,CACtC,OAAO,IAAIsN,EAAU,CACjB,GAAG,KAAK,KACR,OAAQ,CACJ,GAAG,KAAK,KAAK,OACb,CACI,KAAAF,EACA,MAAAxC,EACA,UAAAyC,EACA,QAASV,EAAU,SAAS3M,CAAO,CACvC,CACJ,CACJ,CAAC,CACL,CACA,UAAUoE,EAAO,CACb,OAAO,IAAIkJ,EAAU,CACjB,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQlJ,CAAK,CACvC,CAAC,CACL,CACA,SAASpE,EAAS,CACd,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,OAAO,CAAC,EACf,UAAW,GACX,QAAS2M,EAAU,SAAS3M,CAAO,CACvC,CAAC,CACL,CACA,SAASA,EAAS,CACd,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,OAAO,CAAC,EACf,UAAW,GACX,QAAS2M,EAAU,SAAS3M,CAAO,CACvC,CAAC,CACL,CACA,YAAYA,EAAS,CACjB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,OAAO,CAAC,EACf,UAAW,GACX,QAAS2M,EAAU,SAAS3M,CAAO,CACvC,CAAC,CACL,CACA,YAAYA,EAAS,CACjB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,OAAO,CAAC,EACf,UAAW,GACX,QAAS2M,EAAU,SAAS3M,CAAO,CACvC,CAAC,CACL,CACA,WAAW4K,EAAO5K,EAAS,CACvB,OAAO,KAAK,UAAU,CAClB,KAAM,aACN,MAAA4K,EACA,QAAS+B,EAAU,SAAS3M,CAAO,CACvC,CAAC,CACL,CACA,IAAI,UAAW,CACX,IAAIiN,EAAM,KACV,QAAWD,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACRC,IAAQ,MAAQD,EAAG,MAAQC,KAC3BA,EAAMD,EAAG,OAGrB,OAAOC,CACX,CACA,IAAI,UAAW,CACX,IAAIC,EAAM,KACV,QAAWF,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACRE,IAAQ,MAAQF,EAAG,MAAQE,KAC3BA,EAAMF,EAAG,OAGrB,OAAOE,CACX,CACJ,EACAvH,GAAU,OAAUnG,GACT,IAAImG,GAAU,CACjB,OAAQ,CAAC,EACT,SAAU5B,EAAsB,UAChC,OAAQvE,GAAQ,QAAU,GAC1B,GAAGD,EAAoBC,CAAM,CACjC,CAAC,EAEQoG,GAAN,cAAyBhB,CAAQ,CAr8CxC,MAq8CwC,CAAA/E,EAAA,mBACpC,OAAOqL,EAAO,CAKV,GAJI,KAAK,KAAK,SACVA,EAAM,KAAO,EAAQA,EAAM,MAEZ,KAAK,SAASA,CAAK,IACnBhI,EAAc,QAAS,CACtC,IAAMnD,EAAM,KAAK,gBAAgBmL,CAAK,EACtC,OAAAmB,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,aACnB,SAAUvI,EAAc,QACxB,SAAUnD,EAAI,UAClB,CAAC,EACMuM,CACX,CACA,OAAOiB,EAAGrC,EAAM,IAAI,CACxB,CACJ,EACAtF,GAAW,OAAUpG,GACV,IAAIoG,GAAW,CAClB,SAAU7B,EAAsB,WAChC,OAAQvE,GAAQ,QAAU,GAC1B,GAAGD,EAAoBC,CAAM,CACjC,CAAC,EAEQqG,GAAN,MAAM2H,UAAgB5I,CAAQ,CA99CrC,MA89CqC,CAAA/E,EAAA,gBACjC,OAAOqL,EAAO,CAKV,GAJI,KAAK,KAAK,SACVA,EAAM,KAAO,IAAI,KAAKA,EAAM,IAAI,GAEjB,KAAK,SAASA,CAAK,IACnBhI,EAAc,KAAM,CACnC,IAAMnD,EAAM,KAAK,gBAAgBmL,CAAK,EACtC,OAAAmB,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,aACnB,SAAUvI,EAAc,KACxB,SAAUnD,EAAI,UAClB,CAAC,EACMuM,CACX,CACA,GAAI,OAAO,MAAMpB,EAAM,KAAK,QAAQ,CAAC,EAAG,CACpC,IAAMnL,EAAM,KAAK,gBAAgBmL,CAAK,EACtC,OAAAmB,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,YACvB,CAAC,EACMa,CACX,CACA,IAAMC,EAAS,IAAIpB,EACfpL,EACJ,QAAWqE,KAAS,KAAK,KAAK,OACtBA,EAAM,OAAS,MACX8G,EAAM,KAAK,QAAQ,EAAI9G,EAAM,QAC7BrE,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,UACnB,QAASrH,EAAM,QACf,UAAW,GACX,MAAO,GACP,QAASA,EAAM,MACf,KAAM,MACV,CAAC,EACDmI,EAAO,MAAM,GAGZnI,EAAM,OAAS,MAChB8G,EAAM,KAAK,QAAQ,EAAI9G,EAAM,QAC7BrE,EAAM,KAAK,gBAAgBmL,EAAOnL,CAAG,EACrCsM,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,QACnB,QAASrH,EAAM,QACf,UAAW,GACX,MAAO,GACP,QAASA,EAAM,MACf,KAAM,MACV,CAAC,EACDmI,EAAO,MAAM,GAIjBnJ,EAAK,YAAYgB,CAAK,EAG9B,MAAO,CACH,OAAQmI,EAAO,MACf,MAAO,IAAI,KAAKrB,EAAM,KAAK,QAAQ,CAAC,CACxC,CACJ,CACA,UAAU9G,EAAO,CACb,OAAO,IAAIoJ,EAAQ,CACf,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQpJ,CAAK,CACvC,CAAC,CACL,CACA,IAAIqJ,EAASzN,EAAS,CAClB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAOyN,EAAQ,QAAQ,EACvB,QAASd,EAAU,SAAS3M,CAAO,CACvC,CAAC,CACL,CACA,IAAI0N,EAAS1N,EAAS,CAClB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO0N,EAAQ,QAAQ,EACvB,QAASf,EAAU,SAAS3M,CAAO,CACvC,CAAC,CACL,CACA,IAAI,SAAU,CACV,IAAIiN,EAAM,KACV,QAAWD,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACRC,IAAQ,MAAQD,EAAG,MAAQC,KAC3BA,EAAMD,EAAG,OAGrB,OAAOC,GAAO,KAAO,IAAI,KAAKA,CAAG,EAAI,IACzC,CACA,IAAI,SAAU,CACV,IAAIC,EAAM,KACV,QAAWF,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACRE,IAAQ,MAAQF,EAAG,MAAQE,KAC3BA,EAAMF,EAAG,OAGrB,OAAOE,GAAO,KAAO,IAAI,KAAKA,CAAG,EAAI,IACzC,CACJ,EACArH,GAAQ,OAAUrG,GACP,IAAIqG,GAAQ,CACf,OAAQ,CAAC,EACT,OAAQrG,GAAQ,QAAU,GAC1B,SAAUuE,EAAsB,QAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,EAEQsG,GAAN,cAAwBlB,CAAQ,CA7kDvC,MA6kDuC,CAAA/E,EAAA,kBACnC,OAAOqL,EAAO,CAEV,GADmB,KAAK,SAASA,CAAK,IACnBhI,EAAc,OAAQ,CACrC,IAAMnD,EAAM,KAAK,gBAAgBmL,CAAK,EACtC,OAAAmB,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,aACnB,SAAUvI,EAAc,OACxB,SAAUnD,EAAI,UAClB,CAAC,EACMuM,CACX,CACA,OAAOiB,EAAGrC,EAAM,IAAI,CACxB,CACJ,EACApF,GAAU,OAAUtG,GACT,IAAIsG,GAAU,CACjB,SAAU/B,EAAsB,UAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,EAEQuG,GAAN,cAA2BnB,CAAQ,CAlmD1C,MAkmD0C,CAAA/E,EAAA,qBACtC,OAAOqL,EAAO,CAEV,GADmB,KAAK,SAASA,CAAK,IACnBhI,EAAc,UAAW,CACxC,IAAMnD,EAAM,KAAK,gBAAgBmL,CAAK,EACtC,OAAAmB,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,aACnB,SAAUvI,EAAc,UACxB,SAAUnD,EAAI,UAClB,CAAC,EACMuM,CACX,CACA,OAAOiB,EAAGrC,EAAM,IAAI,CACxB,CACJ,EACAnF,GAAa,OAAUvG,GACZ,IAAIuG,GAAa,CACpB,SAAUhC,EAAsB,aAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,EAEQwG,GAAN,cAAsBpB,CAAQ,CAvnDrC,MAunDqC,CAAA/E,EAAA,gBACjC,OAAOqL,EAAO,CAEV,GADmB,KAAK,SAASA,CAAK,IACnBhI,EAAc,KAAM,CACnC,IAAMnD,EAAM,KAAK,gBAAgBmL,CAAK,EACtC,OAAAmB,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,aACnB,SAAUvI,EAAc,KACxB,SAAUnD,EAAI,UAClB,CAAC,EACMuM,CACX,CACA,OAAOiB,EAAGrC,EAAM,IAAI,CACxB,CACJ,EACAlF,GAAQ,OAAUxG,GACP,IAAIwG,GAAQ,CACf,SAAUjC,EAAsB,QAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,EAEQ+E,GAAN,cAAqBK,CAAQ,CA5oDpC,MA4oDoC,CAAA/E,EAAA,eAChC,aAAc,CACV,MAAM,GAAG,SAAS,EAElB,KAAK,KAAO,EAChB,CACA,OAAOqL,EAAO,CACV,OAAOqC,EAAGrC,EAAM,IAAI,CACxB,CACJ,EACA3G,GAAO,OAAU/E,GACN,IAAI+E,GAAO,CACd,SAAUR,EAAsB,OAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,EAEQyG,GAAN,cAAyBrB,CAAQ,CA5pDxC,MA4pDwC,CAAA/E,EAAA,mBACpC,aAAc,CACV,MAAM,GAAG,SAAS,EAElB,KAAK,SAAW,EACpB,CACA,OAAOqL,EAAO,CACV,OAAOqC,EAAGrC,EAAM,IAAI,CACxB,CACJ,EACAjF,GAAW,OAAUzG,GACV,IAAIyG,GAAW,CAClB,SAAUlC,EAAsB,WAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,EAEQ0G,GAAN,cAAuBtB,CAAQ,CA5qDtC,MA4qDsC,CAAA/E,EAAA,iBAClC,OAAOqL,EAAO,CACV,IAAMnL,EAAM,KAAK,gBAAgBmL,CAAK,EACtC,OAAAmB,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,aACnB,SAAUvI,EAAc,MACxB,SAAUnD,EAAI,UAClB,CAAC,EACMuM,CACX,CACJ,EACApG,GAAS,OAAU1G,GACR,IAAI0G,GAAS,CAChB,SAAUnC,EAAsB,SAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,EAEQ2G,GAAN,cAAsBvB,CAAQ,CA7rDrC,MA6rDqC,CAAA/E,EAAA,gBACjC,OAAOqL,EAAO,CAEV,GADmB,KAAK,SAASA,CAAK,IACnBhI,EAAc,UAAW,CACxC,IAAMnD,EAAM,KAAK,gBAAgBmL,CAAK,EACtC,OAAAmB,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,aACnB,SAAUvI,EAAc,KACxB,SAAUnD,EAAI,UAClB,CAAC,EACMuM,CACX,CACA,OAAOiB,EAAGrC,EAAM,IAAI,CACxB,CACJ,EACA/E,GAAQ,OAAU3G,GACP,IAAI2G,GAAQ,CACf,SAAUpC,EAAsB,QAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,EAEQgD,GAAN,MAAMmL,UAAiB/I,CAAQ,CAltDtC,MAktDsC,CAAA/E,EAAA,iBAClC,OAAOqL,EAAO,CACV,GAAM,CAAE,IAAAnL,EAAK,OAAAwM,CAAO,EAAI,KAAK,oBAAoBrB,CAAK,EAChDU,EAAM,KAAK,KACjB,GAAI7L,EAAI,aAAemD,EAAc,MACjC,OAAAmJ,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,aACnB,SAAUvI,EAAc,MACxB,SAAUnD,EAAI,UAClB,CAAC,EACMuM,EAEX,GAAIV,EAAI,cAAgB,KAAM,CAC1B,IAAMY,EAASzM,EAAI,KAAK,OAAS6L,EAAI,YAAY,MAC3Ca,EAAW1M,EAAI,KAAK,OAAS6L,EAAI,YAAY,OAC/CY,GAAUC,KACVJ,EAAkBtM,EAAK,CACnB,KAAMyM,EAASf,EAAa,QAAUA,EAAa,UACnD,QAAUgB,EAAWb,EAAI,YAAY,MAAQ,OAC7C,QAAUY,EAASZ,EAAI,YAAY,MAAQ,OAC3C,KAAM,QACN,UAAW,GACX,MAAO,GACP,QAASA,EAAI,YAAY,OAC7B,CAAC,EACDW,EAAO,MAAM,EAErB,CA2BA,GA1BIX,EAAI,YAAc,MACd7L,EAAI,KAAK,OAAS6L,EAAI,UAAU,QAChCS,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,UACnB,QAASG,EAAI,UAAU,MACvB,KAAM,QACN,UAAW,GACX,MAAO,GACP,QAASA,EAAI,UAAU,OAC3B,CAAC,EACDW,EAAO,MAAM,GAGjBX,EAAI,YAAc,MACd7L,EAAI,KAAK,OAAS6L,EAAI,UAAU,QAChCS,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,QACnB,QAASG,EAAI,UAAU,MACvB,KAAM,QACN,UAAW,GACX,MAAO,GACP,QAASA,EAAI,UAAU,OAC3B,CAAC,EACDW,EAAO,MAAM,GAGjBxM,EAAI,OAAO,MACX,OAAO,QAAQ,IAAI,CAAC,GAAGA,EAAI,IAAI,EAAE,IAAI,CAAC4C,EAAMiL,IACjChC,EAAI,KAAK,YAAY,IAAIlH,GAAmB3E,EAAK4C,EAAM5C,EAAI,KAAM6N,CAAC,CAAC,CAC7E,CAAC,EAAE,KAAM9C,GACCK,EAAY,WAAWoB,EAAQzB,CAAM,CAC/C,EAEL,IAAMA,EAAS,CAAC,GAAG/K,EAAI,IAAI,EAAE,IAAI,CAAC4C,EAAMiL,IAC7BhC,EAAI,KAAK,WAAW,IAAIlH,GAAmB3E,EAAK4C,EAAM5C,EAAI,KAAM6N,CAAC,CAAC,CAC5E,EACD,OAAOzC,EAAY,WAAWoB,EAAQzB,CAAM,CAChD,CACA,IAAI,SAAU,CACV,OAAO,KAAK,KAAK,IACrB,CACA,IAAI+B,EAAW7M,EAAS,CACpB,OAAO,IAAI2N,EAAS,CAChB,GAAG,KAAK,KACR,UAAW,CAAE,MAAOd,EAAW,QAASF,EAAU,SAAS3M,CAAO,CAAE,CACxE,CAAC,CACL,CACA,IAAI8M,EAAW9M,EAAS,CACpB,OAAO,IAAI2N,EAAS,CAChB,GAAG,KAAK,KACR,UAAW,CAAE,MAAOb,EAAW,QAASH,EAAU,SAAS3M,CAAO,CAAE,CACxE,CAAC,CACL,CACA,OAAO+M,EAAK/M,EAAS,CACjB,OAAO,IAAI2N,EAAS,CAChB,GAAG,KAAK,KACR,YAAa,CAAE,MAAOZ,EAAK,QAASJ,EAAU,SAAS3M,CAAO,CAAE,CACpE,CAAC,CACL,CACA,SAASA,EAAS,CACd,OAAO,KAAK,IAAI,EAAGA,CAAO,CAC9B,CACJ,EACAwC,GAAS,OAAS,CAACN,EAAQ1C,IAChB,IAAIgD,GAAS,CAChB,KAAMN,EACN,UAAW,KACX,UAAW,KACX,YAAa,KACb,SAAU6B,EAAsB,SAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,EAEIK,EAAAoC,GAAA,kBA+BIE,EAAN,MAAM0L,UAAkBjJ,CAAQ,CAt1DvC,MAs1DuC,CAAA/E,EAAA,kBACnC,aAAc,CACV,MAAM,GAAG,SAAS,EAClB,KAAK,QAAU,KAKf,KAAK,UAAY,KAAK,YAqCtB,KAAK,QAAU,KAAK,MACxB,CACA,YAAa,CACT,GAAI,KAAK,UAAY,KACjB,OAAO,KAAK,QAChB,IAAMiO,EAAQ,KAAK,KAAK,MAAM,EACxBC,EAAO3K,EAAK,WAAW0K,CAAK,EAClC,YAAK,QAAU,CAAE,MAAAA,EAAO,KAAAC,CAAK,EACtB,KAAK,OAChB,CACA,OAAO7C,EAAO,CAEV,GADmB,KAAK,SAASA,CAAK,IACnBhI,EAAc,OAAQ,CACrC,IAAMnD,EAAM,KAAK,gBAAgBmL,CAAK,EACtC,OAAAmB,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,aACnB,SAAUvI,EAAc,OACxB,SAAUnD,EAAI,UAClB,CAAC,EACMuM,CACX,CACA,GAAM,CAAE,OAAAC,EAAQ,IAAAxM,CAAI,EAAI,KAAK,oBAAoBmL,CAAK,EAChD,CAAE,MAAA4C,EAAO,KAAME,CAAU,EAAI,KAAK,WAAW,EAC7CC,EAAY,CAAC,EACnB,GAAI,EAAE,KAAK,KAAK,oBAAoB/H,IAAY,KAAK,KAAK,cAAgB,SACtE,QAAW7D,KAAOtC,EAAI,KACbiO,EAAU,SAAS3L,CAAG,GACvB4L,EAAU,KAAK5L,CAAG,EAI9B,IAAM6L,EAAQ,CAAC,EACf,QAAW7L,KAAO2L,EAAW,CACzB,IAAMG,EAAeL,EAAMzL,CAAG,EACxBuI,EAAQ7K,EAAI,KAAKsC,CAAG,EAC1B6L,EAAM,KAAK,CACP,IAAK,CAAE,OAAQ,QAAS,MAAO7L,CAAI,EACnC,MAAO8L,EAAa,OAAO,IAAIzJ,GAAmB3E,EAAK6K,EAAO7K,EAAI,KAAMsC,CAAG,CAAC,EAC5E,UAAWA,KAAOtC,EAAI,IAC1B,CAAC,CACL,CACA,GAAI,KAAK,KAAK,oBAAoBmG,GAAU,CACxC,IAAMkI,EAAc,KAAK,KAAK,YAC9B,GAAIA,IAAgB,cAChB,QAAW/L,KAAO4L,EACdC,EAAM,KAAK,CACP,IAAK,CAAE,OAAQ,QAAS,MAAO7L,CAAI,EACnC,MAAO,CAAE,OAAQ,QAAS,MAAOtC,EAAI,KAAKsC,CAAG,CAAE,CACnD,CAAC,UAGA+L,IAAgB,SACjBH,EAAU,OAAS,IACnB5B,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,kBACnB,KAAMwC,CACV,CAAC,EACD1B,EAAO,MAAM,WAGZ6B,IAAgB,QAGrB,MAAM,IAAI,MAAM,sDAAsD,CAE9E,KACK,CAED,IAAMC,EAAW,KAAK,KAAK,SAC3B,QAAWhM,KAAO4L,EAAW,CACzB,IAAMrD,EAAQ7K,EAAI,KAAKsC,CAAG,EAC1B6L,EAAM,KAAK,CACP,IAAK,CAAE,OAAQ,QAAS,MAAO7L,CAAI,EACnC,MAAOgM,EAAS,OAAO,IAAI3J,GAAmB3E,EAAK6K,EAAO7K,EAAI,KAAMsC,CAAG,CACvE,EACA,UAAWA,KAAOtC,EAAI,IAC1B,CAAC,CACL,CACJ,CACA,OAAIA,EAAI,OAAO,MACJ,QAAQ,QAAQ,EAClB,KAAK,SAAY,CAClB,IAAMuO,EAAY,CAAC,EACnB,QAAWC,KAAQL,EAAO,CACtB,IAAM7L,EAAM,MAAMkM,EAAK,IACjB3D,EAAQ,MAAM2D,EAAK,MACzBD,EAAU,KAAK,CACX,IAAAjM,EACA,MAAAuI,EACA,UAAW2D,EAAK,SACpB,CAAC,CACL,CACA,OAAOD,CACX,CAAC,EACI,KAAMA,GACAnD,EAAY,gBAAgBoB,EAAQ+B,CAAS,CACvD,EAGMnD,EAAY,gBAAgBoB,EAAQ2B,CAAK,CAExD,CACA,IAAI,OAAQ,CACR,OAAO,KAAK,KAAK,MAAM,CAC3B,CACA,OAAOlO,EAAS,CACZ,OAAA2M,EAAU,SACH,IAAIkB,EAAU,CACjB,GAAG,KAAK,KACR,YAAa,SACb,GAAI7N,IAAY,OACV,CACE,SAAUH,EAAA,CAAC2O,EAAOzO,IAAQ,CACtB,IAAM0O,EAAe,KAAK,KAAK,WAAWD,EAAOzO,CAAG,EAAE,SAAWA,EAAI,aACrE,OAAIyO,EAAM,OAAS,oBACR,CACH,QAAS7B,EAAU,SAAS3M,CAAO,EAAE,SAAWyO,CACpD,EACG,CACH,QAASA,CACb,CACJ,EATU,WAUd,EACE,CAAC,CACX,CAAC,CACL,CACA,OAAQ,CACJ,OAAO,IAAIZ,EAAU,CACjB,GAAG,KAAK,KACR,YAAa,OACjB,CAAC,CACL,CACA,aAAc,CACV,OAAO,IAAIA,EAAU,CACjB,GAAG,KAAK,KACR,YAAa,aACjB,CAAC,CACL,CAkBA,OAAOa,EAAc,CACjB,OAAO,IAAIb,EAAU,CACjB,GAAG,KAAK,KACR,MAAOhO,EAAA,KAAO,CACV,GAAG,KAAK,KAAK,MAAM,EACnB,GAAG6O,CACP,GAHO,QAIX,CAAC,CACL,CAMA,MAAMC,EAAS,CAUX,OATe,IAAId,EAAU,CACzB,YAAac,EAAQ,KAAK,YAC1B,SAAUA,EAAQ,KAAK,SACvB,MAAO9O,EAAA,KAAO,CACV,GAAG,KAAK,KAAK,MAAM,EACnB,GAAG8O,EAAQ,KAAK,MAAM,CAC1B,GAHO,SAIP,SAAU5K,EAAsB,SACpC,CAAC,CAEL,CAoCA,OAAO1B,EAAKH,EAAQ,CAChB,OAAO,KAAK,QAAQ,CAAE,CAACG,CAAG,EAAGH,CAAO,CAAC,CACzC,CAsBA,SAASuB,EAAO,CACZ,OAAO,IAAIoK,EAAU,CACjB,GAAG,KAAK,KACR,SAAUpK,CACd,CAAC,CACL,CACA,KAAKmL,EAAM,CACP,IAAMd,EAAQ,CAAC,EACf,QAAWzL,KAAOe,EAAK,WAAWwL,CAAI,EAC9BA,EAAKvM,CAAG,GAAK,KAAK,MAAMA,CAAG,IAC3ByL,EAAMzL,CAAG,EAAI,KAAK,MAAMA,CAAG,GAGnC,OAAO,IAAIwL,EAAU,CACjB,GAAG,KAAK,KACR,MAAOhO,EAAA,IAAMiO,EAAN,QACX,CAAC,CACL,CACA,KAAKc,EAAM,CACP,IAAMd,EAAQ,CAAC,EACf,QAAWzL,KAAOe,EAAK,WAAW,KAAK,KAAK,EACnCwL,EAAKvM,CAAG,IACTyL,EAAMzL,CAAG,EAAI,KAAK,MAAMA,CAAG,GAGnC,OAAO,IAAIwL,EAAU,CACjB,GAAG,KAAK,KACR,MAAOhO,EAAA,IAAMiO,EAAN,QACX,CAAC,CACL,CAIA,aAAc,CACV,OAAO7L,GAAe,IAAI,CAC9B,CACA,QAAQ2M,EAAM,CACV,IAAMxM,EAAW,CAAC,EAClB,QAAWC,KAAOe,EAAK,WAAW,KAAK,KAAK,EAAG,CAC3C,IAAMd,EAAc,KAAK,MAAMD,CAAG,EAC9BuM,GAAQ,CAACA,EAAKvM,CAAG,EACjBD,EAASC,CAAG,EAAIC,EAGhBF,EAASC,CAAG,EAAIC,EAAY,SAAS,CAE7C,CACA,OAAO,IAAIuL,EAAU,CACjB,GAAG,KAAK,KACR,MAAOhO,EAAA,IAAMuC,EAAN,QACX,CAAC,CACL,CACA,SAASwM,EAAM,CACX,IAAMxM,EAAW,CAAC,EAClB,QAAWC,KAAOe,EAAK,WAAW,KAAK,KAAK,EACxC,GAAIwL,GAAQ,CAACA,EAAKvM,CAAG,EACjBD,EAASC,CAAG,EAAI,KAAK,MAAMA,CAAG,MAE7B,CAED,IAAIwM,EADgB,KAAK,MAAMxM,CAAG,EAElC,KAAOwM,aAAoBtM,IACvBsM,EAAWA,EAAS,KAAK,UAE7BzM,EAASC,CAAG,EAAIwM,CACpB,CAEJ,OAAO,IAAIhB,EAAU,CACjB,GAAG,KAAK,KACR,MAAOhO,EAAA,IAAMuC,EAAN,QACX,CAAC,CACL,CACA,OAAQ,CACJ,OAAOwB,GAAcR,EAAK,WAAW,KAAK,KAAK,CAAC,CACpD,CACJ,EACAjB,EAAU,OAAS,CAAC2L,EAAOtO,IAChB,IAAI2C,EAAU,CACjB,MAAOtC,EAAA,IAAMiO,EAAN,SACP,YAAa,QACb,SAAU5H,GAAS,OAAO,EAC1B,SAAUnC,EAAsB,UAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,EAEL2C,EAAU,aAAe,CAAC2L,EAAOtO,IACtB,IAAI2C,EAAU,CACjB,MAAOtC,EAAA,IAAMiO,EAAN,SACP,YAAa,SACb,SAAU5H,GAAS,OAAO,EAC1B,SAAUnC,EAAsB,UAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,EAEL2C,EAAU,WAAa,CAAC2L,EAAOtO,IACpB,IAAI2C,EAAU,CACjB,MAAA2L,EACA,YAAa,QACb,SAAU5H,GAAS,OAAO,EAC1B,SAAUnC,EAAsB,UAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,EAEQ4G,GAAN,cAAuBxB,CAAQ,CA1tEtC,MA0tEsC,CAAA/E,EAAA,iBAClC,OAAOqL,EAAO,CACV,GAAM,CAAE,IAAAnL,CAAI,EAAI,KAAK,oBAAoBmL,CAAK,EACxC0B,EAAU,KAAK,KAAK,QAC1B,SAASkC,EAAcC,EAAS,CAE5B,QAAWjE,KAAUiE,EACjB,GAAIjE,EAAO,OAAO,SAAW,QACzB,OAAOA,EAAO,OAGtB,QAAWA,KAAUiE,EACjB,GAAIjE,EAAO,OAAO,SAAW,QAEzB,OAAA/K,EAAI,OAAO,OAAO,KAAK,GAAG+K,EAAO,IAAI,OAAO,MAAM,EAC3CA,EAAO,OAItB,IAAMkE,EAAcD,EAAQ,IAAKjE,GAAW,IAAIG,EAASH,EAAO,IAAI,OAAO,MAAM,CAAC,EAClF,OAAAuB,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,cACnB,YAAAuD,CACJ,CAAC,EACM1C,CACX,CACA,GAtBSzM,EAAAiP,EAAA,iBAsBL/O,EAAI,OAAO,MACX,OAAO,QAAQ,IAAI6M,EAAQ,IAAI,MAAOf,GAAW,CAC7C,IAAMoD,EAAW,CACb,GAAGlP,EACH,OAAQ,CACJ,GAAGA,EAAI,OACP,OAAQ,CAAC,CACb,EACA,OAAQ,IACZ,EACA,MAAO,CACH,OAAQ,MAAM8L,EAAO,YAAY,CAC7B,KAAM9L,EAAI,KACV,KAAMA,EAAI,KACV,OAAQkP,CACZ,CAAC,EACD,IAAKA,CACT,CACJ,CAAC,CAAC,EAAE,KAAKH,CAAa,EAErB,CACD,IAAII,EACEC,EAAS,CAAC,EAChB,QAAWtD,KAAUe,EAAS,CAC1B,IAAMqC,EAAW,CACb,GAAGlP,EACH,OAAQ,CACJ,GAAGA,EAAI,OACP,OAAQ,CAAC,CACb,EACA,OAAQ,IACZ,EACM+K,EAASe,EAAO,WAAW,CAC7B,KAAM9L,EAAI,KACV,KAAMA,EAAI,KACV,OAAQkP,CACZ,CAAC,EACD,GAAInE,EAAO,SAAW,QAClB,OAAOA,EAEFA,EAAO,SAAW,SAAW,CAACoE,IACnCA,EAAQ,CAAE,OAAApE,EAAQ,IAAKmE,CAAS,GAEhCA,EAAS,OAAO,OAAO,QACvBE,EAAO,KAAKF,EAAS,OAAO,MAAM,CAE1C,CACA,GAAIC,EACA,OAAAnP,EAAI,OAAO,OAAO,KAAK,GAAGmP,EAAM,IAAI,OAAO,MAAM,EAC1CA,EAAM,OAEjB,IAAMF,EAAcG,EAAO,IAAKA,GAAW,IAAIlE,EAASkE,CAAM,CAAC,EAC/D,OAAA9C,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,cACnB,YAAAuD,CACJ,CAAC,EACM1C,CACX,CACJ,CACA,IAAI,SAAU,CACV,OAAO,KAAK,KAAK,OACrB,CACJ,EACAlG,GAAS,OAAS,CAACgJ,EAAO5P,IACf,IAAI4G,GAAS,CAChB,QAASgJ,EACT,SAAUrL,EAAsB,SAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,EASC6G,GAAmBxG,EAACwP,GAClBA,aAAgBzI,GACTP,GAAiBgJ,EAAK,MAAM,EAE9BA,aAAgBrI,GACdX,GAAiBgJ,EAAK,UAAU,CAAC,EAEnCA,aAAgBxI,GACd,CAACwI,EAAK,KAAK,EAEbA,aAAgBvL,GACduL,EAAK,QAEPA,aAAgBvI,GAEd1D,EAAK,aAAaiM,EAAK,IAAI,EAE7BA,aAAgBpI,GACdZ,GAAiBgJ,EAAK,KAAK,SAAS,EAEtCA,aAAgBtJ,GACd,CAAC,MAAS,EAEZsJ,aAAgBrJ,GACd,CAAC,IAAI,EAEPqJ,aAAgB9M,GACd,CAAC,OAAW,GAAG8D,GAAiBgJ,EAAK,OAAO,CAAC,CAAC,EAEhDA,aAAgB5M,GACd,CAAC,KAAM,GAAG4D,GAAiBgJ,EAAK,OAAO,CAAC,CAAC,EAE3CA,aAAgBhI,IAGhBgI,aAAgB9H,GAFdlB,GAAiBgJ,EAAK,OAAO,CAAC,EAKhCA,aAAgBnI,GACdb,GAAiBgJ,EAAK,KAAK,SAAS,EAGpC,CAAC,EA1CS,oBA6CZ/I,GAAN,MAAMgJ,UAA8B1K,CAAQ,CA92EnD,MA82EmD,CAAA/E,EAAA,8BAC/C,OAAOqL,EAAO,CACV,GAAM,CAAE,IAAAnL,CAAI,EAAI,KAAK,oBAAoBmL,CAAK,EAC9C,GAAInL,EAAI,aAAemD,EAAc,OACjC,OAAAmJ,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,aACnB,SAAUvI,EAAc,OACxB,SAAUnD,EAAI,UAClB,CAAC,EACMuM,EAEX,IAAMiD,EAAgB,KAAK,cACrBC,EAAqBzP,EAAI,KAAKwP,CAAa,EAC3C1D,EAAS,KAAK,WAAW,IAAI2D,CAAkB,EACrD,OAAK3D,EAQD9L,EAAI,OAAO,MACJ8L,EAAO,YAAY,CACtB,KAAM9L,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,EAGM8L,EAAO,WAAW,CACrB,KAAM9L,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,GAnBDsM,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,4BACnB,QAAS,MAAM,KAAK,KAAK,WAAW,KAAK,CAAC,EAC1C,KAAM,CAAC8D,CAAa,CACxB,CAAC,EACMjD,EAgBf,CACA,IAAI,eAAgB,CAChB,OAAO,KAAK,KAAK,aACrB,CACA,IAAI,SAAU,CACV,OAAO,KAAK,KAAK,OACrB,CACA,IAAI,YAAa,CACb,OAAO,KAAK,KAAK,UACrB,CASA,OAAO,OAAOiD,EAAe3C,EAASpN,EAAQ,CAE1C,IAAMiQ,EAAa,IAAI,IAEvB,QAAWJ,KAAQzC,EAAS,CACxB,IAAM8C,EAAsBrJ,GAAiBgJ,EAAK,MAAME,CAAa,CAAC,EACtE,GAAI,CAACG,EAAoB,OACrB,MAAM,IAAI,MAAM,mCAAmCH,CAAa,mDAAmD,EAEvH,QAAW3E,KAAS8E,EAAqB,CACrC,GAAID,EAAW,IAAI7E,CAAK,EACpB,MAAM,IAAI,MAAM,0BAA0B,OAAO2E,CAAa,CAAC,wBAAwB,OAAO3E,CAAK,CAAC,EAAE,EAE1G6E,EAAW,IAAI7E,EAAOyE,CAAI,CAC9B,CACJ,CACA,OAAO,IAAIC,EAAsB,CAC7B,SAAUvL,EAAsB,sBAChC,cAAAwL,EACA,QAAA3C,EACA,WAAA6C,EACA,GAAGlQ,EAAoBC,CAAM,CACjC,CAAC,CACL,CACJ,EACSK,EAAA+C,GAAA,eA0CI2D,GAAN,cAA8B3B,CAAQ,CAv+E7C,MAu+E6C,CAAA/E,EAAA,wBACzC,OAAOqL,EAAO,CACV,GAAM,CAAE,OAAAqB,EAAQ,IAAAxM,CAAI,EAAI,KAAK,oBAAoBmL,CAAK,EAChDyE,EAAe9P,EAAA,CAAC+P,EAAYC,IAAgB,CAC9C,GAAIC,GAAUF,CAAU,GAAKE,GAAUD,CAAW,EAC9C,OAAOvD,EAEX,IAAMyD,EAASnN,GAAYgN,EAAW,MAAOC,EAAY,KAAK,EAC9D,OAAKE,EAAO,QAMRC,GAAQJ,CAAU,GAAKI,GAAQH,CAAW,IAC1CtD,EAAO,MAAM,EAEV,CAAE,OAAQA,EAAO,MAAO,MAAOwD,EAAO,IAAK,IAR9C1D,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,0BACvB,CAAC,EACMa,EAMf,EAfqB,gBAgBrB,OAAIvM,EAAI,OAAO,MACJ,QAAQ,IAAI,CACf,KAAK,KAAK,KAAK,YAAY,CACvB,KAAMA,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,EACD,KAAK,KAAK,MAAM,YAAY,CACxB,KAAMA,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,CACL,CAAC,EAAE,KAAK,CAAC,CAACkQ,EAAMC,CAAK,IAAMP,EAAaM,EAAMC,CAAK,CAAC,EAG7CP,EAAa,KAAK,KAAK,KAAK,WAAW,CAC1C,KAAM5P,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,EAAG,KAAK,KAAK,MAAM,WAAW,CAC3B,KAAMA,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,CAAC,CAEV,CACJ,EACAwG,GAAgB,OAAS,CAAC0J,EAAMC,EAAO1Q,IAC5B,IAAI+G,GAAgB,CACvB,KAAM0J,EACN,MAAOC,EACP,SAAUnM,EAAsB,gBAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,EAGQkD,GAAN,MAAMyN,UAAiBvL,CAAQ,CA9hFtC,MA8hFsC,CAAA/E,EAAA,iBAClC,OAAOqL,EAAO,CACV,GAAM,CAAE,OAAAqB,EAAQ,IAAAxM,CAAI,EAAI,KAAK,oBAAoBmL,CAAK,EACtD,GAAInL,EAAI,aAAemD,EAAc,MACjC,OAAAmJ,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,aACnB,SAAUvI,EAAc,MACxB,SAAUnD,EAAI,UAClB,CAAC,EACMuM,EAEX,GAAIvM,EAAI,KAAK,OAAS,KAAK,KAAK,MAAM,OAClC,OAAAsM,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,UACnB,QAAS,KAAK,KAAK,MAAM,OACzB,UAAW,GACX,MAAO,GACP,KAAM,OACV,CAAC,EACMa,EAGP,CADS,KAAK,KAAK,MACVvM,EAAI,KAAK,OAAS,KAAK,KAAK,MAAM,SAC3CsM,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,QACnB,QAAS,KAAK,KAAK,MAAM,OACzB,UAAW,GACX,MAAO,GACP,KAAM,OACV,CAAC,EACDc,EAAO,MAAM,GAEjB,IAAM6D,EAAQ,CAAC,GAAGrQ,EAAI,IAAI,EACrB,IAAI,CAAC4C,EAAM0N,IAAc,CAC1B,IAAMnO,EAAS,KAAK,KAAK,MAAMmO,CAAS,GAAK,KAAK,KAAK,KACvD,OAAKnO,EAEEA,EAAO,OAAO,IAAIwC,GAAmB3E,EAAK4C,EAAM5C,EAAI,KAAMsQ,CAAS,CAAC,EADhE,IAEf,CAAC,EACI,OAAQC,GAAM,CAAC,CAACA,CAAC,EACtB,OAAIvQ,EAAI,OAAO,MACJ,QAAQ,IAAIqQ,CAAK,EAAE,KAAMrB,GACrB5D,EAAY,WAAWoB,EAAQwC,CAAO,CAChD,EAGM5D,EAAY,WAAWoB,EAAQ6D,CAAK,CAEnD,CACA,IAAI,OAAQ,CACR,OAAO,KAAK,KAAK,KACrB,CACA,KAAKG,EAAM,CACP,OAAO,IAAIJ,EAAS,CAChB,GAAG,KAAK,KACR,KAAAI,CACJ,CAAC,CACL,CACJ,EACA7N,GAAS,OAAS,CAAC8N,EAAShR,IAAW,CACnC,GAAI,CAAC,MAAM,QAAQgR,CAAO,EACtB,MAAM,IAAI,MAAM,uDAAuD,EAE3E,OAAO,IAAI9N,GAAS,CAChB,MAAO8N,EACP,SAAUzM,EAAsB,SAChC,KAAM,KACN,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,CACL,EACagH,GAAN,MAAMiK,UAAkB7L,CAAQ,CApmFvC,MAomFuC,CAAA/E,EAAA,kBACnC,IAAI,WAAY,CACZ,OAAO,KAAK,KAAK,OACrB,CACA,IAAI,aAAc,CACd,OAAO,KAAK,KAAK,SACrB,CACA,OAAOqL,EAAO,CACV,GAAM,CAAE,OAAAqB,EAAQ,IAAAxM,CAAI,EAAI,KAAK,oBAAoBmL,CAAK,EACtD,GAAInL,EAAI,aAAemD,EAAc,OACjC,OAAAmJ,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,aACnB,SAAUvI,EAAc,OACxB,SAAUnD,EAAI,UAClB,CAAC,EACMuM,EAEX,IAAM4B,EAAQ,CAAC,EACTwC,EAAU,KAAK,KAAK,QACpBC,EAAY,KAAK,KAAK,UAC5B,QAAWtO,KAAOtC,EAAI,KAClBmO,EAAM,KAAK,CACP,IAAKwC,EAAQ,OAAO,IAAIhM,GAAmB3E,EAAKsC,EAAKtC,EAAI,KAAMsC,CAAG,CAAC,EACnE,MAAOsO,EAAU,OAAO,IAAIjM,GAAmB3E,EAAKA,EAAI,KAAKsC,CAAG,EAAGtC,EAAI,KAAMsC,CAAG,CAAC,EACjF,UAAWA,KAAOtC,EAAI,IAC1B,CAAC,EAEL,OAAIA,EAAI,OAAO,MACJoL,EAAY,iBAAiBoB,EAAQ2B,CAAK,EAG1C/C,EAAY,gBAAgBoB,EAAQ2B,CAAK,CAExD,CACA,IAAI,SAAU,CACV,OAAO,KAAK,KAAK,SACrB,CACA,OAAO,OAAO0C,EAAOC,EAAQC,EAAO,CAChC,OAAID,aAAkBjM,EACX,IAAI6L,EAAU,CACjB,QAASG,EACT,UAAWC,EACX,SAAU9M,EAAsB,UAChC,GAAGxE,EAAoBuR,CAAK,CAChC,CAAC,EAEE,IAAIL,EAAU,CACjB,QAAShL,GAAU,OAAO,EAC1B,UAAWmL,EACX,SAAU7M,EAAsB,UAChC,GAAGxE,EAAoBsR,CAAM,CACjC,CAAC,CACL,CACJ,EACapK,GAAN,cAAqB7B,CAAQ,CA1pFpC,MA0pFoC,CAAA/E,EAAA,eAChC,IAAI,WAAY,CACZ,OAAO,KAAK,KAAK,OACrB,CACA,IAAI,aAAc,CACd,OAAO,KAAK,KAAK,SACrB,CACA,OAAOqL,EAAO,CACV,GAAM,CAAE,OAAAqB,EAAQ,IAAAxM,CAAI,EAAI,KAAK,oBAAoBmL,CAAK,EACtD,GAAInL,EAAI,aAAemD,EAAc,IACjC,OAAAmJ,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,aACnB,SAAUvI,EAAc,IACxB,SAAUnD,EAAI,UAClB,CAAC,EACMuM,EAEX,IAAMoE,EAAU,KAAK,KAAK,QACpBC,EAAY,KAAK,KAAK,UACtBzC,EAAQ,CAAC,GAAGnO,EAAI,KAAK,QAAQ,CAAC,EAAE,IAAI,CAAC,CAACsC,EAAKuI,CAAK,EAAGnH,KAC9C,CACH,IAAKiN,EAAQ,OAAO,IAAIhM,GAAmB3E,EAAKsC,EAAKtC,EAAI,KAAM,CAAC0D,EAAO,KAAK,CAAC,CAAC,EAC9E,MAAOkN,EAAU,OAAO,IAAIjM,GAAmB3E,EAAK6K,EAAO7K,EAAI,KAAM,CAAC0D,EAAO,OAAO,CAAC,CAAC,CAC1F,EACH,EACD,GAAI1D,EAAI,OAAO,MAAO,CAClB,IAAMgR,EAAW,IAAI,IACrB,OAAO,QAAQ,QAAQ,EAAE,KAAK,SAAY,CACtC,QAAWxC,KAAQL,EAAO,CACtB,IAAM7L,EAAM,MAAMkM,EAAK,IACjB3D,EAAQ,MAAM2D,EAAK,MACzB,GAAIlM,EAAI,SAAW,WAAauI,EAAM,SAAW,UAC7C,OAAO0B,GAEPjK,EAAI,SAAW,SAAWuI,EAAM,SAAW,UAC3C2B,EAAO,MAAM,EAEjBwE,EAAS,IAAI1O,EAAI,MAAOuI,EAAM,KAAK,CACvC,CACA,MAAO,CAAE,OAAQ2B,EAAO,MAAO,MAAOwE,CAAS,CACnD,CAAC,CACL,KACK,CACD,IAAMA,EAAW,IAAI,IACrB,QAAWxC,KAAQL,EAAO,CACtB,IAAM7L,EAAMkM,EAAK,IACX3D,EAAQ2D,EAAK,MACnB,GAAIlM,EAAI,SAAW,WAAauI,EAAM,SAAW,UAC7C,OAAO0B,GAEPjK,EAAI,SAAW,SAAWuI,EAAM,SAAW,UAC3C2B,EAAO,MAAM,EAEjBwE,EAAS,IAAI1O,EAAI,MAAOuI,EAAM,KAAK,CACvC,CACA,MAAO,CAAE,OAAQ2B,EAAO,MAAO,MAAOwE,CAAS,CACnD,CACJ,CACJ,EACAtK,GAAO,OAAS,CAACiK,EAASC,EAAWnR,IAC1B,IAAIiH,GAAO,CACd,UAAAkK,EACA,QAAAD,EACA,SAAU3M,EAAsB,OAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,EAEQkH,GAAN,MAAMsK,UAAepM,CAAQ,CA7tFpC,MA6tFoC,CAAA/E,EAAA,eAChC,OAAOqL,EAAO,CACV,GAAM,CAAE,OAAAqB,EAAQ,IAAAxM,CAAI,EAAI,KAAK,oBAAoBmL,CAAK,EACtD,GAAInL,EAAI,aAAemD,EAAc,IACjC,OAAAmJ,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,aACnB,SAAUvI,EAAc,IACxB,SAAUnD,EAAI,UAClB,CAAC,EACMuM,EAEX,IAAMV,EAAM,KAAK,KACbA,EAAI,UAAY,MACZ7L,EAAI,KAAK,KAAO6L,EAAI,QAAQ,QAC5BS,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,UACnB,QAASG,EAAI,QAAQ,MACrB,KAAM,MACN,UAAW,GACX,MAAO,GACP,QAASA,EAAI,QAAQ,OACzB,CAAC,EACDW,EAAO,MAAM,GAGjBX,EAAI,UAAY,MACZ7L,EAAI,KAAK,KAAO6L,EAAI,QAAQ,QAC5BS,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,QACnB,QAASG,EAAI,QAAQ,MACrB,KAAM,MACN,UAAW,GACX,MAAO,GACP,QAASA,EAAI,QAAQ,OACzB,CAAC,EACDW,EAAO,MAAM,GAGrB,IAAMoE,EAAY,KAAK,KAAK,UAC5B,SAASM,EAAYC,EAAU,CAC3B,IAAMC,EAAY,IAAI,IACtB,QAAWC,KAAWF,EAAU,CAC5B,GAAIE,EAAQ,SAAW,UACnB,OAAO9E,EACP8E,EAAQ,SAAW,SACnB7E,EAAO,MAAM,EACjB4E,EAAU,IAAIC,EAAQ,KAAK,CAC/B,CACA,MAAO,CAAE,OAAQ7E,EAAO,MAAO,MAAO4E,CAAU,CACpD,CAVStR,EAAAoR,EAAA,eAWT,IAAMC,EAAW,CAAC,GAAGnR,EAAI,KAAK,OAAO,CAAC,EAAE,IAAI,CAAC4C,EAAMiL,IAAM+C,EAAU,OAAO,IAAIjM,GAAmB3E,EAAK4C,EAAM5C,EAAI,KAAM6N,CAAC,CAAC,CAAC,EACzH,OAAI7N,EAAI,OAAO,MACJ,QAAQ,IAAImR,CAAQ,EAAE,KAAMA,GAAaD,EAAYC,CAAQ,CAAC,EAG9DD,EAAYC,CAAQ,CAEnC,CACA,IAAIG,EAASrR,EAAS,CAClB,OAAO,IAAIgR,EAAO,CACd,GAAG,KAAK,KACR,QAAS,CAAE,MAAOK,EAAS,QAAS1E,EAAU,SAAS3M,CAAO,CAAE,CACpE,CAAC,CACL,CACA,IAAIsR,EAAStR,EAAS,CAClB,OAAO,IAAIgR,EAAO,CACd,GAAG,KAAK,KACR,QAAS,CAAE,MAAOM,EAAS,QAAS3E,EAAU,SAAS3M,CAAO,CAAE,CACpE,CAAC,CACL,CACA,KAAKuR,EAAMvR,EAAS,CAChB,OAAO,KAAK,IAAIuR,EAAMvR,CAAO,EAAE,IAAIuR,EAAMvR,CAAO,CACpD,CACA,SAASA,EAAS,CACd,OAAO,KAAK,IAAI,EAAGA,CAAO,CAC9B,CACJ,EACA0G,GAAO,OAAS,CAACiK,EAAWnR,IACjB,IAAIkH,GAAO,CACd,UAAAiK,EACA,QAAS,KACT,QAAS,KACT,SAAU5M,EAAsB,OAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,EAEQmH,GAAN,MAAM6K,UAAoB5M,CAAQ,CAnzFzC,MAmzFyC,CAAA/E,EAAA,oBACrC,aAAc,CACV,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,KAAK,SACzB,CACA,OAAOqL,EAAO,CACV,GAAM,CAAE,IAAAnL,CAAI,EAAI,KAAK,oBAAoBmL,CAAK,EAC9C,GAAInL,EAAI,aAAemD,EAAc,SACjC,OAAAmJ,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,aACnB,SAAUvI,EAAc,SACxB,SAAUnD,EAAI,UAClB,CAAC,EACMuM,EAEX,SAASmF,EAAcvR,EAAM8K,EAAO,CAChC,OAAO0G,GAAU,CACb,KAAMxR,EACN,KAAMH,EAAI,KACV,UAAW,CAACA,EAAI,OAAO,mBAAoBA,EAAI,eAAgB4R,GAAY,EAAGC,EAAe,EAAE,OAAQtB,GAAM,CAAC,CAACA,CAAC,EAChH,UAAW,CACP,KAAM7E,EAAa,kBACnB,eAAgBT,CACpB,CACJ,CAAC,CACL,CAVSnL,EAAA4R,EAAA,iBAWT,SAASI,EAAiBC,EAAS9G,EAAO,CACtC,OAAO0G,GAAU,CACb,KAAMI,EACN,KAAM/R,EAAI,KACV,UAAW,CAACA,EAAI,OAAO,mBAAoBA,EAAI,eAAgB4R,GAAY,EAAGC,EAAe,EAAE,OAAQtB,GAAM,CAAC,CAACA,CAAC,EAChH,UAAW,CACP,KAAM7E,EAAa,oBACnB,gBAAiBT,CACrB,CACJ,CAAC,CACL,CAVSnL,EAAAgS,EAAA,oBAWT,IAAMrS,EAAS,CAAE,SAAUO,EAAI,OAAO,kBAAmB,EACnDgS,EAAKhS,EAAI,KACf,GAAI,KAAK,KAAK,mBAAmBgH,GAAY,CAIzC,IAAMiL,EAAK,KACX,OAAOzE,EAAG,kBAAmBrN,EAAM,CAC/B,IAAM8K,EAAQ,IAAIC,EAAS,CAAC,CAAC,EACvBgH,EAAa,MAAMD,EAAG,KAAK,KAAK,WAAW9R,EAAMV,CAAM,EAAE,MAAO0S,GAAM,CACxE,MAAAlH,EAAM,SAASyG,EAAcvR,EAAMgS,CAAC,CAAC,EAC/BlH,CACV,CAAC,EACKF,EAAS,MAAM,QAAQ,MAAMiH,EAAI,KAAME,CAAU,EAOvD,OANsB,MAAMD,EAAG,KAAK,QAAQ,KAAK,KAC5C,WAAWlH,EAAQtL,CAAM,EACzB,MAAO0S,GAAM,CACd,MAAAlH,EAAM,SAAS6G,EAAiB/G,EAAQoH,CAAC,CAAC,EACpClH,CACV,CAAC,CAEL,CAAC,CACL,KACK,CAID,IAAMgH,EAAK,KACX,OAAOzE,EAAG,YAAarN,EAAM,CACzB,IAAM+R,EAAaD,EAAG,KAAK,KAAK,UAAU9R,EAAMV,CAAM,EACtD,GAAI,CAACyS,EAAW,QACZ,MAAM,IAAIhH,EAAS,CAACwG,EAAcvR,EAAM+R,EAAW,KAAK,CAAC,CAAC,EAE9D,IAAMnH,EAAS,QAAQ,MAAMiH,EAAI,KAAME,EAAW,IAAI,EAChDE,EAAgBH,EAAG,KAAK,QAAQ,UAAUlH,EAAQtL,CAAM,EAC9D,GAAI,CAAC2S,EAAc,QACf,MAAM,IAAIlH,EAAS,CAAC4G,EAAiB/G,EAAQqH,EAAc,KAAK,CAAC,CAAC,EAEtE,OAAOA,EAAc,IACzB,CAAC,CACL,CACJ,CACA,YAAa,CACT,OAAO,KAAK,KAAK,IACrB,CACA,YAAa,CACT,OAAO,KAAK,KAAK,OACrB,CACA,QAAQ/B,EAAO,CACX,OAAO,IAAIoB,EAAY,CACnB,GAAG,KAAK,KACR,KAAM9O,GAAS,OAAO0N,CAAK,EAAE,KAAKnK,GAAW,OAAO,CAAC,CACzD,CAAC,CACL,CACA,QAAQmM,EAAY,CAChB,OAAO,IAAIZ,EAAY,CACnB,GAAG,KAAK,KACR,QAASY,CACb,CAAC,CACL,CACA,UAAUC,EAAM,CAEZ,OADsB,KAAK,MAAMA,CAAI,CAEzC,CACA,gBAAgBA,EAAM,CAElB,OADsB,KAAK,MAAMA,CAAI,CAEzC,CACA,OAAO,OAAOnS,EAAM4R,EAAStS,EAAQ,CACjC,OAAO,IAAIgS,EAAY,CACnB,KAAOtR,GAAcwC,GAAS,OAAO,CAAC,CAAC,EAAE,KAAKuD,GAAW,OAAO,CAAC,EACjE,QAAS6L,GAAW7L,GAAW,OAAO,EACtC,SAAUlC,EAAsB,YAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,CACL,CACJ,EACaoH,GAAN,cAAsBhC,CAAQ,CAr6FrC,MAq6FqC,CAAA/E,EAAA,gBACjC,IAAI,QAAS,CACT,OAAO,KAAK,KAAK,OAAO,CAC5B,CACA,OAAOqL,EAAO,CACV,GAAM,CAAE,IAAAnL,CAAI,EAAI,KAAK,oBAAoBmL,CAAK,EAE9C,OADmB,KAAK,KAAK,OAAO,EAClB,OAAO,CAAE,KAAMnL,EAAI,KAAM,KAAMA,EAAI,KAAM,OAAQA,CAAI,CAAC,CAC5E,CACJ,EACA6G,GAAQ,OAAS,CAAC0L,EAAQ9S,IACf,IAAIoH,GAAQ,CACf,OAAQ0L,EACR,SAAUvO,EAAsB,QAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,EAEQqH,GAAN,cAAyBjC,CAAQ,CAt7FxC,MAs7FwC,CAAA/E,EAAA,mBACpC,OAAOqL,EAAO,CACV,GAAIA,EAAM,OAAS,KAAK,KAAK,MAAO,CAChC,IAAMnL,EAAM,KAAK,gBAAgBmL,CAAK,EACtC,OAAAmB,EAAkBtM,EAAK,CACnB,SAAUA,EAAI,KACd,KAAM0L,EAAa,gBACnB,SAAU,KAAK,KAAK,KACxB,CAAC,EACMa,CACX,CACA,MAAO,CAAE,OAAQ,QAAS,MAAOpB,EAAM,IAAK,CAChD,CACA,IAAI,OAAQ,CACR,OAAO,KAAK,KAAK,KACrB,CACJ,EACArE,GAAW,OAAS,CAAC+D,EAAOpL,IACjB,IAAIqH,GAAW,CAClB,MAAO+D,EACP,SAAU7G,EAAsB,WAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,EAEIK,EAAA+D,GAAA,iBAOIE,GAAN,MAAMyO,UAAgB3N,CAAQ,CAr9FrC,MAq9FqC,CAAA/E,EAAA,gBACjC,OAAOqL,EAAO,CACV,GAAI,OAAOA,EAAM,MAAS,SAAU,CAChC,IAAMnL,EAAM,KAAK,gBAAgBmL,CAAK,EAChCsH,EAAiB,KAAK,KAAK,OACjC,OAAAnG,EAAkBtM,EAAK,CACnB,SAAUqD,EAAK,WAAWoP,CAAc,EACxC,SAAUzS,EAAI,WACd,KAAM0L,EAAa,YACvB,CAAC,EACMa,CACX,CAIA,GAHK,KAAK,SACN,KAAK,OAAS,IAAI,IAAI,KAAK,KAAK,MAAM,GAEtC,CAAC,KAAK,OAAO,IAAIpB,EAAM,IAAI,EAAG,CAC9B,IAAMnL,EAAM,KAAK,gBAAgBmL,CAAK,EAChCsH,EAAiB,KAAK,KAAK,OACjC,OAAAnG,EAAkBtM,EAAK,CACnB,SAAUA,EAAI,KACd,KAAM0L,EAAa,mBACnB,QAAS+G,CACb,CAAC,EACMlG,CACX,CACA,OAAOiB,EAAGrC,EAAM,IAAI,CACxB,CACA,IAAI,SAAU,CACV,OAAO,KAAK,KAAK,MACrB,CACA,IAAI,MAAO,CACP,IAAMuH,EAAa,CAAC,EACpB,QAAW/Q,KAAO,KAAK,KAAK,OACxB+Q,EAAW/Q,CAAG,EAAIA,EAEtB,OAAO+Q,CACX,CACA,IAAI,QAAS,CACT,IAAMA,EAAa,CAAC,EACpB,QAAW/Q,KAAO,KAAK,KAAK,OACxB+Q,EAAW/Q,CAAG,EAAIA,EAEtB,OAAO+Q,CACX,CACA,IAAI,MAAO,CACP,IAAMA,EAAa,CAAC,EACpB,QAAW/Q,KAAO,KAAK,KAAK,OACxB+Q,EAAW/Q,CAAG,EAAIA,EAEtB,OAAO+Q,CACX,CACA,QAAQ5O,EAAQ6O,EAAS,KAAK,KAAM,CAChC,OAAOH,EAAQ,OAAO1O,EAAQ,CAC1B,GAAG,KAAK,KACR,GAAG6O,CACP,CAAC,CACL,CACA,QAAQ7O,EAAQ6O,EAAS,KAAK,KAAM,CAChC,OAAOH,EAAQ,OAAO,KAAK,QAAQ,OAAQI,GAAQ,CAAC9O,EAAO,SAAS8O,CAAG,CAAC,EAAG,CACvE,GAAG,KAAK,KACR,GAAGD,CACP,CAAC,CACL,CACJ,EACA5O,GAAQ,OAASF,GACJkD,GAAN,cAA4BlC,CAAQ,CAthG3C,MAshG2C,CAAA/E,EAAA,sBACvC,OAAOqL,EAAO,CACV,IAAM0H,EAAmBxP,EAAK,mBAAmB,KAAK,KAAK,MAAM,EAC3DrD,EAAM,KAAK,gBAAgBmL,CAAK,EACtC,GAAInL,EAAI,aAAemD,EAAc,QAAUnD,EAAI,aAAemD,EAAc,OAAQ,CACpF,IAAMsP,EAAiBpP,EAAK,aAAawP,CAAgB,EACzD,OAAAvG,EAAkBtM,EAAK,CACnB,SAAUqD,EAAK,WAAWoP,CAAc,EACxC,SAAUzS,EAAI,WACd,KAAM0L,EAAa,YACvB,CAAC,EACMa,CACX,CAIA,GAHK,KAAK,SACN,KAAK,OAAS,IAAI,IAAIlJ,EAAK,mBAAmB,KAAK,KAAK,MAAM,CAAC,GAE/D,CAAC,KAAK,OAAO,IAAI8H,EAAM,IAAI,EAAG,CAC9B,IAAMsH,EAAiBpP,EAAK,aAAawP,CAAgB,EACzD,OAAAvG,EAAkBtM,EAAK,CACnB,SAAUA,EAAI,KACd,KAAM0L,EAAa,mBACnB,QAAS+G,CACb,CAAC,EACMlG,CACX,CACA,OAAOiB,EAAGrC,EAAM,IAAI,CACxB,CACA,IAAI,MAAO,CACP,OAAO,KAAK,KAAK,MACrB,CACJ,EACApE,GAAc,OAAS,CAACjD,EAAQrE,IACrB,IAAIsH,GAAc,CACrB,OAAQjD,EACR,SAAUE,EAAsB,cAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,EAEQuH,GAAN,cAAyBnC,CAAQ,CA5jGxC,MA4jGwC,CAAA/E,EAAA,mBACpC,QAAS,CACL,OAAO,KAAK,KAAK,IACrB,CACA,OAAOqL,EAAO,CACV,GAAM,CAAE,IAAAnL,CAAI,EAAI,KAAK,oBAAoBmL,CAAK,EAC9C,GAAInL,EAAI,aAAemD,EAAc,SAAWnD,EAAI,OAAO,QAAU,GACjE,OAAAsM,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,aACnB,SAAUvI,EAAc,QACxB,SAAUnD,EAAI,UAClB,CAAC,EACMuM,EAEX,IAAMuG,EAAc9S,EAAI,aAAemD,EAAc,QAAUnD,EAAI,KAAO,QAAQ,QAAQA,EAAI,IAAI,EAClG,OAAOwN,EAAGsF,EAAY,KAAM5O,GACjB,KAAK,KAAK,KAAK,WAAWA,EAAM,CACnC,KAAMlE,EAAI,KACV,SAAUA,EAAI,OAAO,kBACzB,CAAC,CACJ,CAAC,CACN,CACJ,EACAgH,GAAW,OAAS,CAAC7E,EAAQ1C,IAClB,IAAIuH,GAAW,CAClB,KAAM7E,EACN,SAAU6B,EAAsB,WAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,EAEQwH,GAAN,cAAyBpC,CAAQ,CA1lGxC,MA0lGwC,CAAA/E,EAAA,mBACpC,WAAY,CACR,OAAO,KAAK,KAAK,MACrB,CACA,YAAa,CACT,OAAO,KAAK,KAAK,OAAO,KAAK,WAAakE,EAAsB,WAC1D,KAAK,KAAK,OAAO,WAAW,EAC5B,KAAK,KAAK,MACpB,CACA,OAAOmH,EAAO,CACV,GAAM,CAAE,OAAAqB,EAAQ,IAAAxM,CAAI,EAAI,KAAK,oBAAoBmL,CAAK,EAChD4H,EAAS,KAAK,KAAK,QAAU,KAC7BC,EAAW,CACb,SAAUlT,EAACmT,GAAQ,CACf3G,EAAkBtM,EAAKiT,CAAG,EACtBA,EAAI,MACJzG,EAAO,MAAM,EAGbA,EAAO,MAAM,CAErB,EARU,YASV,IAAI,MAAO,CACP,OAAOxM,EAAI,IACf,CACJ,EAEA,GADAgT,EAAS,SAAWA,EAAS,SAAS,KAAKA,CAAQ,EAC/CD,EAAO,OAAS,aAAc,CAC9B,IAAMG,EAAYH,EAAO,UAAU/S,EAAI,KAAMgT,CAAQ,EACrD,GAAIhT,EAAI,OAAO,MACX,OAAO,QAAQ,QAAQkT,CAAS,EAAE,KAAK,MAAOA,GAAc,CACxD,GAAI1G,EAAO,QAAU,UACjB,OAAOD,EACX,IAAMxB,EAAS,MAAM,KAAK,KAAK,OAAO,YAAY,CAC9C,KAAMmI,EACN,KAAMlT,EAAI,KACV,OAAQA,CACZ,CAAC,EACD,OAAI+K,EAAO,SAAW,UACXwB,EACPxB,EAAO,SAAW,QACXoI,GAAMpI,EAAO,KAAK,EACzByB,EAAO,QAAU,QACV2G,GAAMpI,EAAO,KAAK,EACtBA,CACX,CAAC,EAEA,CACD,GAAIyB,EAAO,QAAU,UACjB,OAAOD,EACX,IAAMxB,EAAS,KAAK,KAAK,OAAO,WAAW,CACvC,KAAMmI,EACN,KAAMlT,EAAI,KACV,OAAQA,CACZ,CAAC,EACD,OAAI+K,EAAO,SAAW,UACXwB,EACPxB,EAAO,SAAW,QACXoI,GAAMpI,EAAO,KAAK,EACzByB,EAAO,QAAU,QACV2G,GAAMpI,EAAO,KAAK,EACtBA,CACX,CACJ,CACA,GAAIgI,EAAO,OAAS,aAAc,CAC9B,IAAMK,EAAoBtT,EAACuT,GAAQ,CAC/B,IAAMtI,EAASgI,EAAO,WAAWM,EAAKL,CAAQ,EAC9C,GAAIhT,EAAI,OAAO,MACX,OAAO,QAAQ,QAAQ+K,CAAM,EAEjC,GAAIA,aAAkB,QAClB,MAAM,IAAI,MAAM,2FAA2F,EAE/G,OAAOsI,CACX,EAT0B,qBAU1B,GAAIrT,EAAI,OAAO,QAAU,GAAO,CAC5B,IAAMsT,EAAQ,KAAK,KAAK,OAAO,WAAW,CACtC,KAAMtT,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,EACD,OAAIsT,EAAM,SAAW,UACV/G,GACP+G,EAAM,SAAW,SACjB9G,EAAO,MAAM,EAEjB4G,EAAkBE,EAAM,KAAK,EACtB,CAAE,OAAQ9G,EAAO,MAAO,MAAO8G,EAAM,KAAM,EACtD,KAEI,QAAO,KAAK,KAAK,OAAO,YAAY,CAAE,KAAMtT,EAAI,KAAM,KAAMA,EAAI,KAAM,OAAQA,CAAI,CAAC,EAAE,KAAMsT,GACnFA,EAAM,SAAW,UACV/G,GACP+G,EAAM,SAAW,SACjB9G,EAAO,MAAM,EACV4G,EAAkBE,EAAM,KAAK,EAAE,KAAK,KAChC,CAAE,OAAQ9G,EAAO,MAAO,MAAO8G,EAAM,KAAM,EACrD,EACJ,CAET,CACA,GAAIP,EAAO,OAAS,YAChB,GAAI/S,EAAI,OAAO,QAAU,GAAO,CAC5B,IAAMuT,EAAO,KAAK,KAAK,OAAO,WAAW,CACrC,KAAMvT,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,EACD,GAAI,CAACgL,GAAQuI,CAAI,EACb,OAAOhH,EACX,IAAMxB,EAASgI,EAAO,UAAUQ,EAAK,MAAOP,CAAQ,EACpD,GAAIjI,aAAkB,QAClB,MAAM,IAAI,MAAM,iGAAiG,EAErH,MAAO,CAAE,OAAQyB,EAAO,MAAO,MAAOzB,CAAO,CACjD,KAEI,QAAO,KAAK,KAAK,OAAO,YAAY,CAAE,KAAM/K,EAAI,KAAM,KAAMA,EAAI,KAAM,OAAQA,CAAI,CAAC,EAAE,KAAMuT,GAClFvI,GAAQuI,CAAI,EAEV,QAAQ,QAAQR,EAAO,UAAUQ,EAAK,MAAOP,CAAQ,CAAC,EAAE,KAAMjI,IAAY,CAC7E,OAAQyB,EAAO,MACf,MAAOzB,CACX,EAAE,EAJSwB,CAKd,EAGTlJ,EAAK,YAAY0P,CAAM,CAC3B,CACJ,EACA9L,GAAW,OAAS,CAAC9E,EAAQ4Q,EAAQtT,IAC1B,IAAIwH,GAAW,CAClB,OAAA9E,EACA,SAAU6B,EAAsB,WAChC,OAAA+O,EACA,GAAGvT,EAAoBC,CAAM,CACjC,CAAC,EAELwH,GAAW,qBAAuB,CAACuM,EAAYrR,EAAQ1C,IAC5C,IAAIwH,GAAW,CAClB,OAAA9E,EACA,OAAQ,CAAE,KAAM,aAAc,UAAWqR,CAAW,EACpD,SAAUxP,EAAsB,WAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,EAGQ+C,GAAN,cAA0BqC,CAAQ,CA7uGzC,MA6uGyC,CAAA/E,EAAA,oBACrC,OAAOqL,EAAO,CAEV,OADmB,KAAK,SAASA,CAAK,IACnBhI,EAAc,UACtBqK,EAAG,MAAS,EAEhB,KAAK,KAAK,UAAU,OAAOrC,CAAK,CAC3C,CACA,QAAS,CACL,OAAO,KAAK,KAAK,SACrB,CACJ,EACA3I,GAAY,OAAS,CAAC8M,EAAM7P,IACjB,IAAI+C,GAAY,CACnB,UAAW8M,EACX,SAAUtL,EAAsB,YAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,EAEQiD,GAAN,cAA0BmC,CAAQ,CAhwGzC,MAgwGyC,CAAA/E,EAAA,oBACrC,OAAOqL,EAAO,CAEV,OADmB,KAAK,SAASA,CAAK,IACnBhI,EAAc,KACtBqK,EAAG,IAAI,EAEX,KAAK,KAAK,UAAU,OAAOrC,CAAK,CAC3C,CACA,QAAS,CACL,OAAO,KAAK,KAAK,SACrB,CACJ,EACAzI,GAAY,OAAS,CAAC4M,EAAM7P,IACjB,IAAIiD,GAAY,CACnB,UAAW4M,EACX,SAAUtL,EAAsB,YAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,EAEQyH,GAAN,cAAyBrC,CAAQ,CAnxGxC,MAmxGwC,CAAA/E,EAAA,mBACpC,OAAOqL,EAAO,CACV,GAAM,CAAE,IAAAnL,CAAI,EAAI,KAAK,oBAAoBmL,CAAK,EAC1CjH,EAAOlE,EAAI,KACf,OAAIA,EAAI,aAAemD,EAAc,YACjCe,EAAO,KAAK,KAAK,aAAa,GAE3B,KAAK,KAAK,UAAU,OAAO,CAC9B,KAAAA,EACA,KAAMlE,EAAI,KACV,OAAQA,CACZ,CAAC,CACL,CACA,eAAgB,CACZ,OAAO,KAAK,KAAK,SACrB,CACJ,EACAkH,GAAW,OAAS,CAACoI,EAAM7P,IAChB,IAAIyH,GAAW,CAClB,UAAWoI,EACX,SAAUtL,EAAsB,WAChC,aAAc,OAAOvE,EAAO,SAAY,WAAaA,EAAO,QAAU,IAAMA,EAAO,QACnF,GAAGD,EAAoBC,CAAM,CACjC,CAAC,EAEQ0H,GAAN,cAAuBtC,CAAQ,CA5yGtC,MA4yGsC,CAAA/E,EAAA,iBAClC,OAAOqL,EAAO,CACV,GAAM,CAAE,IAAAnL,CAAI,EAAI,KAAK,oBAAoBmL,CAAK,EAExCsI,EAAS,CACX,GAAGzT,EACH,OAAQ,CACJ,GAAGA,EAAI,OACP,OAAQ,CAAC,CACb,CACJ,EACM+K,EAAS,KAAK,KAAK,UAAU,OAAO,CACtC,KAAM0I,EAAO,KACb,KAAMA,EAAO,KACb,OAAQ,CACJ,GAAGA,CACP,CACJ,CAAC,EACD,OAAIpI,GAAQN,CAAM,EACPA,EAAO,KAAMA,IACT,CACH,OAAQ,QACR,MAAOA,EAAO,SAAW,QACnBA,EAAO,MACP,KAAK,KAAK,WAAW,CACnB,IAAI,OAAQ,CACR,OAAO,IAAIG,EAASuI,EAAO,OAAO,MAAM,CAC5C,EACA,MAAOA,EAAO,IAClB,CAAC,CACT,EACH,EAGM,CACH,OAAQ,QACR,MAAO1I,EAAO,SAAW,QACnBA,EAAO,MACP,KAAK,KAAK,WAAW,CACnB,IAAI,OAAQ,CACR,OAAO,IAAIG,EAASuI,EAAO,OAAO,MAAM,CAC5C,EACA,MAAOA,EAAO,IAClB,CAAC,CACT,CAER,CACA,aAAc,CACV,OAAO,KAAK,KAAK,SACrB,CACJ,EACAtM,GAAS,OAAS,CAACmI,EAAM7P,IACd,IAAI0H,GAAS,CAChB,UAAWmI,EACX,SAAUtL,EAAsB,SAChC,WAAY,OAAOvE,EAAO,OAAU,WAAaA,EAAO,MAAQ,IAAMA,EAAO,MAC7E,GAAGD,EAAoBC,CAAM,CACjC,CAAC,EAEQ2H,GAAN,cAAqBvC,CAAQ,CAv2GpC,MAu2GoC,CAAA/E,EAAA,eAChC,OAAOqL,EAAO,CAEV,GADmB,KAAK,SAASA,CAAK,IACnBhI,EAAc,IAAK,CAClC,IAAMnD,EAAM,KAAK,gBAAgBmL,CAAK,EACtC,OAAAmB,EAAkBtM,EAAK,CACnB,KAAM0L,EAAa,aACnB,SAAUvI,EAAc,IACxB,SAAUnD,EAAI,UAClB,CAAC,EACMuM,CACX,CACA,MAAO,CAAE,OAAQ,QAAS,MAAOpB,EAAM,IAAK,CAChD,CACJ,EACA/D,GAAO,OAAU3H,GACN,IAAI2H,GAAO,CACd,SAAUpD,EAAsB,OAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,EAEQ4H,GAAQ,OAAO,WAAW,EAC1BC,GAAN,cAAyBzC,CAAQ,CA73GxC,MA63GwC,CAAA/E,EAAA,mBACpC,OAAOqL,EAAO,CACV,GAAM,CAAE,IAAAnL,CAAI,EAAI,KAAK,oBAAoBmL,CAAK,EACxCjH,EAAOlE,EAAI,KACjB,OAAO,KAAK,KAAK,KAAK,OAAO,CACzB,KAAAkE,EACA,KAAMlE,EAAI,KACV,OAAQA,CACZ,CAAC,CACL,CACA,QAAS,CACL,OAAO,KAAK,KAAK,IACrB,CACJ,EACauH,GAAN,MAAMmM,UAAoB7O,CAAQ,CA34GzC,MA24GyC,CAAA/E,EAAA,oBACrC,OAAOqL,EAAO,CACV,GAAM,CAAE,OAAAqB,EAAQ,IAAAxM,CAAI,EAAI,KAAK,oBAAoBmL,CAAK,EACtD,GAAInL,EAAI,OAAO,MAqBX,OApBoBF,EAAA,SAAY,CAC5B,IAAM6T,EAAW,MAAM,KAAK,KAAK,GAAG,YAAY,CAC5C,KAAM3T,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,EACD,OAAI2T,EAAS,SAAW,UACbpH,EACPoH,EAAS,SAAW,SACpBnH,EAAO,MAAM,EACN2G,GAAMQ,EAAS,KAAK,GAGpB,KAAK,KAAK,IAAI,YAAY,CAC7B,KAAMA,EAAS,MACf,KAAM3T,EAAI,KACV,OAAQA,CACZ,CAAC,CAET,EAnBoB,eAoBD,EAElB,CACD,IAAM2T,EAAW,KAAK,KAAK,GAAG,WAAW,CACrC,KAAM3T,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,EACD,OAAI2T,EAAS,SAAW,UACbpH,EACPoH,EAAS,SAAW,SACpBnH,EAAO,MAAM,EACN,CACH,OAAQ,QACR,MAAOmH,EAAS,KACpB,GAGO,KAAK,KAAK,IAAI,WAAW,CAC5B,KAAMA,EAAS,MACf,KAAM3T,EAAI,KACV,OAAQA,CACZ,CAAC,CAET,CACJ,CACA,OAAO,OAAO8C,EAAGC,EAAG,CAChB,OAAO,IAAI2Q,EAAY,CACnB,GAAI5Q,EACJ,IAAKC,EACL,SAAUiB,EAAsB,WACpC,CAAC,CACL,CACJ,EACawD,GAAN,cAA0B3C,CAAQ,CAr8GzC,MAq8GyC,CAAA/E,EAAA,oBACrC,OAAOqL,EAAO,CACV,IAAMJ,EAAS,KAAK,KAAK,UAAU,OAAOI,CAAK,EACzCyI,EAAS9T,EAACoE,IACR8G,GAAQ9G,CAAI,IACZA,EAAK,MAAQ,OAAO,OAAOA,EAAK,KAAK,GAElCA,GAJI,UAMf,OAAOmH,GAAQN,CAAM,EAAIA,EAAO,KAAM7G,GAAS0P,EAAO1P,CAAI,CAAC,EAAI0P,EAAO7I,CAAM,CAChF,CACA,QAAS,CACL,OAAO,KAAK,KAAK,SACrB,CACJ,EACAvD,GAAY,OAAS,CAAC8H,EAAM7P,IACjB,IAAI+H,GAAY,CACnB,UAAW8H,EACX,SAAUtL,EAAsB,YAChC,GAAGxE,EAAoBC,CAAM,CACjC,CAAC,EASIK,EAAAmE,GAAA,eAKOnE,EAAAsE,GAAA,UAkCHqD,GAAO,CAChB,OAAQrF,EAAU,UACtB,GAEC,SAAU4B,EAAuB,CAC9BA,EAAsB,UAAe,YACrCA,EAAsB,UAAe,YACrCA,EAAsB,OAAY,SAClCA,EAAsB,UAAe,YACrCA,EAAsB,WAAgB,aACtCA,EAAsB,QAAa,UACnCA,EAAsB,UAAe,YACrCA,EAAsB,aAAkB,eACxCA,EAAsB,QAAa,UACnCA,EAAsB,OAAY,SAClCA,EAAsB,WAAgB,aACtCA,EAAsB,SAAc,WACpCA,EAAsB,QAAa,UACnCA,EAAsB,SAAc,WACpCA,EAAsB,UAAe,YACrCA,EAAsB,SAAc,WACpCA,EAAsB,sBAA2B,wBACjDA,EAAsB,gBAAqB,kBAC3CA,EAAsB,SAAc,WACpCA,EAAsB,UAAe,YACrCA,EAAsB,OAAY,SAClCA,EAAsB,OAAY,SAClCA,EAAsB,YAAiB,cACvCA,EAAsB,QAAa,UACnCA,EAAsB,WAAgB,aACtCA,EAAsB,QAAa,UACnCA,EAAsB,WAAgB,aACtCA,EAAsB,cAAmB,gBACzCA,EAAsB,YAAiB,cACvCA,EAAsB,YAAiB,cACvCA,EAAsB,WAAgB,aACtCA,EAAsB,SAAc,WACpCA,EAAsB,WAAgB,aACtCA,EAAsB,WAAgB,aACtCA,EAAsB,YAAiB,cACvCA,EAAsB,YAAiB,aAC3C,GAAGA,IAA0BA,EAAwB,CAAC,EAAE,EAKlD0D,GAAiB5H,EAAA,CAEvB+T,EAAKpU,EAAS,CACV,QAAS,yBAAyBoU,EAAI,IAAI,EAC9C,IAAMzP,GAAQF,GAASA,aAAgB2P,EAAKpU,CAAM,EAJ3B,kBAKjBkI,GAAajC,GAAU,OACvBkC,GAAajC,GAAU,OACvBkC,GAAUT,GAAO,OACjBU,GAAalC,GAAU,OACvBmC,GAAclC,GAAW,OACzBmC,GAAWlC,GAAQ,OACnBmC,GAAalC,GAAU,OACvBmC,GAAgBlC,GAAa,OAC7BmC,GAAWlC,GAAQ,OACnBmC,GAAU5D,GAAO,OACjB6D,GAAcnC,GAAW,OACzBoC,GAAYnC,GAAS,OACrBoC,GAAWnC,GAAQ,OACnBoC,GAAY/F,GAAS,OACrBgG,GAAarG,EAAU,OACvBsG,GAAmBtG,EAAU,aAC7BuG,GAAYtC,GAAS,OACrBuC,GAAyBrC,GAAsB,OAC/CsC,GAAmBrC,GAAgB,OACnCsC,GAAYnG,GAAS,OACrBoG,GAAatC,GAAU,OACvBuC,GAAUtC,GAAO,OACjBuC,GAAUtC,GAAO,OACjBuC,GAAetC,GAAY,OAC3BuC,GAAWtC,GAAQ,OACnBuC,GAActC,GAAW,OACzBuC,GAAWtF,GAAQ,OACnBuF,GAAiBvC,GAAc,OAC/BwC,GAAcvC,GAAW,OACzBwC,GAAcvC,GAAW,OACzBwC,GAAejH,GAAY,OAC3BkH,GAAehH,GAAY,OAC3BiH,GAAiB1C,GAAW,qBAC5B2C,GAAerC,GAAY,OAC3BsC,GAAU/J,EAAA,IAAM6H,GAAW,EAAE,SAAS,EAA5B,WACVmC,GAAUhK,EAAA,IAAM8H,GAAW,EAAE,SAAS,EAA5B,WACVmC,GAAWjK,EAAA,IAAMiI,GAAY,EAAE,SAAS,EAA7B,YACJiC,GAAS,CAClB,OAASlK,EAACmT,GAAQvN,GAAU,OAAO,CAAE,GAAGuN,EAAK,OAAQ,EAAK,CAAC,EAAlD,UACT,OAASnT,EAACmT,GAAQtN,GAAU,OAAO,CAAE,GAAGsN,EAAK,OAAQ,EAAK,CAAC,EAAlD,UACT,QAAUnT,EAACmT,GAAQpN,GAAW,OAAO,CACjC,GAAGoN,EACH,OAAQ,EACZ,CAAC,EAHS,WAIV,OAASnT,EAACmT,GAAQrN,GAAU,OAAO,CAAE,GAAGqN,EAAK,OAAQ,EAAK,CAAC,EAAlD,UACT,KAAOnT,EAACmT,GAAQnN,GAAQ,OAAO,CAAE,GAAGmN,EAAK,OAAQ,EAAK,CAAC,EAAhD,OACX,EAEahJ,GAAQsC,IC5mHrB,IAAAuH,EAAA,GAAAC,GAAAD,EAAA,WAAAE,GAAA,UAAAC,GAAA,eAAAC,GAAA,YAAAC,EAAA,UAAAC,GAAA,OAAAC,EAAA,gBAAAC,EAAA,WAAAC,EAAA,WAAAC,GAAA,aAAAC,GAAA,cAAAC,GAAA,eAAAC,GAAA,eAAAC,GAAA,aAAAC,GAAA,YAAAC,GAAA,eAAAC,GAAA,0BAAAC,GAAA,eAAAC,GAAA,YAAAC,GAAA,aAAAC,EAAA,0BAAAC,EAAA,gBAAAC,GAAA,oBAAAC,GAAA,iBAAAC,EAAA,YAAAC,GAAA,eAAAC,GAAA,WAAAC,GAAA,WAAAC,GAAA,kBAAAC,GAAA,aAAAC,GAAA,YAAAC,GAAA,gBAAAC,GAAA,cAAAC,GAAA,cAAAC,EAAA,gBAAAC,GAAA,kBAAAC,EAAA,gBAAAC,GAAA,eAAAC,GAAA,gBAAAC,GAAA,cAAAC,GAAA,cAAAhC,EAAA,WAAAiC,GAAA,cAAAC,GAAA,cAAAC,GAAA,mBAAAzB,GAAA,aAAA0B,GAAA,YAAApC,EAAA,iBAAAqC,GAAA,aAAAC,GAAA,eAAAC,GAAA,YAAAC,GAAA,sBAAAC,EAAA,QAAAC,GAAA,UAAAC,GAAA,WAAAC,GAAA,YAAAC,GAAA,WAAAC,GAAA,WAAAC,GAAA,SAAAC,GAAA,kBAAAC,GAAA,oBAAAC,GAAA,uBAAAC,GAAA,WAAAC,GAAA,SAAAC,GAAA,aAAAC,GAAA,gBAAAC,GAAA,kBAAAC,GAAA,eAAAC,GAAA,iBAAAC,GAAA,cAAAC,GAAA,YAAAC,GAAA,YAAAC,GAAA,YAAAC,GAAA,SAAAC,GAAA,SAAAC,GAAA,YAAAC,GAAA,cAAAC,GAAA,QAAAC,GAAA,QAAAC,GAAA,eAAAC,GAAA,UAAAC,GAAA,SAAAC,GAAA,aAAAC,GAAA,WAAAC,GAAA,WAAAC,GAAA,eAAAC,GAAA,aAAAC,GAAA,YAAAC,GAAA,aAAAC,GAAA,YAAAC,GAAA,aAAAC,GAAA,eAAAC,GAAA,YAAAC,GAAA,kBAAAC,GAAA,WAAAC,GAAA,QAAAC,GAAA,gBAAAC,GAAA,iBAAAC,GAAA,WAAAC,GAAA,WAAAC,GAAA,gBAAArC,GAAA,UAAAsC,GAAA,cAAAC,GAAA,UAAAC,GAAA,YAAAC,GAAA,SAAAC,EAAA,SAAAC,KAAA,IAAAC,GAAAC,EAAA,KAAAC,IAAAC,IAAAC,IAAAC,KACAC,KACAC,KACAC,KACAC,KACAC,OCLA,IAAAC,GAAAC,EAAA,KAAAC,IAAAC,IAAAC,IAAAC,KACAA,OCDA,IAAAC,GAAA,GAAAC,GAAAD,GAAA,sBAAAE,KAAA,IAmDaA,GAnDbC,GAAAC,EAAA,kBAAAC,IAAAC,IAAAC,IAmDaL,GAAN,KAAuB,CAnD9B,MAmD8B,CAAAM,EAAA,yBACpB,IAER,YAAYC,EAAU,CACpB,KAAK,IAAMA,CACb,CAKA,MAAM,gBAAgBC,EAAwH,CAC5I,GAAI,CAEF,IAAMC,EAAYD,EAAU,KAAK,YAAY,EAAE,QAAQ,cAAe,EAAE,EAExE,GAAIC,IAAcD,EAAU,KAAK,YAAY,EAC3C,MAAO,CACL,QAAS,GACT,MAAO,wEACT,EAKF,GADiB,MAAM,KAAK,aAAaC,CAAS,EAEhD,MAAO,CACL,QAAS,GACT,MAAO,eAAeA,CAAS,kBACjC,EAIF,IAAMC,EAA2B,CAC/B,GAAGF,EACH,KAAMC,EACN,UAAW,EACX,UAAW,IAAI,KAAK,EAAE,YAAY,CACpC,EAGA,aAAM,KAAK,IAAI,SAAS,IACtB,SAASA,CAAS,GAClB,KAAK,UAAUC,CAAa,CAC9B,EAEA,QAAQ,IAAI,wBAAwBD,CAAS,GAAIC,CAAa,EAEvD,CACL,QAAS,GACT,KAAMA,CACR,CAEF,OAASC,EAAY,CACnB,eAAQ,MAAM,+BAAgCA,CAAK,EAC5C,CACL,QAAS,GACT,MAAOA,EAAM,SAAW,6BAC1B,CACF,CACF,CAKA,MAAM,aAAaC,EAAyC,CAC1D,GAAI,CACF,IAAMH,EAAYG,EAAK,YAAY,EAC7BC,EAAO,MAAM,KAAK,IAAI,SAAS,IAAI,SAASJ,CAAS,EAAE,EAE7D,OAAKI,EAIE,KAAK,MAAMA,CAAI,EAHb,IAIX,OAASF,EAAO,CACd,eAAQ,MAAM,gCAAiCA,CAAK,EAC7C,IACT,CACF,CAKA,MAAM,kBAAkBC,EAAcE,EAInC,CACD,GAAI,CACF,IAAMN,EAAY,MAAM,KAAK,aAAaI,CAAI,EAE9C,OAAKJ,EAQAA,EAAU,OAQXA,EAAU,WACO,IAAI,KAAKA,EAAU,SAAS,EAC9B,IAAI,KACZ,CACL,MAAO,GACP,MAAO,wBACT,EAKAA,EAAU,SAAWA,EAAU,WAAaA,EAAU,QACjD,CACL,MAAO,GACP,MAAO,qCACT,EAIkB,MAAM,KAAK,iBAAiBM,EAAUF,CAAI,EAErD,CACL,MAAO,GACP,MAAO,uCACT,EAIEJ,EAAU,UAAU,cAClBA,EAAU,SAAS,eAAiBM,EAC/B,CACL,MAAO,GACP,MAAO,+CACT,EAIG,CACL,MAAO,GACP,UAAAN,CACF,EA/CS,CACL,MAAO,GACP,MAAO,gCACT,EAXO,CACL,MAAO,GACP,MAAO,oBACT,CAsDJ,OAASG,EAAY,CACnB,eAAQ,MAAM,iCAAkCA,CAAK,EAC9C,CACL,MAAO,GACP,MAAOA,EAAM,SAAW,mBAC1B,CACF,CACF,CAKA,MAAM,eAAeC,EAAcE,EAShC,CACD,GAAI,CAEF,IAAMC,EAAa,MAAM,KAAK,kBAAkBH,EAAME,CAAQ,EAC9D,GAAI,CAACC,EAAW,OAAS,CAACA,EAAW,UACnC,MAAO,CACL,QAAS,GACT,MAAOA,EAAW,KACpB,EAGF,IAAMP,EAAYO,EAAW,UAGvBC,EAA8B,CAClC,KAAMR,EAAU,KAChB,SAAAM,EACA,WAAY,IAAI,KAAK,EAAE,YAAY,EACnC,gBAAiB,CACf,KAAMN,EAAU,KAChB,MAAOA,EAAU,MACjB,eAAgBA,EAAU,cAC5B,CACF,EAEA,MAAM,KAAK,IAAI,SAAS,IACtB,oBAAoBM,CAAQ,IAAIN,EAAU,IAAI,GAC9C,KAAK,UAAUQ,CAAU,CAC3B,EAGAR,EAAU,YACV,MAAM,KAAK,IAAI,SAAS,IACtB,SAASA,EAAU,IAAI,GACvB,KAAK,UAAUA,CAAS,CAC1B,EAEA,QAAQ,IAAI,wBAAwBA,EAAU,IAAI,OAAOM,CAAQ,EAAE,EAGnE,IAAMG,EAAgB,CACpB,KAAMT,EAAU,KAChB,MAAOA,EAAU,MACjB,eAAgBA,EAAU,cAC5B,EAGA,OAAIA,EAAU,OAAS,iBACrBS,EAAS,KAAOT,EAAU,OAGrB,CACL,QAAS,GACT,SAAAS,CACF,CAEF,OAASN,EAAY,CACnB,eAAQ,MAAM,kCAAmCA,CAAK,EAC/C,CACL,QAAS,GACT,MAAOA,EAAM,SAAW,4BAC1B,CACF,CACF,CAKA,MAAM,iBAAiBG,EAAkBF,EAAgC,CACvE,GAAI,CACF,IAAMH,EAAYG,EAAK,YAAY,EAInC,MAAO,CAAC,CAHW,MAAM,KAAK,IAAI,SAAS,IACzC,oBAAoBE,CAAQ,IAAIL,CAAS,EAC3C,CAEF,OAASE,EAAO,CACd,eAAQ,MAAM,kCAAmCA,CAAK,EAC/C,EACT,CACF,CAKA,MAAM,oBAAoBC,EAA6D,CACrF,GAAI,CACF,IAAMJ,EAAY,MAAM,KAAK,aAAaI,CAAI,EAE9C,OAAKJ,GAOLA,EAAU,OAAS,GACnB,MAAM,KAAK,IAAI,SAAS,IACtB,SAASA,EAAU,IAAI,GACvB,KAAK,UAAUA,CAAS,CAC1B,EAEA,QAAQ,IAAI,4BAA4BA,EAAU,IAAI,EAAE,EAEjD,CAAE,QAAS,EAAK,GAdd,CACL,QAAS,GACT,MAAO,sBACT,CAaJ,OAASG,EAAY,CACnB,eAAQ,MAAM,mCAAoCA,CAAK,EAChD,CACL,QAAS,GACT,MAAOA,EAAM,SAAW,iCAC1B,CACF,CACF,CAKA,MAAM,gBAAuC,CAC3C,GAAI,CAGF,IAAMO,EAAO,MAAM,KAAK,IAAI,SAAS,KAAK,CAAE,OAAQ,QAAS,CAAC,EACxDC,EAA0B,CAAC,EAEjC,QAAWC,KAAOF,EAAK,KAAM,CAC3B,IAAML,EAAO,MAAM,KAAK,IAAI,SAAS,IAAIO,EAAI,IAAI,EAC7CP,GACFM,EAAW,KAAK,KAAK,MAAMN,CAAI,CAAC,CAEpC,CAEA,OAAOM,EAAW,KAAK,CAAC,EAAGE,IACzB,IAAI,KAAKA,EAAE,SAAS,EAAE,QAAQ,EAAI,IAAI,KAAK,EAAE,SAAS,EAAE,QAAQ,CAClE,CAEF,OAASV,EAAO,CACd,eAAQ,MAAM,2BAA4BA,CAAK,EACxC,CAAC,CACV,CACF,CAKA,MAAM,mBAAmBG,EAAkBQ,EAAuB,EAI/D,CACD,GAAI,CAEF,IAAMC,EAAe,SAAST,EAAS,YAAY,EAAE,UAAU,EAAG,CAAC,CAAC,IAAI,KAAK,IAAI,EAAE,SAAS,EAAE,EAAE,YAAY,CAAC,GAEvGN,EAAwD,CAC5D,KAAMe,EACN,KAAM,kBACN,MAAOD,EACP,eAAgBA,EAChB,QAAS,KACT,OAAQ,GACR,UAAW,OACX,UAAWR,EACX,SAAU,CACR,YAAa,oBAAoBQ,CAAY,eAC7C,WAAYR,CACd,CACF,EAEMU,EAAS,MAAM,KAAK,gBAAgBhB,CAAS,EAEnD,OAAIgB,EAAO,QACF,CACL,QAAS,GACT,KAAMD,CACR,EAEO,CACL,QAAS,GACT,MAAOC,EAAO,KAChB,CAGJ,OAASb,EAAY,CACnB,eAAQ,MAAM,6CAA8CA,CAAK,EAC1D,CACL,QAAS,GACT,MAAOA,EAAM,SAAW,gCAC1B,CACF,CACF,CACF,ICnXA,eAAsBc,GAAQC,EAAmBC,EAAqC,CAQpF,IAAMC,EAAgBC,GAAgB,KAAK,UAN5B,CACb,IAAK,QACL,IAAK,KACP,CAG2D,CAAC,EACtDC,EAAgBD,GAAgB,KAAK,UAAUH,CAAM,CAAC,EACtDK,EAAe,GAAGH,CAAa,IAAIE,CAAa,GAGhDE,EAAY,MAAMC,GAAiBN,CAAU,EAI7CO,EADU,IAAI,YAAY,EACX,OAAOH,CAAY,EAClCI,EAAY,MAAM,OAAO,OAAO,KACpC,CACE,KAAM,oBACN,KAAM,SACR,EACAH,EACAE,CACF,EAGME,EAAmBP,GAAgBM,CAAS,EAGlD,MAAO,GAAGJ,CAAY,IAAIK,CAAgB,EAC5C,CAKA,eAAeH,GAAiBI,EAAiC,CAE/D,IAAMC,EAAcD,EACjB,QAAQ,8BAA+B,EAAE,EACzC,QAAQ,4BAA6B,EAAE,EACvC,QAAQ,MAAO,EAAE,EAGdE,EAAY,KAAKD,CAAW,EAC5BE,EAAU,IAAI,WAAWD,EAAU,MAAM,EAC/C,QAASE,EAAI,EAAGA,EAAIF,EAAU,OAAQE,IACpCD,EAAQC,CAAC,EAAIF,EAAU,WAAWE,CAAC,EAIrC,OAAO,MAAM,OAAO,OAAO,UACzB,QACAD,EAAQ,OACR,CACE,KAAM,oBACN,KAAM,SACR,EACA,GACA,CAAC,MAAM,CACT,CACF,CAKA,SAASX,GAAgBa,EAAqC,CAC5D,IAAIC,EAEJ,GAAI,OAAOD,GAAU,SACnBC,EAAS,KAAKD,CAAK,MACd,CACL,IAAME,EAAQ,IAAI,WAAWF,CAAK,EAC5BG,EAAS,MAAM,KAAKD,CAAK,EAC5B,IAAIE,GAAQ,OAAO,aAAaA,CAAI,CAAC,EACrC,KAAK,EAAE,EACVH,EAAS,KAAKE,CAAM,CACtB,CAGA,OAAOF,EACJ,QAAQ,KAAM,EAAE,EAChB,QAAQ,MAAO,GAAG,EAClB,QAAQ,MAAO,GAAG,CACvB,CAKA,eAAsBI,GACpBC,EACAC,EACwB,CACxB,IAAMC,EAAM,KAAK,MAAM,KAAK,IAAI,EAAI,GAAI,EAGlCxB,EAAoB,CACxB,IAAKsB,EAAkB,aACvB,MAAOC,EAAO,KAAK,GAAG,EACtB,IAAKD,EAAkB,UACvB,IAAKE,EAAM,KACX,IAAKA,CACP,EAGMC,EAAM,MAAM1B,GAAQC,EAAQsB,EAAkB,WAAW,EAGzDI,EAAW,MAAM,MAAMJ,EAAkB,UAAW,CACxD,OAAQ,OACR,QAAS,CACP,eAAgB,mCAClB,EACA,KAAM,IAAI,gBAAgB,CACxB,WAAY,8CACZ,UAAWG,CACb,CAAC,CACH,CAAC,EAED,GAAI,CAACC,EAAS,GAAI,CAChB,IAAMC,EAAY,MAAMD,EAAS,KAAK,EACtC,MAAM,IAAI,MAAM,+BAA+BA,EAAS,MAAM,IAAIC,CAAS,EAAE,CAC/E,CAEA,OAAO,MAAMD,EAAS,KAAK,CAC7B,CAKO,SAASE,GAAuBC,EAAsC,CAC3E,GAAI,CACF,IAAMC,EAAa,KAAKD,CAAS,EACjC,OAAO,KAAK,MAAMC,CAAU,CAC9B,OAASC,EAAO,CACd,MAAM,IAAI,MAAM,wCAAwCA,CAAK,EAAE,CACjE,CACF,CAKA,eAAsBC,GACpBC,EACAV,EACiC,CACjC,IAAMD,EAAoBM,GAAuBK,CAAuB,EAGxE,MAAO,CACL,cAAiB,WAHG,MAAMZ,GAAeC,EAAmBC,CAAM,GAGzB,YAAY,GACrD,eAAgB,kBAClB,CACF,CAlMA,IAAAW,GAAAC,EAAA,kBAAAC,IAAAC,IAAAC,IAwCsBC,EAAAxC,GAAA,WAqCPwC,EAAAhC,GAAA,oBA8BNgC,EAAApC,GAAA,mBAuBaoC,EAAAlB,GAAA,kBAyCNkB,EAAAX,GAAA,0BAYMW,EAAAP,GAAA,yBCvLtB,IAAAQ,GAAA,GAAAC,GAAAD,GAAA,wBAAAE,GAAA,8BAAAC,KAwXA,eAAsBA,GACpBC,EACAC,EACAC,EACAC,EAC+B,CAC/B,IAAMC,EAAW,IAAIN,GAAmBE,CAAG,EACrCK,EAAaL,EAAI,aAAe,wDAEtC,OAAO,MAAMI,EAAS,gBACpBH,EACAC,EACAC,EACAE,CACF,CACF,CAvYA,IAkCaP,GAlCbQ,GAAAC,EAAA,kBAAAC,IAAAC,IAAAC,IAEAC,KAgCab,GAAN,KAAyB,CAlChC,MAkCgC,CAAAc,EAAA,2BACtB,IACA,QAAyC,KAEjD,YAAYZ,EAAU,CACpB,KAAK,IAAMA,CACb,CAKA,MAAM,gBACJC,EACAC,EACAC,EACAE,EAC+B,CAC/B,GAAI,CACF,QAAQ,IAAI,wDAAwDJ,CAAQ,EAAE,EAG9E,MAAM,KAAK,aAAa,EAGxB,IAAMY,EAAW,MAAM,KAAK,0BAA0BZ,EAAUC,CAAU,EAC1E,QAAQ,IAAI,yCAAyCW,CAAQ,EAAE,EAG/D,MAAM,KAAK,gBAAgBA,EAAUZ,EAAUE,EAAeE,CAAU,EACxE,QAAQ,IAAI,6DAA6D,EAGzE,IAAMS,EAAgB,MAAM,KAAK,cAAcD,CAAQ,EACvD,QAAQ,IAAI,yCAAyCC,CAAa,EAAE,EAGpE,IAAMC,EAAY,MAAM,KAAK,eAAeF,EAAUC,CAAa,EACnE,QAAQ,IAAI,0CAA0CC,CAAS,EAAE,EAEjE,IAAMC,EAAY,+BAA+BH,CAAQ,QAEzD,MAAO,CACL,QAAS,GACT,SAAAA,EACA,UAAAG,EACA,UAAAD,CACF,CAEF,OAASE,EAAY,CACnB,eAAQ,MAAM,8CAA8ChB,CAAQ,IAAKgB,CAAK,EACvE,CACL,QAAS,GACT,MAAOA,EAAM,SAAW,mBAC1B,CACF,CACF,CAKA,MAAc,cAAe,CAC3B,GAAI,CAAC,KAAK,IAAI,2BACZ,MAAM,IAAI,MAAM,2CAA2C,EAG7D,IAAMC,EAAS,CACb,kDACA,oDACF,EAEA,KAAK,QAAU,MAAMC,GACnB,KAAK,IAAI,2BACTD,CACF,CACF,CAKA,MAAc,0BACZjB,EACAC,EACiB,CACjB,GAAI,CAAC,KAAK,IAAI,wBACZ,MAAM,IAAI,MAAM,wCAAwC,EAI1D,IAAMkB,EAAkB,MAAM,KAAK,iBAAiB,KAAK,IAAI,uBAAuB,EAG9EC,EAAW,MAAM,MAAM,4CAA6C,CACxE,OAAQ,OACR,QAAS,KAAK,QACd,KAAM,KAAK,UAAU,CACnB,MAAO,GAAGnB,CAAU,wBACtB,CAAC,CACH,CAAC,EAED,GAAI,CAACmB,EAAS,GAAI,CAChB,IAAMJ,EAAQ,MAAMI,EAAS,KAAK,EAClC,MAAM,IAAI,MAAM,6BAA6BA,EAAS,MAAM,IAAIJ,CAAK,EAAE,CACzE,CAGA,IAAMJ,GADU,MAAMQ,EAAS,KAAK,GACX,SAGzB,aAAM,KAAK,oBAAoBR,EAAUO,CAAe,EAEjDP,CACT,CAKA,MAAc,iBAAiBA,EAA0C,CACvE,IAAMQ,EAAW,MAAM,MACrB,6CAA6CR,CAAQ,WACrD,CAAE,QAAS,KAAK,OAAS,CAC3B,EAEA,GAAI,CAACQ,EAAS,GAAI,CAChB,IAAMJ,EAAQ,MAAMI,EAAS,KAAK,EAClC,MAAM,IAAI,MAAM,iCAAiCA,EAAS,MAAM,IAAIJ,CAAK,EAAE,CAC7E,CAEA,OAAO,MAAMI,EAAS,KAAK,CAC7B,CAKA,MAAc,oBAAoBR,EAAkBS,EAAwB,CAC1E,IAAMD,EAAW,MAAM,MACrB,6CAA6CR,CAAQ,WACrD,CACE,OAAQ,MACR,QAAS,KAAK,QACd,KAAM,KAAK,UAAU,CACnB,MAAOS,EAAQ,KACjB,CAAC,CACH,CACF,EAEA,GAAI,CAACD,EAAS,GAAI,CAChB,IAAMJ,EAAQ,MAAMI,EAAS,KAAK,EAClC,MAAM,IAAI,MAAM,oCAAoCA,EAAS,MAAM,IAAIJ,CAAK,EAAE,CAChF,CACF,CAKA,MAAc,gBACZJ,EACAZ,EACAE,EACAE,EACA,CAEA,IAAMiB,EAAU,MAAM,KAAK,iBAAiBT,CAAQ,EAG9CU,EAAaD,EAAQ,MAAM,KAAKE,GAAKA,EAAE,OAAS,QAAQ,EAC1DD,IAEFA,EAAW,OAAS,KAAK,mBACvBA,EAAW,OACXtB,EACAE,EACAE,CACF,GAIF,IAAMoB,EAAuB,CAC3B,KAAM,YACN,KAAM,YACN,OAAQ,KAAK,qBAAqBxB,EAAUE,EAAeE,CAAU,CACvE,EAEAiB,EAAQ,MAAM,KAAKG,CAAQ,EAG3B,MAAM,KAAK,oBAAoBZ,EAAUS,CAAO,EAGhD,MAAM,KAAK,gBAAgBT,EAAU,iBAAiB,CACxD,CAKQ,mBACNa,EACAzB,EACAE,EACAE,EACQ,CAER,OAAAqB,EAASA,EAAO,QACd,8BACA,eAAezB,CAAQ,GACzB,EAGAyB,EAASA,EAAO,QACd,4BACA,aAAarB,CAAU,GACzB,EAIOqB,CACT,CAKQ,qBACNzB,EACAE,EACAE,EACQ,CACR,MAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAWSJ,CAAQ;AAAA,sBACNE,CAAa;AAAA,0BACTE,CAAU;AAAA;AAAA;AAAA;AAAA;AAAA,sDAKkBJ,CAAQ;AAAA;AAAA;AAAA;AAAA,iBAI7CA,CAAQ;AAAA;AAAA;AAAA;AAAA,EAIvB,KAAK,CACL,CAKA,MAAc,cAAcY,EAAmC,CAC7D,IAAMQ,EAAW,MAAM,MACrB,6CAA6CR,CAAQ,YACrD,CACE,OAAQ,OACR,QAAS,KAAK,QACd,KAAM,KAAK,UAAU,CACnB,YAAa,sBACf,CAAC,CACH,CACF,EAEA,GAAI,CAACQ,EAAS,GAAI,CAChB,IAAMJ,EAAQ,MAAMI,EAAS,KAAK,EAClC,MAAM,IAAI,MAAM,6BAA6BA,EAAS,MAAM,IAAIJ,CAAK,EAAE,CACzE,CAGA,OADgB,MAAMI,EAAS,KAAK,GACrB,aACjB,CAKA,MAAc,eAAeR,EAAkBC,EAAwC,CACrF,IAAMO,EAAW,MAAM,MACrB,6CAA6CR,CAAQ,eACrD,CACE,OAAQ,OACR,QAAS,KAAK,QACd,KAAM,KAAK,UAAU,CACnB,cAAAC,EACA,YAAa,wBACb,iBAAkB,YACpB,CAAC,CACH,CACF,EAEA,GAAI,CAACO,EAAS,GAAI,CAChB,IAAMJ,EAAQ,MAAMI,EAAS,KAAK,EAClC,MAAM,IAAI,MAAM,qBAAqBA,EAAS,MAAM,IAAIJ,CAAK,EAAE,CACjE,CAQA,MAFkB,uCAJC,MAAMI,EAAS,KAAK,GACP,YAGoC,OAGtE,CAKA,MAAc,gBAAgBR,EAAkBc,EAAsB,CACpE,GAAI,CACF,IAAMN,EAAW,MAAM,MACrB,4CAA4CR,CAAQ,OACpD,CACE,OAAQ,OACR,QAAS,KAAK,QACd,KAAM,KAAK,UAAU,CACnB,SAAUc,EACV,QAAS,EACX,CAAC,CACH,CACF,EAEA,OAAKN,EAAS,IACZ,QAAQ,KAAK,8CAA8CA,EAAS,MAAM,EAAE,EAIvE,MAAMA,EAAS,KAAK,CAC7B,OAASJ,EAAO,CACd,QAAQ,KAAK,4CAA6CA,CAAK,CAEjE,CACF,CACF,EAKsBL,EAAAb,GAAA,+BCxXtB,IAAA6B,GAAA,GAAAC,GAAAD,GAAA,uBAAAE,GAAA,sBAAAC,GAAA,mBAAAC,GAAA,4BAAAC,GAAA,qBAAAC,GAAA,sBAAAC,KAqCA,eAAsBL,GACpBM,EACAC,EACAC,EACsB,CACtB,IAAMC,EAAK,OAAO,KAAK,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,MAAM,EAAG,CAAC,CAAC,GAChEC,EAAqB,CACzB,GAAAD,EACA,GAAGD,EACH,WAAY,IAAI,KAAK,EAAE,YAAY,CACrC,EAGMG,EAAW,WAAWJ,CAAM,kBAAkBE,CAAE,GACtD,MAAMH,EAAI,SAAS,IAAIK,EAAU,KAAK,UAAUD,CAAK,CAAC,EAGtD,IAAME,EAAW,WAAWL,CAAM,uBAC5BM,EAAa,MAAMP,EAAI,SAAS,IAAIM,EAAU,MAAM,GAAwB,CAAC,EAC7EE,EAAU,CAACJ,EAAO,GAAGG,EAAS,OAAQE,GAAQA,EAAI,KAAON,CAAE,CAAC,EAClE,aAAMH,EAAI,SAAS,IAAIM,EAAU,KAAK,UAAUE,EAAQ,MAAM,EAAG,GAAI,CAAC,CAAC,EAEhEJ,CACT,CAKA,eAAsBR,GACpBI,EACAC,EACAS,EAC6B,CAC7B,IAAML,EAAW,WAAWJ,CAAM,kBAAkBS,CAAO,GAE3D,OADc,MAAMV,EAAI,SAAS,IAAIK,EAAU,MAAM,CAEvD,CAKA,eAAsBP,GACpBE,EACAC,EACAU,EACwB,CACxB,IAAML,EAAW,WAAWL,CAAM,uBAC9BW,EAAW,MAAMZ,EAAI,SAAS,IAAIM,EAAU,MAAM,GAAwB,CAAC,EAG/E,OAAIK,GAAS,WACXC,EAASA,EAAO,OAAQH,GAAQA,EAAI,WAAaE,EAAQ,QAAQ,GAE/DA,GAAS,OACXC,EAASA,EAAO,OAAQH,GAAQA,EAAI,OAASE,EAAQ,IAAI,GAGpDC,CACT,CAKA,eAAsBb,GACpBC,EACAC,EACAS,EACAG,EAC6B,CAC7B,IAAMN,EAAW,MAAMX,GAAeI,EAAKC,EAAQS,CAAO,EAC1D,GAAI,CAACH,EAAU,OAAO,KAEtB,IAAMC,EAAuB,CAC3B,GAAGD,EACH,GAAGM,CACL,EAGMR,EAAW,WAAWJ,CAAM,kBAAkBS,CAAO,GAC3D,MAAMV,EAAI,SAAS,IAAIK,EAAU,KAAK,UAAUG,CAAO,CAAC,EAGxD,IAAMF,EAAW,WAAWL,CAAM,uBAE5Ba,GADW,MAAMd,EAAI,SAAS,IAAIM,EAAU,MAAM,GAAwB,CAAC,GACrD,IAAKG,GAASA,EAAI,KAAOC,EAAUF,EAAUC,CAAI,EAC7E,aAAMT,EAAI,SAAS,IAAIM,EAAU,KAAK,UAAUQ,EAAa,MAAM,EAAG,GAAI,CAAC,CAAC,EAErEN,CACT,CAKA,eAAsBb,GACpBK,EACAC,EACAS,EACkB,CAClB,IAAMH,EAAW,MAAMX,GAAeI,EAAKC,EAAQS,CAAO,EAC1D,GAAI,CAACH,EAAU,MAAO,GAGtB,GAAIA,EAAS,MACX,GAAI,CACF,MAAMP,EAAI,SAAS,OAAOO,EAAS,KAAK,CAC1C,OAASQ,EAAK,CACZ,QAAQ,MAAM,6BAA8BR,EAAS,MAAOQ,CAAG,CACjE,CAIF,IAAMV,EAAW,WAAWJ,CAAM,kBAAkBS,CAAO,GAC3D,MAAMV,EAAI,SAAS,OAAOK,CAAQ,EAGlC,IAAMC,EAAW,WAAWL,CAAM,uBAE5BO,GADW,MAAMR,EAAI,SAAS,IAAIM,EAAU,MAAM,GAAwB,CAAC,GAC1D,OAAQG,GAAQA,EAAI,KAAOC,CAAO,EACzD,aAAMV,EAAI,SAAS,IAAIM,EAAU,KAAK,UAAUE,CAAO,CAAC,EAEjD,EACT,CAKA,eAAsBX,GACpBG,EACAC,EACAe,EACAC,EACAC,EAAsB,aAC0C,CAChE,IAAMR,EAAU,OAAO,KAAK,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,MAAM,EAAG,CAAC,CAAC,GACrES,EAAQ,WAAWlB,CAAM,kBAAkBe,CAAQ,IAAIC,CAAI,IAAIP,CAAO,OAI5E,MAAO,CACL,UAAW,sCAAsCA,CAAO,GACxD,MAAAS,EACA,QAAAT,CACF,CACF,CApLA,IAoBMU,GApBNC,GAAAC,EAAA,kBAAAC,IAAAC,IAAAC,IAEAC,KAkBMN,GAAoBO,EAAE,OAAO,CACjC,SAAUA,EAAE,OAAO,EAAE,IAAI,CAAC,EAC1B,WAAYA,EAAE,OAAO,EAAE,IAAI,CAAC,EAC5B,KAAMA,EAAE,KAAK,CAAC,WAAY,QAAQ,CAAC,EACnC,SAAUA,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EACpC,MAAOA,EAAE,OAAO,EAAE,IAAI,CAAC,EACvB,WAAYA,EAAE,OAAO,EAAE,IAAI,CAAC,EAC5B,SAAUA,EAAE,OAAO,CACjB,YAAaA,EAAE,OAAO,EAAE,SAAS,EACjC,MAAOA,EAAE,OAAO,EAAE,SAAS,EAC3B,OAAQA,EAAE,OAAO,EAAE,SAAS,CAC9B,CAAC,EAAE,SAAS,CACd,CAAC,EAKqBC,EAAAlC,GAAA,qBA4BAkC,EAAAhC,GAAA,kBAaAgC,EAAA9B,GAAA,oBAsBA8B,EAAA7B,GAAA,qBA8BA6B,EAAAjC,GAAA,qBAiCAiC,EAAA/B,GAAA,6BCnKtB,IAAAgC,GAAA,GAAAC,GAAAD,GAAA,wBAAAE,GAAA,8BAAAC,GAAA,yBAAAC,GAAA,wBAAAC,GAAA,0BAAAC,GAAA,0BAAAC,GAAA,yBAAAC,KAkDO,SAASL,IAA6C,CAC3D,IAAMM,EAA+C,CACnD,IAAK,GACL,EAAG,GACH,UAAW,GACX,SAAU,GACV,OAAQ,EACV,EAEMC,EAAwB,CAC5B,eACA,eACA,eACA,WACA,cACA,WACA,WACA,kBACA,kBACA,eACA,eACA,WACA,QACA,cACA,YACF,EAEMC,EAA0B,CAAC,EAEjC,OAAAD,EAAU,QAASE,GAAS,CAC1BD,EAAOC,CAAI,EAAI,CACb,SAAU,CAAE,GAAGH,CAAgB,EAC/B,eAAgB,EAClB,CACF,CAAC,EAEME,CACT,CAKA,eAAsBT,GACpBW,EACAC,EAC0B,CAC1B,IAAMC,EAAM,WAAWD,CAAM,qBACvBE,EAAS,MAAMH,EAAI,SAAS,IAAIE,EAAK,MAAM,EAEjD,OAAIC,GAKGb,GAA0B,CACnC,CAKA,eAAsBI,GACpBM,EACAC,EACAH,EAC0B,CAC1B,IAAMI,EAAM,WAAWD,CAAM,qBAC7B,aAAMD,EAAI,SAAS,IAAIE,EAAK,KAAK,UAAUJ,CAAM,CAAC,EAC3CA,CACT,CAKA,eAAsBH,GACpBK,EACAC,EACAG,EACAC,EAC0B,CAC1B,IAAMP,EAAS,MAAMT,GAAmBW,EAAKC,CAAM,EACnD,OAAAH,EAAOM,CAAQ,EAAIC,EACZ,MAAMX,GAAsBM,EAAKC,EAAQH,CAAM,CACxD,CAKA,eAAsBL,GACpBO,EACAC,EACAG,EACAE,EAC0B,CAC1B,IAAMR,EAAS,MAAMT,GAAmBW,EAAKC,CAAM,EACnD,OAAKH,EAAOM,CAAQ,IAClBN,EAAOM,CAAQ,EAAI,CACjB,SAAU,CACR,IAAK,GACL,EAAG,GACH,UAAW,GACX,SAAU,GACV,OAAQ,EACV,EACA,eAAgB,EAClB,GAEFN,EAAOM,CAAQ,EAAE,SAASE,CAAO,EAAI,CAACR,EAAOM,CAAQ,EAAE,SAASE,CAAO,EAChE,MAAMZ,GAAsBM,EAAKC,EAAQH,CAAM,CACxD,CAKA,eAAsBP,GACpBS,EACAC,EAC0B,CAC1B,IAAMM,EAAgBjB,GAA0B,EAChD,OAAO,MAAMI,GAAsBM,EAAKC,EAAQM,CAAa,CAC/D,CAKA,eAAsBf,GACpBQ,EACAC,EACAG,EACAE,EACkB,CAElB,OADe,MAAMjB,GAAmBW,EAAKC,CAAM,GACrCG,CAAQ,GAAG,SAASE,CAAO,GAAK,EAChD,CAtLA,IA+BME,GAQAC,GAMAC,GA7CNC,GAAAC,EAAA,kBAAAC,IAAAC,IAAAC,IAEAC,KA6BMR,GAAsBS,EAAE,OAAO,CACnC,IAAKA,EAAE,QAAQ,EACf,EAAGA,EAAE,QAAQ,EACb,UAAWA,EAAE,QAAQ,EACrB,SAAUA,EAAE,QAAQ,EACpB,OAAQA,EAAE,QAAQ,CACpB,CAAC,EAEKR,GAAuBQ,EAAE,OAAO,CACpC,SAAUT,GACV,aAAcS,EAAE,OAAO,EAAE,SAAS,EAClC,eAAgBA,EAAE,QAAQ,CAC5B,CAAC,EAEKP,GAAwBO,EAAE,OAAOR,EAAoB,EAK3CS,EAAA5B,GAAA,6BA0CM4B,EAAA7B,GAAA,sBAkBA6B,EAAAxB,GAAA,yBAaAwB,EAAAvB,GAAA,wBAcAuB,EAAAzB,GAAA,yBA0BAyB,EAAA3B,GAAA,wBAWA2B,EAAA1B,GAAA,yBC9KtB,IAAA2B,GAAA,GAAAC,GAAAD,GAAA,mBAAAE,GAAA,yBAAAC,GAAA,qBAAAC,GAAA,4BAAAC,GAAA,uBAAAC,GAAA,oBAAAC,GAAA,sBAAAC,KAmGO,SAASL,GAAqBM,EAAkBC,EAA+B,CACpF,MAAO,CACL,YAAa,CACX,KAAMD,EACN,UAAWC,EACX,QAAS,GACT,MAAO,GACP,MAAO,GACP,MAAO,EACT,EACA,SAAU,CACR,aAAc,UACd,eAAgB,UAChB,UAAW,OACX,aAAc,CAAC,CACjB,EACA,YAAa,CACX,WAAY,OACZ,iBAAkB,OAClB,gBAAiB,OACjB,kBAAmB,MACrB,EACA,aAAc,CACZ,cAAe,GACf,WAAY,GACZ,eAAgB,GAChB,iBAAkB,GAClB,iBAAkB,GAClB,oBAAqB,GACrB,aAAc,EAChB,EACA,SAAU,CACR,gBAAiB,QACjB,cAAe,QACf,kBAAmB,GACnB,gBAAiB,GACjB,qBAAsB,EACxB,EACA,SAAU,CACR,WAAY,OACZ,YAAa,OACb,aAAc,OACd,WAAY,OACZ,UAAW,MACb,CACF,CACF,CAKA,eAAsBR,GACpBS,EACAC,EACqB,CACrB,IAAMC,EAAM,WAAWD,CAAM,eACvBE,EAAS,MAAMH,EAAI,SAAS,IAAIE,EAAK,MAAM,EAEjD,GAAIC,EACF,OAAOA,EAIT,IAAMC,EAAY,WAAWH,CAAM,UAC7BI,EAAe,MAAML,EAAI,SAAS,IAAII,EAAW,MAAM,EACvDN,EAAYO,GAAsB,MAAQ,UAC1CN,EAAaM,GAAsB,IAAMJ,EAG/C,OAAOT,GAAqBM,EAAUC,CAAS,CACjD,CAKA,eAAsBN,GACpBO,EACAC,EACAK,EACqB,CACrB,IAAMJ,EAAM,WAAWD,CAAM,eAC7B,aAAMD,EAAI,SAAS,IAAIE,EAAK,KAAK,UAAUI,CAAM,CAAC,EAC3CA,CACT,CAKA,eAAsBZ,GACpBM,EACAC,EACAM,EACAC,EACqB,CACrB,IAAMF,EAAS,MAAMf,GAAcS,EAAKC,CAAM,EAC9C,OAAAK,EAAOC,CAAO,EAAI,CAAE,GAAGD,EAAOC,CAAO,EAAG,GAAGC,CAAK,EACzC,MAAMf,GAAiBO,EAAKC,EAAQK,CAAM,CACnD,CAKA,eAAsBX,GACpBK,EACAC,EACAQ,EACqB,CACrB,IAAMH,EAAS,MAAMf,GAAcS,EAAKC,CAAM,EAC9C,OAAAK,EAAO,aAAe,CAAE,GAAGA,EAAO,aAAc,GAAGG,CAAM,EAClD,MAAMhB,GAAiBO,EAAKC,EAAQK,CAAM,CACnD,CAKA,eAAsBV,GACpBI,EACAC,EACAS,EACAC,EACyC,CACzC,IAAMC,EAAQ,WAAWX,CAAM,mBAAmB,KAAK,IAAI,CAAC,OAE5D,MAAMD,EAAI,SAAS,IAAIY,EAAOF,EAAM,CAClC,aAAc,CACZ,YAAaC,GAAe,YAC9B,CACF,CAAC,EAED,IAAME,EAAM,uBAAuB,mBAAmBD,CAAK,CAAC,GAC5D,MAAO,CAAE,MAAAA,EAAO,IAAAC,CAAI,CACtB,CAKA,eAAsBhB,GACpBG,EACAC,EACAS,EACAC,EACyC,CACzC,IAAMC,EAAQ,WAAWX,CAAM,qBAAqB,KAAK,IAAI,CAAC,OAE9D,MAAMD,EAAI,SAAS,IAAIY,EAAOF,EAAM,CAClC,aAAc,CACZ,YAAaC,GAAe,YAC9B,CACF,CAAC,EAED,IAAME,EAAM,uBAAuB,mBAAmBD,CAAK,CAAC,GAC5D,MAAO,CAAE,MAAAA,EAAO,IAAAC,CAAI,CACtB,CA3PA,IAkDMC,GAlDNC,GAAAC,EAAA,kBAAAC,IAAAC,IAAAC,IAEAC,KAgDMN,GAAmBO,EAAE,OAAO,CAChC,YAAaA,EAAE,OAAO,CACpB,KAAMA,EAAE,OAAO,EAAE,IAAI,CAAC,EACtB,UAAWA,EAAE,OAAO,EAAE,IAAI,CAAC,EAC3B,QAASA,EAAE,OAAO,EAAE,SAAS,EAC7B,MAAOA,EAAE,OAAO,EAAE,SAAS,EAC3B,MAAOA,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EACnC,MAAOA,EAAE,OAAO,EAAE,SAAS,CAC7B,CAAC,EACD,SAAUA,EAAE,OAAO,CACjB,aAAcA,EAAE,OAAO,EACvB,eAAgBA,EAAE,OAAO,EACzB,UAAWA,EAAE,OAAO,EAAE,SAAS,EAC/B,aAAcA,EAAE,MAAMA,EAAE,OAAO,CAAC,CAClC,CAAC,EACD,YAAaA,EAAE,OAAO,CACpB,WAAYA,EAAE,OAAO,EAAE,SAAS,EAChC,iBAAkBA,EAAE,OAAO,EAAE,SAAS,EACtC,gBAAiBA,EAAE,OAAO,EAAE,SAAS,EACrC,kBAAmBA,EAAE,OAAO,EAAE,SAAS,CACzC,CAAC,EACD,aAAcA,EAAE,OAAO,CACrB,cAAeA,EAAE,QAAQ,EACzB,WAAYA,EAAE,QAAQ,EACtB,eAAgBA,EAAE,QAAQ,EAC1B,iBAAkBA,EAAE,QAAQ,EAC5B,iBAAkBA,EAAE,QAAQ,EAC5B,oBAAqBA,EAAE,QAAQ,EAC/B,aAAcA,EAAE,QAAQ,CAC1B,CAAC,EACD,SAAUA,EAAE,OAAO,CACjB,gBAAiBA,EAAE,OAAO,EAC1B,cAAeA,EAAE,OAAO,EACxB,kBAAmBA,EAAE,QAAQ,EAC7B,gBAAiBA,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,IAAI,GAAG,EAC1C,qBAAsBA,EAAE,QAAQ,CAClC,CAAC,EACD,SAAUA,EAAE,OAAO,CACjB,WAAYA,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EACtC,YAAaA,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EACvC,aAAcA,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EACxC,WAAYA,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EACtC,UAAWA,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,CACvC,CAAC,CACH,CAAC,EAKeC,EAAA9B,GAAA,wBAmDM8B,EAAA/B,GAAA,iBAwBA+B,EAAA7B,GAAA,oBAaA6B,EAAA5B,GAAA,2BAcA4B,EAAA3B,GAAA,sBAaA2B,EAAA1B,GAAA,mBAqBA0B,EAAAzB,GAAA,uBC3OtB,IAAA0B,GAAA,GAAAC,GAAAD,GAAA,oBAAAE,GAAA,aAAAC,GAAA,aAAAC,KA2BA,SAASC,GAAqBC,EAA0B,CACtD,IAAMC,EAAMD,EAAS,QAAQ,IAAK,EAAE,EAC9BE,EAAI,SAASD,EAAI,UAAU,EAAG,CAAC,EAAG,EAAE,EACpCE,EAAI,SAASF,EAAI,UAAU,EAAG,CAAC,EAAG,EAAE,EACpCG,EAAI,SAASH,EAAI,UAAU,EAAG,CAAC,EAAG,EAAE,EAK1C,OAFmB,KAAQC,EAAI,KAAQC,EAAI,KAAQC,GAAK,IAErC,GAAM,UAAY,SACvC,CAKA,eAAsBP,GAASQ,EAAUC,EAAmC,CAC1E,IAAMC,EAAS,MAAMC,GAAcH,EAAKC,CAAM,EAE9C,MAAO,CACL,aAAcC,EAAO,SAAS,aAC9B,eAAgBA,EAAO,SAAS,eAChC,UAAWR,GAAqBQ,EAAO,SAAS,YAAY,EAC5D,YAAaR,GAAqBQ,EAAO,SAAS,cAAc,EAChE,UAAWA,EAAO,SAAS,UAC3B,aAAcA,EAAO,SAAS,aAC9B,SAAUA,EAAO,YAAY,KAC7B,cAAeA,EAAO,YAAY,SACpC,CACF,CAMA,eAAsBT,GACpBO,EACAC,EACAG,EACmB,CAEnB,IAAMC,EAAYd,GAAe,QAAQ,EAAE,MAAMa,CAAO,EAGlDF,EAAS,MAAMC,GAAcH,EAAKC,CAAM,EAG9C,OAAII,EAAU,eAAiB,SAC7BH,EAAO,SAAS,aAAeG,EAAU,cAEvCA,EAAU,iBAAmB,SAC/BH,EAAO,SAAS,eAAiBG,EAAU,gBAEzCA,EAAU,YAAc,SAC1BH,EAAO,SAAS,UAAYG,EAAU,WAEpCA,EAAU,eAAiB,SAC7BH,EAAO,SAAS,aAAeG,EAAU,cAIvCA,EAAU,WAAa,SACzBH,EAAO,YAAY,KAAOG,EAAU,UAElCA,EAAU,gBAAkB,SAC9BH,EAAO,YAAY,UAAYG,EAAU,eAI3C,MAAMC,GAAwBN,EAAKC,EAAQ,WAAYC,EAAO,QAAQ,GAElEG,EAAU,UAAYA,EAAU,gBAClC,MAAMC,GAAwBN,EAAKC,EAAQ,cAAeC,EAAO,WAAW,EAIvEV,GAASQ,EAAKC,CAAM,CAC7B,CAvGA,IAUaV,GAVbgB,GAAAC,EAAA,kBAAAC,IAAAC,IAAAC,IAGAC,KACAC,KAMatB,GAAiBuB,EAAE,OAAO,CACrC,aAAcA,EAAE,OAAO,EAAE,MAAM,mBAAmB,EAClD,eAAgBA,EAAE,OAAO,EAAE,MAAM,mBAAmB,EACpD,UAAWA,EAAE,OAAO,EAAE,MAAM,mBAAmB,EAAE,SAAS,EAC1D,YAAaA,EAAE,OAAO,EAAE,MAAM,mBAAmB,EAAE,SAAS,EAC5D,UAAWA,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EACrC,aAAcA,EAAE,MAAMA,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,SAAS,EACjD,SAAUA,EAAE,OAAO,EAAE,SAAS,EAC9B,cAAeA,EAAE,OAAO,EAAE,SAAS,CACrC,CAAC,EAQQC,EAAArB,GAAA,wBAeaqB,EAAAvB,GAAA,YAmBAuB,EAAAtB,GAAA,cC7DtBuB,IAAAC,IAAAC,IAEAC,KCFAC,IAAAC,IAAAC,ICAAC,IAAAC,IAAAC,ICAAC,IAAAC,IAAAC,IAAO,IAAMC,EAAU,IAAI,YACdC,GAAU,IAAI,YACrBC,GAAY,GAAK,GAChB,SAASC,MAAUC,EAAS,CAC/B,IAAMC,EAAOD,EAAQ,OAAO,CAACE,EAAK,CAAE,OAAAC,CAAO,IAAMD,EAAMC,EAAQ,CAAC,EAC1DC,EAAM,IAAI,WAAWH,CAAI,EAC3BI,EAAI,EACR,QAAWC,KAAUN,EACjBI,EAAI,IAAIE,EAAQD,CAAC,EACjBA,GAAKC,EAAO,OAEhB,OAAOF,CACX,CATgBG,EAAAR,GAAA,UCHhBS,IAAAC,IAAAC,IAAO,SAASC,GAAaC,EAAO,CAChC,GAAI,WAAW,UAAU,SACrB,OAAOA,EAAM,SAAS,EAE1B,IAAMC,EAAa,MACbC,EAAM,CAAC,EACb,QAASC,EAAI,EAAGA,EAAIH,EAAM,OAAQG,GAAKF,EACnCC,EAAI,KAAK,OAAO,aAAa,MAAM,KAAMF,EAAM,SAASG,EAAGA,EAAIF,CAAU,CAAC,CAAC,EAE/E,OAAO,KAAKC,EAAI,KAAK,EAAE,CAAC,CAC5B,CAVgBE,EAAAL,GAAA,gBAWT,SAASM,GAAaC,EAAS,CAClC,GAAI,WAAW,WACX,OAAO,WAAW,WAAWA,CAAO,EAExC,IAAMC,EAAS,KAAKD,CAAO,EACrBE,EAAQ,IAAI,WAAWD,EAAO,MAAM,EAC1C,QAASJ,EAAI,EAAGA,EAAII,EAAO,OAAQJ,IAC/BK,EAAML,CAAC,EAAII,EAAO,WAAWJ,CAAC,EAElC,OAAOK,CACX,CAVgBJ,EAAAC,GAAA,gBFTT,SAASI,GAAOC,EAAO,CAC1B,GAAI,WAAW,WACX,OAAO,WAAW,WAAW,OAAOA,GAAU,SAAWA,EAAQC,GAAQ,OAAOD,CAAK,EAAG,CACpF,SAAU,WACd,CAAC,EAEL,IAAIE,EAAUF,EACVE,aAAmB,aACnBA,EAAUD,GAAQ,OAAOC,CAAO,GAEpCA,EAAUA,EAAQ,QAAQ,KAAM,GAAG,EAAE,QAAQ,KAAM,GAAG,EAAE,QAAQ,MAAO,EAAE,EACzE,GAAI,CACA,OAAOC,GAAaD,CAAO,CAC/B,MACM,CACF,MAAM,IAAI,UAAU,mDAAmD,CAC3E,CACJ,CAjBgBE,EAAAL,GAAA,UAkBT,SAASM,GAAOL,EAAO,CAC1B,IAAIM,EAAYN,EAIhB,OAHI,OAAOM,GAAc,WACrBA,EAAYC,EAAQ,OAAOD,CAAS,GAEpC,WAAW,UAAU,SACdA,EAAU,SAAS,CAAE,SAAU,YAAa,YAAa,EAAK,CAAC,EAEnEE,GAAaF,CAAS,EAAE,QAAQ,KAAM,EAAE,EAAE,QAAQ,MAAO,GAAG,EAAE,QAAQ,MAAO,GAAG,CAC3F,CATgBF,EAAAC,GAAA,UGpBhBI,IAAAC,IAAAC,IAAO,IAAMC,GAAN,cAAwB,KAAM,CAArC,MAAqC,CAAAC,EAAA,kBACjC,OAAO,KAAO,mBACd,KAAO,mBACP,YAAYC,EAASC,EAAS,CAC1B,MAAMD,EAASC,CAAO,EACtB,KAAK,KAAO,KAAK,YAAY,KAC7B,MAAM,oBAAoB,KAAM,KAAK,WAAW,CACpD,CACJ,EACaC,EAAN,cAAuCJ,EAAU,CATxD,MASwD,CAAAC,EAAA,iCACpD,OAAO,KAAO,kCACd,KAAO,kCACP,MACA,OACA,QACA,YAAYC,EAASG,EAASC,EAAQ,cAAeC,EAAS,cAAe,CACzE,MAAML,EAAS,CAAE,MAAO,CAAE,MAAAI,EAAO,OAAAC,EAAQ,QAAAF,CAAQ,CAAE,CAAC,EACpD,KAAK,MAAQC,EACb,KAAK,OAASC,EACd,KAAK,QAAUF,CACnB,CACJ,EACaG,GAAN,cAAyBR,EAAU,CAtB1C,MAsB0C,CAAAC,EAAA,mBACtC,OAAO,KAAO,kBACd,KAAO,kBACP,MACA,OACA,QACA,YAAYC,EAASG,EAASC,EAAQ,cAAeC,EAAS,cAAe,CACzE,MAAML,EAAS,CAAE,MAAO,CAAE,MAAAI,EAAO,OAAAC,EAAQ,QAAAF,CAAQ,CAAE,CAAC,EACpD,KAAK,MAAQC,EACb,KAAK,OAASC,EACd,KAAK,QAAUF,CACnB,CACJ,EACaI,GAAN,cAAgCT,EAAU,CAnCjD,MAmCiD,CAAAC,EAAA,0BAC7C,OAAO,KAAO,2BACd,KAAO,0BACX,EACaS,GAAN,cAA+BV,EAAU,CAvChD,MAuCgD,CAAAC,EAAA,yBAC5C,OAAO,KAAO,yBACd,KAAO,wBACX,EAYO,IAAMU,EAAN,cAAyBC,EAAU,CAtD1C,MAsD0C,CAAAC,EAAA,mBACtC,OAAO,KAAO,kBACd,KAAO,iBACX,EACaC,GAAN,cAAyBF,EAAU,CA1D1C,MA0D0C,CAAAC,EAAA,mBACtC,OAAO,KAAO,kBACd,KAAO,iBACX,EA+BO,IAAME,GAAN,cAA6CC,EAAU,CA5F9D,MA4F8D,CAAAC,EAAA,uCAC1D,OAAO,KAAO,wCACd,KAAO,wCACP,YAAYC,EAAU,gCAAiCC,EAAS,CAC5D,MAAMD,EAASC,CAAO,CAC1B,CACJ,EClGAC,IAAAC,IAAAC,IAAA,SAASC,GAASC,EAAMC,EAAO,iBAAkB,CAC7C,OAAO,IAAI,UAAU,kDAAkDA,CAAI,YAAYD,CAAI,EAAE,CACjG,CAFSE,EAAAH,GAAA,YAGT,SAASI,GAAYC,EAAWJ,EAAM,CAClC,OAAOI,EAAU,OAASJ,CAC9B,CAFSE,EAAAC,GAAA,eAGT,SAASE,GAAcC,EAAM,CACzB,OAAO,SAASA,EAAK,KAAK,MAAM,CAAC,EAAG,EAAE,CAC1C,CAFSJ,EAAAG,GAAA,iBAGT,SAASE,GAAcC,EAAK,CACxB,OAAQA,EAAK,CACT,IAAK,QACD,MAAO,QACX,IAAK,QACD,MAAO,QACX,IAAK,QACD,MAAO,QACX,QACI,MAAM,IAAI,MAAM,aAAa,CACrC,CACJ,CAXSN,EAAAK,GAAA,iBAYT,SAASE,GAAWC,EAAKC,EAAO,CAC5B,GAAIA,GAAS,CAACD,EAAI,OAAO,SAASC,CAAK,EACnC,MAAM,IAAI,UAAU,sEAAsEA,CAAK,GAAG,CAE1G,CAJST,EAAAO,GAAA,cAKF,SAASG,GAAkBF,EAAKF,EAAKG,EAAO,CAC/C,OAAQH,EAAK,CACT,IAAK,QACL,IAAK,QACL,IAAK,QAAS,CACV,GAAI,CAACL,GAAYO,EAAI,UAAW,MAAM,EAClC,MAAMX,GAAS,MAAM,EACzB,IAAMc,EAAW,SAASL,EAAI,MAAM,CAAC,EAAG,EAAE,EAE1C,GADeH,GAAcK,EAAI,UAAU,IAAI,IAChCG,EACX,MAAMd,GAAS,OAAOc,CAAQ,GAAI,gBAAgB,EACtD,KACJ,CACA,IAAK,QACL,IAAK,QACL,IAAK,QAAS,CACV,GAAI,CAACV,GAAYO,EAAI,UAAW,mBAAmB,EAC/C,MAAMX,GAAS,mBAAmB,EACtC,IAAMc,EAAW,SAASL,EAAI,MAAM,CAAC,EAAG,EAAE,EAE1C,GADeH,GAAcK,EAAI,UAAU,IAAI,IAChCG,EACX,MAAMd,GAAS,OAAOc,CAAQ,GAAI,gBAAgB,EACtD,KACJ,CACA,IAAK,QACL,IAAK,QACL,IAAK,QAAS,CACV,GAAI,CAACV,GAAYO,EAAI,UAAW,SAAS,EACrC,MAAMX,GAAS,SAAS,EAC5B,IAAMc,EAAW,SAASL,EAAI,MAAM,CAAC,EAAG,EAAE,EAE1C,GADeH,GAAcK,EAAI,UAAU,IAAI,IAChCG,EACX,MAAMd,GAAS,OAAOc,CAAQ,GAAI,gBAAgB,EACtD,KACJ,CACA,IAAK,UACL,IAAK,QAAS,CACV,GAAI,CAACV,GAAYO,EAAI,UAAW,SAAS,EACrC,MAAMX,GAAS,SAAS,EAC5B,KACJ,CACA,IAAK,YACL,IAAK,YACL,IAAK,YAAa,CACd,GAAI,CAACI,GAAYO,EAAI,UAAWF,CAAG,EAC/B,MAAMT,GAASS,CAAG,EACtB,KACJ,CACA,IAAK,QACL,IAAK,QACL,IAAK,QAAS,CACV,GAAI,CAACL,GAAYO,EAAI,UAAW,OAAO,EACnC,MAAMX,GAAS,OAAO,EAC1B,IAAMc,EAAWN,GAAcC,CAAG,EAElC,GADeE,EAAI,UAAU,aACdG,EACX,MAAMd,GAASc,EAAU,sBAAsB,EACnD,KACJ,CACA,QACI,MAAM,IAAI,UAAU,2CAA2C,CACvE,CACAJ,GAAWC,EAAKC,CAAK,CACzB,CA/DgBT,EAAAU,GAAA,qBC1BhBE,IAAAC,IAAAC,IAAA,SAASC,GAAQC,EAAKC,KAAWC,EAAO,CAEpC,GADAA,EAAQA,EAAM,OAAO,OAAO,EACxBA,EAAM,OAAS,EAAG,CAClB,IAAMC,EAAOD,EAAM,IAAI,EACvBF,GAAO,eAAeE,EAAM,KAAK,IAAI,CAAC,QAAQC,CAAI,GACtD,MACSD,EAAM,SAAW,EACtBF,GAAO,eAAeE,EAAM,CAAC,CAAC,OAAOA,EAAM,CAAC,CAAC,IAG7CF,GAAO,WAAWE,EAAM,CAAC,CAAC,IAE9B,OAAID,GAAU,KACVD,GAAO,aAAaC,CAAM,GAErB,OAAOA,GAAW,YAAcA,EAAO,KAC5CD,GAAO,sBAAsBC,EAAO,IAAI,GAEnC,OAAOA,GAAW,UAAYA,GAAU,MACzCA,EAAO,aAAa,OACpBD,GAAO,4BAA4BC,EAAO,YAAY,IAAI,IAG3DD,CACX,CAxBSI,EAAAL,GAAA,WAyBT,IAAOM,GAAQD,EAAA,CAACH,KAAWC,IAChBH,GAAQ,eAAgBE,EAAQ,GAAGC,CAAK,EADpC,WAGR,SAASI,GAAQC,EAAKN,KAAWC,EAAO,CAC3C,OAAOH,GAAQ,eAAeQ,CAAG,sBAAuBN,EAAQ,GAAGC,CAAK,CAC5E,CAFgBE,EAAAE,GAAA,WC5BhBE,IAAAC,IAAAC,IAKO,SAASC,GAAYC,EAAK,CAC7B,OAAOA,IAAM,OAAO,WAAW,IAAM,WACzC,CAFgBC,EAAAF,GAAA,eAGT,SAASG,GAAYF,EAAK,CAC7B,OAAOA,IAAM,OAAO,WAAW,IAAM,WACzC,CAFgBC,EAAAC,GAAA,eAGhB,IAAOC,GAAQF,EAACD,GACLD,GAAYC,CAAG,GAAKE,GAAYF,CAAG,EAD/B,WCXfI,IAAAC,IAAAC,IAAA,IAAOC,GAAQC,EAAA,IAAIC,IAAY,CAC3B,IAAMC,EAAUD,EAAQ,OAAO,OAAO,EACtC,GAAIC,EAAQ,SAAW,GAAKA,EAAQ,SAAW,EAC3C,MAAO,GAEX,IAAIC,EACJ,QAAWC,KAAUF,EAAS,CAC1B,IAAMG,EAAa,OAAO,KAAKD,CAAM,EACrC,GAAI,CAACD,GAAOA,EAAI,OAAS,EAAG,CACxBA,EAAM,IAAI,IAAIE,CAAU,EACxB,QACJ,CACA,QAAWC,KAAaD,EAAY,CAChC,GAAIF,EAAI,IAAIG,CAAS,EACjB,MAAO,GAEXH,EAAI,IAAIG,CAAS,CACrB,CACJ,CACA,MAAO,EACX,EApBe,WCAfC,IAAAC,IAAAC,IAAA,SAASC,GAAaC,EAAO,CACzB,OAAO,OAAOA,GAAU,UAAYA,IAAU,IAClD,CAFSC,EAAAF,GAAA,gBAGT,IAAOG,GAAQD,EAACE,GAAU,CACtB,GAAI,CAACJ,GAAaI,CAAK,GAAK,OAAO,UAAU,SAAS,KAAKA,CAAK,IAAM,kBAClE,MAAO,GAEX,GAAI,OAAO,eAAeA,CAAK,IAAM,KACjC,MAAO,GAEX,IAAIC,EAAQD,EACZ,KAAO,OAAO,eAAeC,CAAK,IAAM,MACpCA,EAAQ,OAAO,eAAeA,CAAK,EAEvC,OAAO,OAAO,eAAeD,CAAK,IAAMC,CAC5C,EAZe,WCHfC,IAAAC,IAAAC,IAAA,IAAOC,GAAQC,EAAA,CAACC,EAAKC,IAAQ,CACzB,GAAID,EAAI,WAAW,IAAI,GAAKA,EAAI,WAAW,IAAI,EAAG,CAC9C,GAAM,CAAE,cAAAE,CAAc,EAAID,EAAI,UAC9B,GAAI,OAAOC,GAAkB,UAAYA,EAAgB,KACrD,MAAM,IAAI,UAAU,GAAGF,CAAG,uDAAuD,CAEzF,CACJ,EAPe,WCAfG,IAAAC,IAAAC,IACA,SAASC,GAAcC,EAAK,CACxB,IAAIC,EACAC,EACJ,OAAQF,EAAI,IAAK,CACb,IAAK,MAAO,CACR,OAAQA,EAAI,IAAK,CACb,IAAK,YACL,IAAK,YACL,IAAK,YACDC,EAAY,CAAE,KAAMD,EAAI,GAAI,EAC5BE,EAAYF,EAAI,KAAO,CAAC,MAAM,EAAI,CAAC,QAAQ,EAC3C,MACJ,QACI,MAAM,IAAIG,GAAiB,8DAA8D,CACjG,CACA,KACJ,CACA,IAAK,MAAO,CACR,OAAQH,EAAI,IAAK,CACb,IAAK,QACL,IAAK,QACL,IAAK,QACDC,EAAY,CAAE,KAAM,UAAW,KAAM,OAAOD,EAAI,IAAI,MAAM,EAAE,CAAC,EAAG,EAChEE,EAAYF,EAAI,EAAI,CAAC,MAAM,EAAI,CAAC,QAAQ,EACxC,MACJ,IAAK,QACL,IAAK,QACL,IAAK,QACDC,EAAY,CAAE,KAAM,oBAAqB,KAAM,OAAOD,EAAI,IAAI,MAAM,EAAE,CAAC,EAAG,EAC1EE,EAAYF,EAAI,EAAI,CAAC,MAAM,EAAI,CAAC,QAAQ,EACxC,MACJ,IAAK,WACL,IAAK,eACL,IAAK,eACL,IAAK,eACDC,EAAY,CACR,KAAM,WACN,KAAM,OAAO,SAASD,EAAI,IAAI,MAAM,EAAE,EAAG,EAAE,GAAK,CAAC,EACrD,EACAE,EAAYF,EAAI,EAAI,CAAC,UAAW,WAAW,EAAI,CAAC,UAAW,SAAS,EACpE,MACJ,QACI,MAAM,IAAIG,GAAiB,8DAA8D,CACjG,CACA,KACJ,CACA,IAAK,KAAM,CACP,OAAQH,EAAI,IAAK,CACb,IAAK,QACDC,EAAY,CAAE,KAAM,QAAS,WAAY,OAAQ,EACjDC,EAAYF,EAAI,EAAI,CAAC,MAAM,EAAI,CAAC,QAAQ,EACxC,MACJ,IAAK,QACDC,EAAY,CAAE,KAAM,QAAS,WAAY,OAAQ,EACjDC,EAAYF,EAAI,EAAI,CAAC,MAAM,EAAI,CAAC,QAAQ,EACxC,MACJ,IAAK,QACDC,EAAY,CAAE,KAAM,QAAS,WAAY,OAAQ,EACjDC,EAAYF,EAAI,EAAI,CAAC,MAAM,EAAI,CAAC,QAAQ,EACxC,MACJ,IAAK,UACL,IAAK,iBACL,IAAK,iBACL,IAAK,iBACDC,EAAY,CAAE,KAAM,OAAQ,WAAYD,EAAI,GAAI,EAChDE,EAAYF,EAAI,EAAI,CAAC,YAAY,EAAI,CAAC,EACtC,MACJ,QACI,MAAM,IAAIG,GAAiB,8DAA8D,CACjG,CACA,KACJ,CACA,IAAK,MAAO,CACR,OAAQH,EAAI,IAAK,CACb,IAAK,UACL,IAAK,QACDC,EAAY,CAAE,KAAM,SAAU,EAC9BC,EAAYF,EAAI,EAAI,CAAC,MAAM,EAAI,CAAC,QAAQ,EACxC,MACJ,IAAK,UACL,IAAK,iBACL,IAAK,iBACL,IAAK,iBACDC,EAAY,CAAE,KAAMD,EAAI,GAAI,EAC5BE,EAAYF,EAAI,EAAI,CAAC,YAAY,EAAI,CAAC,EACtC,MACJ,QACI,MAAM,IAAIG,GAAiB,8DAA8D,CACjG,CACA,KACJ,CACA,QACI,MAAM,IAAIA,GAAiB,6DAA6D,CAChG,CACA,MAAO,CAAE,UAAAF,EAAW,UAAAC,CAAU,CAClC,CA/FSE,EAAAL,GAAA,iBAgGT,IAAOM,GAAQD,EAAA,MAAOJ,GAAQ,CAC1B,GAAI,CAACA,EAAI,IACL,MAAM,IAAI,UAAU,0DAA0D,EAElF,GAAM,CAAE,UAAAC,EAAW,UAAAC,CAAU,EAAIH,GAAcC,CAAG,EAC5CM,EAAU,CAAE,GAAGN,CAAI,EACzB,OAAIM,EAAQ,MAAQ,OAChB,OAAOA,EAAQ,IAEnB,OAAOA,EAAQ,IACR,OAAO,OAAO,UAAU,MAAOA,EAASL,EAAWD,EAAI,KAAQ,EAAAA,EAAI,GAAKA,EAAI,MAAsBA,EAAI,SAAWE,CAAS,CACrI,EAXe,WCjGfK,IAAAC,IAAAC,IACA,IAAOC,GAAQC,EAAA,CAACC,EAAKC,EAAmBC,EAAkBC,EAAiBC,IAAe,CACtF,GAAIA,EAAW,OAAS,QAAaD,GAAiB,OAAS,OAC3D,MAAM,IAAIH,EAAI,gEAAgE,EAElF,GAAI,CAACG,GAAmBA,EAAgB,OAAS,OAC7C,OAAO,IAAI,IAEf,GAAI,CAAC,MAAM,QAAQA,EAAgB,IAAI,GACnCA,EAAgB,KAAK,SAAW,GAChCA,EAAgB,KAAK,KAAME,GAAU,OAAOA,GAAU,UAAYA,EAAM,SAAW,CAAC,EACpF,MAAM,IAAIL,EAAI,uFAAuF,EAEzG,IAAIM,EACAJ,IAAqB,OACrBI,EAAa,IAAI,IAAI,CAAC,GAAG,OAAO,QAAQJ,CAAgB,EAAG,GAAGD,EAAkB,QAAQ,CAAC,CAAC,EAG1FK,EAAaL,EAEjB,QAAWM,KAAaJ,EAAgB,KAAM,CAC1C,GAAI,CAACG,EAAW,IAAIC,CAAS,EACzB,MAAM,IAAIC,GAAiB,+BAA+BD,CAAS,qBAAqB,EAE5F,GAAIH,EAAWG,CAAS,IAAM,OAC1B,MAAM,IAAIP,EAAI,+BAA+BO,CAAS,cAAc,EAExE,GAAID,EAAW,IAAIC,CAAS,GAAKJ,EAAgBI,CAAS,IAAM,OAC5D,MAAM,IAAIP,EAAI,+BAA+BO,CAAS,+BAA+B,CAE7F,CACA,OAAO,IAAI,IAAIJ,EAAgB,IAAI,CACvC,EA/Be,WCDfM,IAAAC,IAAAC,IAAA,IAAOC,GAAQC,EAAA,CAACC,EAAQC,IAAe,CACnC,GAAIA,IAAe,SACd,CAAC,MAAM,QAAQA,CAAU,GAAKA,EAAW,KAAM,GAAM,OAAO,GAAM,QAAQ,GAC3E,MAAM,IAAI,UAAU,IAAID,CAAM,sCAAsC,EAExE,GAAKC,EAGL,OAAO,IAAI,IAAIA,CAAU,CAC7B,EATe,WCAfC,IAAAC,IAAAC,ICAAC,IAAAC,IAAAC,IACO,SAASC,GAAMC,EAAK,CACvB,OAAOC,GAASD,CAAG,GAAK,OAAOA,EAAI,KAAQ,QAC/C,CAFgBE,EAAAH,GAAA,SAGT,SAASI,GAAaH,EAAK,CAC9B,OAAQA,EAAI,MAAQ,QACdA,EAAI,MAAQ,OAAS,OAAOA,EAAI,MAAS,UAAa,OAAOA,EAAI,GAAM,SACjF,CAHgBE,EAAAC,GAAA,gBAIT,SAASC,GAAYJ,EAAK,CAC7B,OAAOA,EAAI,MAAQ,OAAS,OAAOA,EAAI,EAAM,KAAe,OAAOA,EAAI,KAAS,GACpF,CAFgBE,EAAAE,GAAA,eAGT,SAASC,GAAYL,EAAK,CAC7B,OAAOA,EAAI,MAAQ,OAAS,OAAOA,EAAI,GAAM,QACjD,CAFgBE,EAAAG,GAAA,eDPhB,IAAIC,GACEC,GAAYC,EAAA,MAAOC,EAAKC,EAAKC,EAAKC,EAAS,KAAU,CACvDN,KAAU,IAAI,QACd,IAAIO,EAASP,GAAM,IAAIG,CAAG,EAC1B,GAAII,IAASF,CAAG,EACZ,OAAOE,EAAOF,CAAG,EAErB,IAAMG,EAAY,MAAMC,GAAU,CAAE,GAAGL,EAAK,IAAAC,CAAI,CAAC,EACjD,OAAIC,GACA,OAAO,OAAOH,CAAG,EAChBI,EAIDA,EAAOF,CAAG,EAAIG,EAHdR,GAAM,IAAIG,EAAK,CAAE,CAACE,CAAG,EAAGG,CAAU,CAAC,EAKhCA,CACX,EAhBkB,aAiBZE,GAAkBR,EAAA,CAACS,EAAWN,IAAQ,CACxCL,KAAU,IAAI,QACd,IAAIO,EAASP,GAAM,IAAIW,CAAS,EAChC,GAAIJ,IAASF,CAAG,EACZ,OAAOE,EAAOF,CAAG,EAErB,IAAMO,EAAWD,EAAU,OAAS,SAC9BE,EAAc,EAAAD,EAChBJ,EACJ,GAAIG,EAAU,oBAAsB,SAAU,CAC1C,OAAQN,EAAK,CACT,IAAK,UACL,IAAK,iBACL,IAAK,iBACL,IAAK,iBACD,MACJ,QACI,MAAM,IAAI,UAAU,4DAA4D,CACxF,CACAG,EAAYG,EAAU,YAAYA,EAAU,kBAAmBE,EAAaD,EAAW,CAAC,EAAI,CAAC,YAAY,CAAC,CAC9G,CACA,GAAID,EAAU,oBAAsB,UAAW,CAC3C,GAAIN,IAAQ,SAAWA,IAAQ,UAC3B,MAAM,IAAI,UAAU,4DAA4D,EAEpFG,EAAYG,EAAU,YAAYA,EAAU,kBAAmBE,EAAa,CACxED,EAAW,SAAW,MAC1B,CAAC,CACL,CACA,OAAQD,EAAU,kBAAmB,CACjC,IAAK,YACL,IAAK,YACL,IAAK,YAAa,CACd,GAAIN,IAAQM,EAAU,kBAAkB,YAAY,EAChD,MAAM,IAAI,UAAU,4DAA4D,EAEpFH,EAAYG,EAAU,YAAYA,EAAU,kBAAmBE,EAAa,CACxED,EAAW,SAAW,MAC1B,CAAC,CACL,CACJ,CACA,GAAID,EAAU,oBAAsB,MAAO,CACvC,IAAIG,EACJ,OAAQT,EAAK,CACT,IAAK,WACDS,EAAO,QACP,MACJ,IAAK,QACL,IAAK,QACL,IAAK,eACDA,EAAO,UACP,MACJ,IAAK,QACL,IAAK,QACL,IAAK,eACDA,EAAO,UACP,MACJ,IAAK,QACL,IAAK,QACL,IAAK,eACDA,EAAO,UACP,MACJ,QACI,MAAM,IAAI,UAAU,4DAA4D,CACxF,CACA,GAAIT,EAAI,WAAW,UAAU,EACzB,OAAOM,EAAU,YAAY,CACzB,KAAM,WACN,KAAAG,CACJ,EAAGD,EAAaD,EAAW,CAAC,SAAS,EAAI,CAAC,SAAS,CAAC,EAExDJ,EAAYG,EAAU,YAAY,CAC9B,KAAMN,EAAI,WAAW,IAAI,EAAI,UAAY,oBACzC,KAAAS,CACJ,EAAGD,EAAa,CAACD,EAAW,SAAW,MAAM,CAAC,CAClD,CACA,GAAID,EAAU,oBAAsB,KAAM,CAMtC,IAAMI,EALO,IAAI,IAAI,CACjB,CAAC,aAAc,OAAO,EACtB,CAAC,YAAa,OAAO,EACrB,CAAC,YAAa,OAAO,CACzB,CAAC,EACuB,IAAIJ,EAAU,sBAAsB,UAAU,EACtE,GAAI,CAACI,EACD,MAAM,IAAI,UAAU,4DAA4D,EAEhFV,IAAQ,SAAWU,IAAe,UAClCP,EAAYG,EAAU,YAAY,CAC9B,KAAM,QACN,WAAAI,CACJ,EAAGF,EAAa,CAACD,EAAW,SAAW,MAAM,CAAC,GAE9CP,IAAQ,SAAWU,IAAe,UAClCP,EAAYG,EAAU,YAAY,CAC9B,KAAM,QACN,WAAAI,CACJ,EAAGF,EAAa,CAACD,EAAW,SAAW,MAAM,CAAC,GAE9CP,IAAQ,SAAWU,IAAe,UAClCP,EAAYG,EAAU,YAAY,CAC9B,KAAM,QACN,WAAAI,CACJ,EAAGF,EAAa,CAACD,EAAW,SAAW,MAAM,CAAC,GAE9CP,EAAI,WAAW,SAAS,IACxBG,EAAYG,EAAU,YAAY,CAC9B,KAAM,OACN,WAAAI,CACJ,EAAGF,EAAaD,EAAW,CAAC,EAAI,CAAC,YAAY,CAAC,EAEtD,CACA,GAAI,CAACJ,EACD,MAAM,IAAI,UAAU,4DAA4D,EAEpF,OAAKD,EAIDA,EAAOF,CAAG,EAAIG,EAHdR,GAAM,IAAIW,EAAW,CAAE,CAACN,CAAG,EAAGG,CAAU,CAAC,EAKtCA,CACX,EAzHwB,mBA0HjBQ,GAAQd,EAAA,MAAOC,EAAKE,IAAQ,CAI/B,GAHIF,aAAe,YAGfc,GAAYd,CAAG,EACf,OAAOA,EAEX,GAAIe,GAAYf,CAAG,EAAG,CAClB,GAAIA,EAAI,OAAS,SACb,OAAOA,EAAI,OAAO,EAEtB,GAAI,gBAAiBA,GAAO,OAAOA,EAAI,aAAgB,WACnD,GAAI,CACA,OAAOO,GAAgBP,EAAKE,CAAG,CACnC,OACOc,EAAK,CACR,GAAIA,aAAe,UACf,MAAMA,CAEd,CAEJ,IAAIf,EAAMD,EAAI,OAAO,CAAE,OAAQ,KAAM,CAAC,EACtC,OAAOF,GAAUE,EAAKC,EAAKC,CAAG,CAClC,CACA,GAAIe,GAAMjB,CAAG,EACT,OAAIA,EAAI,EACGkB,GAAOlB,EAAI,CAAC,EAEhBF,GAAUE,EAAKA,EAAKE,EAAK,EAAI,EAExC,MAAM,IAAI,MAAM,aAAa,CACjC,EA/Be,WEhJfiB,IAAAC,IAAAC,IAGA,IAAMC,GAAMC,EAACC,GAAQA,IAAM,OAAO,WAAW,EAAjC,OACNC,GAAeF,EAAA,CAACG,EAAKF,EAAKG,IAAU,CACtC,GAAIH,EAAI,MAAQ,OAAW,CACvB,IAAII,EACJ,OAAQD,EAAO,CACX,IAAK,OACL,IAAK,SACDC,EAAW,MACX,MACJ,IAAK,UACL,IAAK,UACDA,EAAW,MACX,KACR,CACA,GAAIJ,EAAI,MAAQI,EACZ,MAAM,IAAI,UAAU,sDAAsDA,CAAQ,gBAAgB,CAE1G,CACA,GAAIJ,EAAI,MAAQ,QAAaA,EAAI,MAAQE,EACrC,MAAM,IAAI,UAAU,sDAAsDA,CAAG,gBAAgB,EAEjG,GAAI,MAAM,QAAQF,EAAI,OAAO,EAAG,CAC5B,IAAIK,EACJ,OAAQ,GAAM,CACV,KAAKF,IAAU,QAAUA,IAAU,UACnC,KAAKD,IAAQ,MACb,KAAKA,EAAI,SAAS,QAAQ,EACtBG,EAAgBF,EAChB,MACJ,KAAKD,EAAI,WAAW,OAAO,EACvBG,EAAgB,aAChB,MACJ,IAAK,0BAA0B,KAAKH,CAAG,EAC/B,CAACA,EAAI,SAAS,KAAK,GAAKA,EAAI,SAAS,IAAI,EACzCG,EAAgBF,IAAU,UAAY,UAAY,YAGlDE,EAAgBF,EAEpB,MACJ,KAAKA,IAAU,WAAaD,EAAI,WAAW,KAAK,GAC5CG,EAAgB,UAChB,MACJ,KAAKF,IAAU,UACXE,EAAgBH,EAAI,WAAW,KAAK,EAAI,YAAc,aACtD,KACR,CACA,GAAIG,GAAiBL,EAAI,SAAS,WAAWK,CAAa,IAAM,GAC5D,MAAM,IAAI,UAAU,+DAA+DA,CAAa,gBAAgB,CAExH,CACA,MAAO,EACX,EAnDqB,gBAoDfC,GAAqBP,EAAA,CAACG,EAAKF,EAAKG,IAAU,CAC5C,GAAI,EAAAH,aAAe,YAEnB,IAAQO,GAAMP,CAAG,EAAG,CAChB,GAAQQ,GAAYR,CAAG,GAAKC,GAAaC,EAAKF,EAAKG,CAAK,EACpD,OACJ,MAAM,IAAI,UAAU,yHAAyH,CACjJ,CACA,GAAI,CAACM,GAAUT,CAAG,EACd,MAAM,IAAI,UAAUU,GAAgBR,EAAKF,EAAK,YAAa,YAAa,eAAgB,YAAY,CAAC,EAEzG,GAAIA,EAAI,OAAS,SACb,MAAM,IAAI,UAAU,GAAGF,GAAIE,CAAG,CAAC,8DAA8D,EAErG,EAd2B,sBAerBW,GAAsBZ,EAAA,CAACG,EAAKF,EAAKG,IAAU,CAC7C,GAAQI,GAAMP,CAAG,EACb,OAAQG,EAAO,CACX,IAAK,UACL,IAAK,OACD,GAAQS,GAAaZ,CAAG,GAAKC,GAAaC,EAAKF,EAAKG,CAAK,EACrD,OACJ,MAAM,IAAI,UAAU,kDAAkD,EAC1E,IAAK,UACL,IAAK,SACD,GAAQU,GAAYb,CAAG,GAAKC,GAAaC,EAAKF,EAAKG,CAAK,EACpD,OACJ,MAAM,IAAI,UAAU,iDAAiD,CAC7E,CAEJ,GAAI,CAACM,GAAUT,CAAG,EACd,MAAM,IAAI,UAAUU,GAAgBR,EAAKF,EAAK,YAAa,YAAa,cAAc,CAAC,EAE3F,GAAIA,EAAI,OAAS,SACb,MAAM,IAAI,UAAU,GAAGF,GAAIE,CAAG,CAAC,mEAAmE,EAEtG,GAAIA,EAAI,OAAS,SACb,OAAQG,EAAO,CACX,IAAK,OACD,MAAM,IAAI,UAAU,GAAGL,GAAIE,CAAG,CAAC,uEAAuE,EAC1G,IAAK,UACD,MAAM,IAAI,UAAU,GAAGF,GAAIE,CAAG,CAAC,0EAA0E,EAC7G,QACI,KACR,CAEJ,GAAIA,EAAI,OAAS,UACb,OAAQG,EAAO,CACX,IAAK,SACD,MAAM,IAAI,UAAU,GAAGL,GAAIE,CAAG,CAAC,wEAAwE,EAC3G,IAAK,UACD,MAAM,IAAI,UAAU,GAAGF,GAAIE,CAAG,CAAC,yEAAyE,EAC5G,QACI,KACR,CAER,EAzC4B,uBA0CrBc,GAAQf,EAAA,CAACG,EAAKF,EAAKG,IAAU,CACdD,EAAI,WAAW,IAAI,GACjCA,IAAQ,OACRA,EAAI,WAAW,OAAO,GACtB,oCAAoC,KAAKA,CAAG,GAC5C,0CAA0C,KAAKA,CAAG,EAElDI,GAAmBJ,EAAKF,EAAKG,CAAK,EAGlCQ,GAAoBT,EAAKF,EAAKG,CAAK,CAE3C,EAZe,WCjHfY,IAAAC,IAAAC,ICAAC,IAAAC,IAAAC,ICAAC,IAAAC,IAAAC,ICAAC,IAAAC,IAAAC,IACA,IAAOC,GAAQC,EAAA,CAACC,EAAKC,IAAc,CAC/B,IAAMC,EAAO,OAAOF,EAAI,MAAM,EAAE,CAAC,GACjC,OAAQA,EAAK,CACT,IAAK,QACL,IAAK,QACL,IAAK,QACD,MAAO,CAAE,KAAAE,EAAM,KAAM,MAAO,EAChC,IAAK,QACL,IAAK,QACL,IAAK,QACD,MAAO,CAAE,KAAAA,EAAM,KAAM,UAAW,WAAY,SAASF,EAAI,MAAM,EAAE,EAAG,EAAE,GAAK,CAAE,EACjF,IAAK,QACL,IAAK,QACL,IAAK,QACD,MAAO,CAAE,KAAAE,EAAM,KAAM,mBAAoB,EAC7C,IAAK,QACL,IAAK,QACL,IAAK,QACD,MAAO,CAAE,KAAAA,EAAM,KAAM,QAAS,WAAYD,EAAU,UAAW,EACnE,IAAK,UACL,IAAK,QACD,MAAO,CAAE,KAAM,SAAU,EAC7B,IAAK,YACL,IAAK,YACL,IAAK,YACD,MAAO,CAAE,KAAMD,CAAI,EACvB,QACI,MAAM,IAAIG,GAAiB,OAAOH,CAAG,6DAA6D,CAC1G,CACJ,EA7Be,WCDfI,IAAAC,IAAAC,IAEA,IAAOC,GAAQC,EAAA,MAAOC,EAAKC,EAAKC,IAAU,CACtC,GAAID,aAAe,WAAY,CAC3B,GAAI,CAACD,EAAI,WAAW,IAAI,EACpB,MAAM,IAAI,UAAUG,GAAgBF,EAAK,YAAa,YAAa,cAAc,CAAC,EAEtF,OAAO,OAAO,OAAO,UAAU,MAAOA,EAAK,CAAE,KAAM,OAAOD,EAAI,MAAM,EAAE,CAAC,GAAI,KAAM,MAAO,EAAG,GAAO,CAACE,CAAK,CAAC,CAC7G,CACA,OAAAE,GAAkBH,EAAKD,EAAKE,CAAK,EAC1BD,CACX,EATe,WFCf,IAAOI,GAAQC,EAAA,MAAOC,EAAKC,EAAKC,EAAWC,IAAS,CAChD,IAAMC,EAAY,MAAMC,GAAaL,EAAKC,EAAK,QAAQ,EACvDK,GAAeN,EAAKI,CAAS,EAC7B,IAAMG,EAAYC,GAAgBR,EAAKI,EAAU,SAAS,EAC1D,GAAI,CACA,OAAO,MAAM,OAAO,OAAO,OAAOG,EAAWH,EAAWF,EAAWC,CAAI,CAC3E,MACM,CACF,MAAO,EACX,CACJ,EAVe,WDOf,eAAsBM,GAAgBC,EAAKC,EAAKC,EAAS,CACrD,GAAI,CAACC,GAASH,CAAG,EACb,MAAM,IAAII,EAAW,iCAAiC,EAE1D,GAAIJ,EAAI,YAAc,QAAaA,EAAI,SAAW,OAC9C,MAAM,IAAII,EAAW,uEAAuE,EAEhG,GAAIJ,EAAI,YAAc,QAAa,OAAOA,EAAI,WAAc,SACxD,MAAM,IAAII,EAAW,qCAAqC,EAE9D,GAAIJ,EAAI,UAAY,OAChB,MAAM,IAAII,EAAW,qBAAqB,EAE9C,GAAI,OAAOJ,EAAI,WAAc,SACzB,MAAM,IAAII,EAAW,yCAAyC,EAElE,GAAIJ,EAAI,SAAW,QAAa,CAACG,GAASH,EAAI,MAAM,EAChD,MAAM,IAAII,EAAW,uCAAuC,EAEhE,IAAIC,EAAa,CAAC,EAClB,GAAIL,EAAI,UACJ,GAAI,CACA,IAAMM,EAAkBC,GAAKP,EAAI,SAAS,EAC1CK,EAAa,KAAK,MAAMG,GAAQ,OAAOF,CAAe,CAAC,CAC3D,MACM,CACF,MAAM,IAAIF,EAAW,iCAAiC,CAC1D,CAEJ,GAAI,CAACK,GAAWJ,EAAYL,EAAI,MAAM,EAClC,MAAM,IAAII,EAAW,2EAA2E,EAEpG,IAAMM,EAAa,CACf,GAAGL,EACH,GAAGL,EAAI,MACX,EACMW,EAAaC,GAAaR,EAAY,IAAI,IAAI,CAAC,CAAC,MAAO,EAAI,CAAC,CAAC,EAAGF,GAAS,KAAMG,EAAYK,CAAU,EACvGG,EAAM,GACV,GAAIF,EAAW,IAAI,KAAK,IACpBE,EAAMR,EAAW,IACb,OAAOQ,GAAQ,WACf,MAAM,IAAIT,EAAW,yEAAyE,EAGtG,GAAM,CAAE,IAAAU,CAAI,EAAIJ,EAChB,GAAI,OAAOI,GAAQ,UAAY,CAACA,EAC5B,MAAM,IAAIV,EAAW,2DAA2D,EAEpF,IAAMW,EAAab,GAAWc,GAAmB,aAAcd,EAAQ,UAAU,EACjF,GAAIa,GAAc,CAACA,EAAW,IAAID,CAAG,EACjC,MAAM,IAAIG,GAAkB,sDAAsD,EAEtF,GAAIJ,GACA,GAAI,OAAOb,EAAI,SAAY,SACvB,MAAM,IAAII,EAAW,8BAA8B,UAGlD,OAAOJ,EAAI,SAAY,UAAY,EAAEA,EAAI,mBAAmB,YACjE,MAAM,IAAII,EAAW,wDAAwD,EAEjF,IAAIc,EAAc,GACd,OAAOjB,GAAQ,aACfA,EAAM,MAAMA,EAAII,EAAYL,CAAG,EAC/BkB,EAAc,IAElBC,GAAaL,EAAKb,EAAK,QAAQ,EAC/B,IAAMmB,EAAOC,GAAOC,EAAQ,OAAOtB,EAAI,WAAa,EAAE,EAAGsB,EAAQ,OAAO,GAAG,EAAG,OAAOtB,EAAI,SAAY,SAAWsB,EAAQ,OAAOtB,EAAI,OAAO,EAAIA,EAAI,OAAO,EACrJuB,EACJ,GAAI,CACAA,EAAYhB,GAAKP,EAAI,SAAS,CAClC,MACM,CACF,MAAM,IAAII,EAAW,0CAA0C,CACnE,CACA,IAAMoB,EAAI,MAAMC,GAAaxB,EAAKa,CAAG,EAErC,GAAI,CADa,MAAMY,GAAOZ,EAAKU,EAAGD,EAAWH,CAAI,EAEjD,MAAM,IAAIO,GAEd,IAAIC,EACJ,GAAIf,EACA,GAAI,CACAe,EAAUrB,GAAKP,EAAI,OAAO,CAC9B,MACM,CACF,MAAM,IAAII,EAAW,wCAAwC,CACjE,MAEK,OAAOJ,EAAI,SAAY,SAC5B4B,EAAUN,EAAQ,OAAOtB,EAAI,OAAO,EAGpC4B,EAAU5B,EAAI,QAElB,IAAM6B,EAAS,CAAE,QAAAD,CAAQ,EAOzB,OANI5B,EAAI,YAAc,SAClB6B,EAAO,gBAAkBxB,GAEzBL,EAAI,SAAW,SACf6B,EAAO,kBAAoB7B,EAAI,QAE/BkB,EACO,CAAE,GAAGW,EAAQ,IAAKL,CAAE,EAExBK,CACX,CAzGsBC,EAAA/B,GAAA,mBDPtB,eAAsBgC,GAAcC,EAAKC,EAAKC,EAAS,CAInD,GAHIF,aAAe,aACfA,EAAMG,GAAQ,OAAOH,CAAG,GAExB,OAAOA,GAAQ,SACf,MAAM,IAAII,EAAW,4CAA4C,EAErE,GAAM,CAAE,EAAGC,EAAiB,EAAGC,EAAS,EAAGC,EAAW,OAAAC,CAAO,EAAIR,EAAI,MAAM,GAAG,EAC9E,GAAIQ,IAAW,EACX,MAAM,IAAIJ,EAAW,qBAAqB,EAE9C,IAAMK,EAAW,MAAMC,GAAgB,CAAE,QAAAJ,EAAS,UAAWD,EAAiB,UAAAE,CAAU,EAAGN,EAAKC,CAAO,EACjGS,EAAS,CAAE,QAASF,EAAS,QAAS,gBAAiBA,EAAS,eAAgB,EACtF,OAAI,OAAOR,GAAQ,WACR,CAAE,GAAGU,EAAQ,IAAKF,EAAS,GAAI,EAEnCE,CACX,CAjBsBC,EAAAb,GAAA,iBKHtBc,IAAAC,IAAAC,ICAAC,IAAAC,IAAAC,ICAAC,IAAAC,IAAAC,IAAA,IAAOC,GAAQC,EAACC,GAAS,KAAK,MAAMA,EAAK,QAAQ,EAAI,GAAI,EAA1C,WCAfC,IAAAC,IAAAC,IAKA,IAAMC,GAAQ,oIACPC,GAAQC,EAACC,GAAQ,CACpB,IAAMC,EAAUJ,GAAM,KAAKG,CAAG,EAC9B,GAAI,CAACC,GAAYA,EAAQ,CAAC,GAAKA,EAAQ,CAAC,EACpC,MAAM,IAAI,UAAU,4BAA4B,EAEpD,IAAMC,EAAQ,WAAWD,EAAQ,CAAC,CAAC,EAC7BE,EAAOF,EAAQ,CAAC,EAAE,YAAY,EAChCG,EACJ,OAAQD,EAAM,CACV,IAAK,MACL,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,IACDC,EAAc,KAAK,MAAMF,CAAK,EAC9B,MACJ,IAAK,SACL,IAAK,UACL,IAAK,MACL,IAAK,OACL,IAAK,IACDE,EAAc,KAAK,MAAMF,EAAQ,EAAM,EACvC,MACJ,IAAK,OACL,IAAK,QACL,IAAK,KACL,IAAK,MACL,IAAK,IACDE,EAAc,KAAK,MAAMF,EAAQ,IAAI,EACrC,MACJ,IAAK,MACL,IAAK,OACL,IAAK,IACDE,EAAc,KAAK,MAAMF,EAAQ,KAAG,EACpC,MACJ,IAAK,OACL,IAAK,QACL,IAAK,IACDE,EAAc,KAAK,MAAMF,EAAQ,MAAI,EACrC,MACJ,QACIE,EAAc,KAAK,MAAMF,EAAQ,QAAI,EACrC,KACR,CACA,OAAID,EAAQ,CAAC,IAAM,KAAOA,EAAQ,CAAC,IAAM,MAC9B,CAACG,EAELA,CACX,EAhDe,WFAf,SAASC,GAAcC,EAAOC,EAAO,CACjC,GAAI,CAAC,OAAO,SAASA,CAAK,EACtB,MAAM,IAAI,UAAU,WAAWD,CAAK,QAAQ,EAEhD,OAAOC,CACX,CALSC,EAAAH,GAAA,iBAMT,IAAMI,GAAeD,EAACE,GACdA,EAAM,SAAS,GAAG,EACXA,EAAM,YAAY,EAEtB,eAAeA,EAAM,YAAY,CAAC,GAJxB,gBAMfC,GAAwBH,EAAA,CAACI,EAAYC,IACnC,OAAOD,GAAe,SACfC,EAAU,SAASD,CAAU,EAEpC,MAAM,QAAQA,CAAU,EACjBC,EAAU,KAAK,IAAI,UAAU,IAAI,KAAK,IAAI,IAAID,CAAU,CAAC,CAAC,EAE9D,GAPmB,yBASvB,SAASE,GAAkBC,EAAiBC,EAAgBC,EAAU,CAAC,EAAG,CAC7E,IAAIC,EACJ,GAAI,CACAA,EAAU,KAAK,MAAMC,GAAQ,OAAOH,CAAc,CAAC,CACvD,MACM,CACN,CACA,GAAI,CAACI,GAASF,CAAO,EACjB,MAAM,IAAIG,GAAW,gDAAgD,EAEzE,GAAM,CAAE,IAAAC,CAAI,EAAIL,EAChB,GAAIK,IACC,OAAOP,EAAgB,KAAQ,UAC5BN,GAAaM,EAAgB,GAAG,IAAMN,GAAaa,CAAG,GAC1D,MAAM,IAAIC,EAAyB,oCAAqCL,EAAS,MAAO,cAAc,EAE1G,GAAM,CAAE,eAAAM,EAAiB,CAAC,EAAG,OAAAC,EAAQ,QAAAC,EAAS,SAAAC,EAAU,YAAAC,CAAY,EAAIX,EAClEY,EAAgB,CAAC,GAAGL,CAAc,EACpCI,IAAgB,QAChBC,EAAc,KAAK,KAAK,EACxBF,IAAa,QACbE,EAAc,KAAK,KAAK,EACxBH,IAAY,QACZG,EAAc,KAAK,KAAK,EACxBJ,IAAW,QACXI,EAAc,KAAK,KAAK,EAC5B,QAAWC,KAAS,IAAI,IAAID,EAAc,QAAQ,CAAC,EAC/C,GAAI,EAAEC,KAASZ,GACX,MAAM,IAAIK,EAAyB,qBAAqBO,CAAK,UAAWZ,EAASY,EAAO,SAAS,EAGzG,GAAIL,GACA,EAAE,MAAM,QAAQA,CAAM,EAAIA,EAAS,CAACA,CAAM,GAAG,SAASP,EAAQ,GAAG,EACjE,MAAM,IAAIK,EAAyB,+BAAgCL,EAAS,MAAO,cAAc,EAErG,GAAIQ,GAAWR,EAAQ,MAAQQ,EAC3B,MAAM,IAAIH,EAAyB,+BAAgCL,EAAS,MAAO,cAAc,EAErG,GAAIS,GACA,CAAChB,GAAsBO,EAAQ,IAAK,OAAOS,GAAa,SAAW,CAACA,CAAQ,EAAIA,CAAQ,EACxF,MAAM,IAAIJ,EAAyB,+BAAgCL,EAAS,MAAO,cAAc,EAErG,IAAIa,EACJ,OAAQ,OAAOd,EAAQ,eAAgB,CACnC,IAAK,SACDc,EAAYC,GAAKf,EAAQ,cAAc,EACvC,MACJ,IAAK,SACDc,EAAYd,EAAQ,eACpB,MACJ,IAAK,YACDc,EAAY,EACZ,MACJ,QACI,MAAM,IAAI,UAAU,oCAAoC,CAChE,CACA,GAAM,CAAE,YAAAE,CAAY,EAAIhB,EAClBiB,EAAMC,GAAMF,GAAe,IAAI,IAAM,EAC3C,IAAKf,EAAQ,MAAQ,QAAaU,IAAgB,OAAOV,EAAQ,KAAQ,SACrE,MAAM,IAAIK,EAAyB,+BAAgCL,EAAS,MAAO,SAAS,EAEhG,GAAIA,EAAQ,MAAQ,OAAW,CAC3B,GAAI,OAAOA,EAAQ,KAAQ,SACvB,MAAM,IAAIK,EAAyB,+BAAgCL,EAAS,MAAO,SAAS,EAEhG,GAAIA,EAAQ,IAAMgB,EAAMH,EACpB,MAAM,IAAIR,EAAyB,qCAAsCL,EAAS,MAAO,cAAc,CAE/G,CACA,GAAIA,EAAQ,MAAQ,OAAW,CAC3B,GAAI,OAAOA,EAAQ,KAAQ,SACvB,MAAM,IAAIK,EAAyB,+BAAgCL,EAAS,MAAO,SAAS,EAEhG,GAAIA,EAAQ,KAAOgB,EAAMH,EACrB,MAAM,IAAIK,GAAW,qCAAsClB,EAAS,MAAO,cAAc,CAEjG,CACA,GAAIU,EAAa,CACb,IAAMS,EAAMH,EAAMhB,EAAQ,IACpBoB,EAAM,OAAOV,GAAgB,SAAWA,EAAcI,GAAKJ,CAAW,EAC5E,GAAIS,EAAMN,EAAYO,EAClB,MAAM,IAAIF,GAAW,2DAA4DlB,EAAS,MAAO,cAAc,EAEnH,GAAImB,EAAM,EAAIN,EACV,MAAM,IAAIR,EAAyB,gEAAiEL,EAAS,MAAO,cAAc,CAE1I,CACA,OAAOA,CACX,CAxFgBV,EAAAM,GAAA,qBAyFT,IAAMyB,GAAN,KAAuB,CApH9B,MAoH8B,CAAA/B,EAAA,yBAC1BgC,GACA,YAAYtB,EAAS,CACjB,GAAI,CAACE,GAASF,CAAO,EACjB,MAAM,IAAI,UAAU,kCAAkC,EAE1D,KAAKsB,GAAW,gBAAgBtB,CAAO,CAC3C,CACA,MAAO,CACH,OAAOuB,EAAQ,OAAO,KAAK,UAAU,KAAKD,EAAQ,CAAC,CACvD,CACA,IAAI,KAAM,CACN,OAAO,KAAKA,GAAS,GACzB,CACA,IAAI,IAAI9B,EAAO,CACX,KAAK8B,GAAS,IAAM9B,CACxB,CACA,IAAI,KAAM,CACN,OAAO,KAAK8B,GAAS,GACzB,CACA,IAAI,IAAI9B,EAAO,CACX,KAAK8B,GAAS,IAAM9B,CACxB,CACA,IAAI,KAAM,CACN,OAAO,KAAK8B,GAAS,GACzB,CACA,IAAI,IAAI9B,EAAO,CACX,KAAK8B,GAAS,IAAM9B,CACxB,CACA,IAAI,IAAIA,EAAO,CACX,KAAK8B,GAAS,IAAM9B,CACxB,CACA,IAAI,IAAIA,EAAO,CACP,OAAOA,GAAU,SACjB,KAAK8B,GAAS,IAAMnC,GAAc,eAAgBK,CAAK,EAElDA,aAAiB,KACtB,KAAK8B,GAAS,IAAMnC,GAAc,eAAgB8B,GAAMzB,CAAK,CAAC,EAG9D,KAAK8B,GAAS,IAAML,GAAM,IAAI,IAAM,EAAIH,GAAKtB,CAAK,CAE1D,CACA,IAAI,IAAIA,EAAO,CACP,OAAOA,GAAU,SACjB,KAAK8B,GAAS,IAAMnC,GAAc,oBAAqBK,CAAK,EAEvDA,aAAiB,KACtB,KAAK8B,GAAS,IAAMnC,GAAc,oBAAqB8B,GAAMzB,CAAK,CAAC,EAGnE,KAAK8B,GAAS,IAAML,GAAM,IAAI,IAAM,EAAIH,GAAKtB,CAAK,CAE1D,CACA,IAAI,IAAIA,EAAO,CACP,OAAOA,EAAU,IACjB,KAAK8B,GAAS,IAAML,GAAM,IAAI,IAAM,EAE/BzB,aAAiB,KACtB,KAAK8B,GAAS,IAAMnC,GAAc,cAAe8B,GAAMzB,CAAK,CAAC,EAExD,OAAOA,GAAU,SACtB,KAAK8B,GAAS,IAAMnC,GAAc,cAAe8B,GAAM,IAAI,IAAM,EAAIH,GAAKtB,CAAK,CAAC,EAGhF,KAAK8B,GAAS,IAAMnC,GAAc,cAAeK,CAAK,CAE9D,CACJ,EDrLA,eAAsBgC,GAAUC,EAAKC,EAAKC,EAAS,CAC/C,IAAMC,EAAW,MAAMC,GAAcJ,EAAKC,EAAKC,CAAO,EACtD,GAAIC,EAAS,gBAAgB,MAAM,SAAS,KAAK,GAAKA,EAAS,gBAAgB,MAAQ,GACnF,MAAM,IAAIE,GAAW,qCAAqC,EAG9D,IAAMC,EAAS,CAAE,QADDC,GAAkBJ,EAAS,gBAAiBA,EAAS,QAASD,CAAO,EAC3D,gBAAiBC,EAAS,eAAgB,EACpE,OAAI,OAAOF,GAAQ,WACR,CAAE,GAAGK,EAAQ,IAAKH,EAAS,GAAI,EAEnCG,CACX,CAXsBE,EAAAT,GAAA,aIHtBU,IAAAC,IAAAC,ICAAC,IAAAC,IAAAC,ICAAC,IAAAC,IAAAC,IAGA,IAAOC,GAAQC,EAAA,MAAOC,EAAKC,EAAKC,IAAS,CACrC,IAAMC,EAAY,MAAMC,GAAWJ,EAAKC,EAAK,MAAM,EACnDI,GAAeL,EAAKG,CAAS,EAC7B,IAAMG,EAAY,MAAM,OAAO,OAAO,KAAKC,GAAgBP,EAAKG,EAAU,SAAS,EAAGA,EAAWD,CAAI,EACrG,OAAO,IAAI,WAAWI,CAAS,CACnC,EALe,WDKR,IAAME,GAAN,KAAoB,CAR3B,MAQ2B,CAAAC,EAAA,sBACvBC,GACAC,GACAC,GACA,YAAYC,EAAS,CACjB,GAAI,EAAEA,aAAmB,YACrB,MAAM,IAAI,UAAU,2CAA2C,EAEnE,KAAKH,GAAWG,CACpB,CACA,mBAAmBC,EAAiB,CAChC,GAAI,KAAKH,GACL,MAAM,IAAI,UAAU,4CAA4C,EAEpE,YAAKA,GAAmBG,EACjB,IACX,CACA,qBAAqBC,EAAmB,CACpC,GAAI,KAAKH,GACL,MAAM,IAAI,UAAU,8CAA8C,EAEtE,YAAKA,GAAqBG,EACnB,IACX,CACA,MAAM,KAAKC,EAAKC,EAAS,CACrB,GAAI,CAAC,KAAKN,IAAoB,CAAC,KAAKC,GAChC,MAAM,IAAIM,EAAW,iFAAiF,EAE1G,GAAI,CAACC,GAAW,KAAKR,GAAkB,KAAKC,EAAkB,EAC1D,MAAM,IAAIM,EAAW,2EAA2E,EAEpG,IAAME,EAAa,CACf,GAAG,KAAKT,GACR,GAAG,KAAKC,EACZ,EACMS,EAAaC,GAAaJ,EAAY,IAAI,IAAI,CAAC,CAAC,MAAO,EAAI,CAAC,CAAC,EAAGD,GAAS,KAAM,KAAKN,GAAkBS,CAAU,EAClHG,EAAM,GACV,GAAIF,EAAW,IAAI,KAAK,IACpBE,EAAM,KAAKZ,GAAiB,IACxB,OAAOY,GAAQ,WACf,MAAM,IAAIL,EAAW,yEAAyE,EAGtG,GAAM,CAAE,IAAAM,CAAI,EAAIJ,EAChB,GAAI,OAAOI,GAAQ,UAAY,CAACA,EAC5B,MAAM,IAAIN,EAAW,2DAA2D,EAEpFO,GAAaD,EAAKR,EAAK,MAAM,EAC7B,IAAIH,EAAU,KAAKH,GACfa,IACAV,EAAUa,EAAQ,OAAOC,GAAKd,CAAO,CAAC,GAE1C,IAAIC,EACA,KAAKH,GACLG,EAAkBY,EAAQ,OAAOC,GAAK,KAAK,UAAU,KAAKhB,EAAgB,CAAC,CAAC,EAG5EG,EAAkBY,EAAQ,OAAO,EAAE,EAEvC,IAAME,EAAOC,GAAOf,EAAiBY,EAAQ,OAAO,GAAG,EAAGb,CAAO,EAC3DiB,EAAI,MAAMC,GAAaf,EAAKQ,CAAG,EAC/BQ,EAAY,MAAMC,GAAKT,EAAKM,EAAGF,CAAI,EACnCM,EAAM,CACR,UAAWP,GAAKK,CAAS,EACzB,QAAS,EACb,EACA,OAAIT,IACAW,EAAI,QAAUC,GAAQ,OAAOtB,CAAO,GAEpC,KAAKD,KACLsB,EAAI,OAAS,KAAKtB,IAElB,KAAKD,KACLuB,EAAI,UAAYC,GAAQ,OAAOrB,CAAe,GAE3CoB,CACX,CACJ,EDpFO,IAAME,GAAN,KAAkB,CADzB,MACyB,CAAAC,EAAA,oBACrBC,GACA,YAAYC,EAAS,CACjB,KAAKD,GAAa,IAAIE,GAAcD,CAAO,CAC/C,CACA,mBAAmBE,EAAiB,CAChC,YAAKH,GAAW,mBAAmBG,CAAe,EAC3C,IACX,CACA,MAAM,KAAKC,EAAKC,EAAS,CACrB,IAAMC,EAAM,MAAM,KAAKN,GAAW,KAAKI,EAAKC,CAAO,EACnD,GAAIC,EAAI,UAAY,OAChB,MAAM,IAAI,UAAU,2DAA2D,EAEnF,MAAO,GAAGA,EAAI,SAAS,IAAIA,EAAI,OAAO,IAAIA,EAAI,SAAS,EAC3D,CACJ,EGjBAC,IAAAC,IAAAC,IAGO,IAAMC,GAAN,KAAc,CAHrB,MAGqB,CAAAC,EAAA,gBACjBC,GACAC,GACA,YAAYC,EAAU,CAAC,EAAG,CACtB,KAAKD,GAAO,IAAIE,GAAiBD,CAAO,CAC5C,CACA,UAAUE,EAAQ,CACd,YAAKH,GAAK,IAAMG,EACT,IACX,CACA,WAAWC,EAAS,CAChB,YAAKJ,GAAK,IAAMI,EACT,IACX,CACA,YAAYC,EAAU,CAClB,YAAKL,GAAK,IAAMK,EACT,IACX,CACA,OAAOC,EAAO,CACV,YAAKN,GAAK,IAAMM,EACT,IACX,CACA,aAAaC,EAAO,CAChB,YAAKP,GAAK,IAAMO,EACT,IACX,CACA,kBAAkBA,EAAO,CACrB,YAAKP,GAAK,IAAMO,EACT,IACX,CACA,YAAYA,EAAO,CACf,YAAKP,GAAK,IAAMO,EACT,IACX,CACA,mBAAmBC,EAAiB,CAChC,YAAKT,GAAmBS,EACjB,IACX,CACA,MAAM,KAAKC,EAAKC,EAAS,CACrB,IAAMC,EAAM,IAAIC,GAAY,KAAKZ,GAAK,KAAK,CAAC,EAE5C,GADAW,EAAI,mBAAmB,KAAKZ,EAAgB,EACxC,MAAM,QAAQ,KAAKA,IAAkB,IAAI,GACzC,KAAKA,GAAiB,KAAK,SAAS,KAAK,GACzC,KAAKA,GAAiB,MAAQ,GAC9B,MAAM,IAAIc,GAAW,qCAAqC,EAE9D,OAAOF,EAAI,KAAKF,EAAKC,CAAO,CAChC,CACJ,ECnDAI,IAAAC,IAAAC,IAAAC,KCAAC,IAAAC,IAAAC,IAAA,IAAMC,GAAc,CAClB,SACA,wDACA,gCACF,EAAE,KAAK,GAAG,EAEGC,GAAkB,CAC7B,4BAA6B,+CAC7B,yBAA0B,UAC1B,kBAAmB,OACnB,kBAAmB,cACnB,6BAA8B,cAC9B,+BAAgC,eAEhC,0BACE,qHAAqHD,EAAW,0BACpI,EAEO,SAASE,GAAaC,EAAqB,CAAC,EAAiB,CAClE,IAAMC,EAAI,IAAI,QAAQD,EAAK,SAAW,CAAC,CAAC,EACxC,OAAW,CAACE,EAAGC,CAAC,IAAK,OAAO,QAAQL,EAAe,EAAGG,EAAE,IAAIC,EAAGC,CAAC,EAChE,MAAO,CAAE,GAAGH,EAAM,QAASC,CAAE,CAC/B,CAJgBG,EAAAL,GAAA,gBDfT,IAAMM,GAAgBC,EAAE,OAAO,CACpC,OAAQA,EAAE,OAAO,EAAE,IAAI,CAAC,EACxB,SAAUA,EAAE,OAAO,EAAE,IAAI,CAAC,EAC1B,SAAUA,EAAE,MAAMA,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAC1C,KAAMA,EAAE,OAAOA,EAAE,IAAI,CAAC,CACxB,CAAC,EAEM,SAASC,EAAKC,EAAeC,EAAS,IAAKC,EAAuB,CAAC,EAAG,CAC3E,IAAMC,EAAe,IAAI,QAAQ,CAAE,eAAgB,kBAAmB,CAAC,EACzD,IAAI,QAAQD,CAAO,EAC3B,QAAQ,CAACE,EAAOC,IAAQF,EAAa,IAAIE,EAAKD,CAAK,CAAC,EAE1D,IAAME,EAAYH,EAAa,IAAI,cAAc,GAAK,OAChDI,EAAUJ,EAAa,IAAI,WAAW,GAAK,OAE7CK,EAAUR,EACd,GAAIQ,GAAW,OAAOA,GAAY,SAAU,CAC1C,IAAMC,EAAWD,EACbE,EAAU,GACRC,EAA+B,CAAE,GAAGF,CAAS,EAEnD,GAAIH,GAAaK,EAAQ,UAAY,GAAO,CAC1C,IAAMC,EAAMD,EAAQ,MACdE,EACJD,GAAO,OAAOA,GAAQ,UAAY,CAAC,MAAM,QAAQA,CAAG,EAChD,CAAE,GAAGA,CAAI,EACT,CAAE,KAAM,WAAY,QAAS,OAAOA,GAAQ,SAAWA,EAAM,kBAAmB,EACjFC,EAAgB,YACnBA,EAAgB,UAAYP,GAE9BK,EAAQ,MAAQE,EAChBH,EAAU,EACZ,CAEA,GAAIH,EAAS,CACX,IAAMO,EAAOH,EAAQ,KACfI,EAAiBD,GAAQ,OAAOA,GAAS,UAAY,CAAC,MAAM,QAAQA,CAAI,EAAI,CAAE,GAAGA,CAAK,EAAI,CAAC,EAC5FC,EAAe,QAITJ,EAAQ,OAASI,IAC1BJ,EAAQ,KAAOI,IAJfA,EAAe,QAAUR,EACzBI,EAAQ,KAAOI,EACfL,EAAU,GAId,CAEIA,IACFF,EAAUG,EAEd,CAEA,IAAMK,EAAW,OAAOR,GAAY,SAAWA,EAAU,KAAK,UAAUA,CAAO,EAC/E,OAAO,IAAI,SAASQ,EAAUC,GAAa,CAAE,OAAAhB,EAAQ,QAASE,CAAa,CAAC,CAAC,CAE/E,CA/CgBe,EAAAnB,EAAA,QA2ET,SAASoB,GAAmBC,EAAc,CAC/C,OAAOA,EAAI,QAAQ,IAAI,iBAAiB,GAAK,EAC/C,CAFgBC,EAAAF,GAAA,sBAKT,SAASG,GAAOC,EAAWC,EAAM,cAAe,CACrD,GAAI,CAACD,EAAM,MAAME,GAAOD,CAAG,CAC7B,CAFgBH,EAAAC,GAAA,UAIT,SAASG,GAAOC,EAAiB,CACtC,OAAO,OAAO,OAAO,IAAI,MAAMA,CAAO,EAAG,CAAE,OAAQ,GAAI,CAAC,CAC1D,CAFgBL,EAAAI,GAAA,UAIT,SAASE,IAAQ,CACtB,OAAO,KAAK,IAAI,CAClB,CAFgBN,EAAAM,GAAA,SAIT,SAASC,GAAMC,EAAoB,CACxC,OAAO,KAAK,IAAI,EAAIA,EAAa,GACnC,CAFgBR,EAAAO,GAAA,SAIT,SAASE,IAAK,CACnB,OAAO,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,MAAM,CAAC,EAAI,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,MAAM,CAAC,CACjF,CAFgBT,EAAAS,GAAA,MAKT,SAASC,GAAOC,EAAO,GAAI,CAChC,IAAMC,EAAW,iEACbH,EAAK,GACHI,EAAQ,IAAI,WAAWF,CAAI,EACjC,OAAO,gBAAgBE,CAAK,EAC5B,QAASC,EAAI,EAAGA,EAAIH,EAAMG,IACxBL,GAAMG,EAASC,EAAMC,CAAC,EAAIF,EAAS,MAAM,EAE3C,OAAOH,CACT,CATgBT,EAAAU,GAAA,UAYhB,eAAsBK,GAAaC,EAAiBC,EAAa,CAC/D,OAAQ,MAAMD,EAAG,IAAIC,EAAK,MAAM,CAClC,CAFsBjB,EAAAe,GAAA,aAItB,eAAsBG,GAAUF,EAAiBC,EAAaE,EAAYC,EAA8B,CACtG,OAAOJ,EAAG,IAAIC,EAAK,KAAK,UAAUE,CAAK,EAAGC,CAAI,CAChD,CAFsBpB,EAAAkB,GAAA,aAItB,eAAsBG,GAAcL,EAAiBM,EAAgB,CACnE,IAAMC,EAAO,MAAMP,EAAG,KAAK,CAAE,OAAAM,EAAQ,MAAO,GAAK,CAAC,EAElD,OADa,MAAM,QAAQ,IAAIC,EAAK,KAAK,IAAKC,GAAMR,EAAG,IAAIQ,EAAE,KAAM,MAAM,CAAe,CAAC,GAC7E,OAAO,OAAO,CAC5B,CAJsBxB,EAAAqB,GAAA,cEnItBI,IAAAC,IAAAC,ICAAC,IAAAC,IAAAC,IAqBO,SAASC,GAAgBC,EAAsB,CACpD,IAAMC,EAAQ,MAAM,QAAQD,EAAE,KAAK,EAC/BA,EAAE,MACD,OAAOA,EAAE,MAAS,SAAW,CAACA,EAAE,IAAI,EAAI,CAAC,EAExCE,EAAWF,EAAE,UAAaA,EAAU,WAAaA,EAAE,OAEzD,MAAO,CACL,IAAKA,EAAE,KAAO,GACd,IAAKA,EAAE,IACP,IAAKA,EAAE,IACP,MAAAC,EACA,SAAAC,EACA,IAAKF,EAAE,IACP,IAAKA,EAAE,GACT,CACF,CAhBgBG,EAAAJ,GAAA,mBAmBhB,SAASK,GAAaC,EAAsB,CAC1C,IAAMC,EAAMD,EAAI,YAAc,GAE9B,GAAI,CACF,OAAO,WAAW,KAAK,KAAKC,CAAG,EAAGN,GAAKA,EAAE,WAAW,CAAC,CAAC,CACxD,MAAQ,CACN,OAAO,IAAI,YAAY,EAAE,OAAOM,CAAG,CACrC,CACF,CARSH,EAAAC,GAAA,gBAWT,eAAsBG,GAAmBC,EAAeH,EAA2B,CACjF,IAAMI,EAASL,GAAaC,CAAG,EACzB,CAAE,QAAAK,CAAQ,EAAI,MAAMC,GAAUH,EAAOC,EAAQ,CACjD,OAAQJ,EAAI,WACZ,SAAUA,EAAI,aACd,eAAgB,GAClB,CAAC,EACD,OAAON,GAAgBW,CAAoB,CAC7C,CARsBP,EAAAI,GAAA,sBAWf,SAASK,GAAmBC,EAAgB,CACjD,GAAI,CAACA,EAAO,MAAM,SAAS,OAAO,EAChC,MAAM,IAAI,MAAM,qBAAqB,CAEzC,CAJgBV,EAAAS,GAAA,sBAWhB,eAAsBE,GAAoBC,EAAUC,EAAiD,CACnG,IAAMC,EAASC,GAAaH,CAAG,EACzBI,EAAM,KAAK,MAAM,KAAK,IAAI,EAAI,GAAI,EAClCC,EAAMD,EAAMH,EAAK,WAAa,GAapC,OAXc,MAAM,IAAIK,GAAQ,CAC9B,MAAO,CAAC,cAAc,EACtB,UAAWL,EAAK,SAClB,CAAC,EACE,mBAAmB,CAAE,IAAK,QAAS,IAAK,KAAM,CAAC,EAC/C,UAAUD,EAAI,UAAU,EACxB,YAAYA,EAAI,YAAY,EAC5B,YAAYI,CAAG,EACf,kBAAkBC,CAAG,EACrB,KAAKH,CAAM,CAGhB,CAjBsBK,EAAAR,GAAA,uBAoBtB,eAAsBS,GAAmBR,EAAUS,EAAa,GAAqB,CACnF,IAAMP,EAASC,GAAaH,CAAG,EACzBI,EAAM,KAAK,MAAM,KAAK,IAAI,EAAI,GAAI,EAClCC,EAAMD,EAAMK,EAalB,OAXc,MAAM,IAAIH,GAAQ,CAC9B,MAAO,CAAC,SAAS,EACjB,KAAM,SACR,CAAC,EACE,mBAAmB,CAAE,IAAK,QAAS,IAAK,KAAM,CAAC,EAC/C,UAAUN,EAAI,YAAc,YAAY,EACxC,YAAY,UAAU,EACtB,YAAYI,CAAG,EACf,kBAAkBC,CAAG,EACrB,KAAKH,CAAM,CAGhB,CAjBsBK,EAAAC,GAAA,sBAoBtB,eAAsBE,GAAiBV,EAAUW,EAAiC,CAChF,GAAI,CACF,IAAMT,EAASC,GAAaH,CAAG,EACzB,CAAE,QAAAY,CAAQ,EAAI,MAAMC,GAAUF,EAAOT,EAAQ,CACjD,OAAQF,EAAI,YAAc,aAC1B,SAAU,WACV,eAAgB,EAClB,CAAC,EAGD,OADec,GAAgBF,CAAoB,EACrC,MAAM,SAAS,SAAS,CACxC,OAASG,EAAO,CACd,eAAQ,MAAM,qCAAsCA,CAAK,EAClD,EACT,CACF,CAfsBR,EAAAG,GAAA,oBD5GtB,SAASM,GAAUC,EAAsB,CACvC,IAAMC,EAAMD,EAAI,QAAQ,IAAI,eAAe,GAAK,GAC1CE,EAAQD,EAAI,WAAW,SAAS,EAAIA,EAAI,MAAM,CAAC,EAAI,GACzD,GAAI,CAACC,EAAO,MAAM,IAAI,SAAS,eAAgB,CAAE,OAAQ,GAAI,CAAC,EAC9D,OAAOA,CACT,CALSC,EAAAJ,GAAA,aAUT,SAASK,IAAsB,CAC7B,OAAO,IAAI,SAAS,KAAK,UAAU,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,CAAC,EAAG,CACpF,OAAQ,IACR,QAAS,CAAE,eAAgB,kBAAmB,CAChD,CAAC,CACH,CALSD,EAAAC,GAAA,aAUT,eAAsBC,EAAWL,EAAcM,EAA2B,CACxE,IAAMJ,EAAQH,GAAUC,CAAG,EAC3B,GAAI,CACF,OAAO,MAAMO,GAAmBL,EAAOI,CAAG,CAC5C,OAASE,EAAQ,CACf,cAAQ,KAAK,kBAAmB,CAC9B,KAAM,IAAI,IAAIR,EAAI,GAAG,EAAE,SACvB,OAAQQ,GAAG,SAAW,OAAOA,CAAC,CAChC,CAAC,EACK,IAAI,SAAS,eAAgB,CAAE,OAAQ,GAAI,CAAC,CACpD,CACF,CAXsBL,EAAAE,EAAA,cAgBtB,eAAsBI,GAAaT,EAAcM,EAA2B,CAC1E,IAAMJ,EAAQH,GAAUC,CAAG,EACvBU,EACJ,GAAI,CACF,OAAAA,EAAS,MAAMH,GAAmBL,EAAOI,CAAG,EAE5CK,GAAmBD,CAAM,EAGlBA,CACT,OAASF,EAAQ,CAEf,cAAQ,KAAK,YAAa,CACxB,KAAM,IAAI,IAAIR,EAAI,GAAG,EAAE,SACvB,OAAQQ,GAAG,SAAW,OAAOA,CAAC,EAC9B,WAAYR,EAAI,QAAQ,IAAI,eAAe,GAAK,IAAI,MAAM,EAAG,EAAE,EAC/D,OAAAU,CACF,CAAC,EACKN,GAAU,CAClB,CACF,CApBsBD,EAAAM,GAAA,gBAyBf,SAASG,EAAQC,EAAoDC,EAA+B,CACzG,MAAI,UAAWD,GAAQ,MAAM,QAAQA,EAAK,KAAK,EACtCA,EAAK,MAAM,SAASC,CAAY,EAErC,SAAUD,GAAQA,EAAK,OAASC,CAEtC,CANgBX,EAAAS,EAAA,WElEhBG,IAAAC,IAAAC,IAAA,eAAsBC,GAAiBC,EAAUC,EAAkBC,EAAeC,EAAsB,CACtG,IAAMC,EAAMD,GAAe,MAAME,GAAQJ,EAAUC,CAAI,EACjDI,EAAW,MAAMN,EAAI,SAAS,IAAII,CAAG,EAC3C,OAAIE,EAAiB,CAAE,IAAK,GAAe,IAAAF,EAAK,SAAU,KAAK,MAAME,CAAQ,CAAE,EACxE,CACL,IAAK,GACL,IAAAF,EACA,MAAOG,EAAA,MAAOC,GAAkB,CAC9B,MAAMR,EAAI,SAAS,IAAII,EAAK,KAAK,UAAUI,CAAI,EAAG,CAAE,cAAe,KAAM,CAAC,CAC5E,EAFO,QAGT,CACF,CAXsBD,EAAAR,GAAA,oBAatB,eAAsBU,GAAmBT,EAAUI,EAAaI,EAAe,CAC7E,MAAMR,EAAI,SAAS,IAAII,EAAK,KAAK,UAAUI,CAAI,EAAG,CAAE,cAAe,KAAM,CAAC,CAC5E,CAFsBD,EAAAE,GAAA,sBAItB,eAAeJ,GAAQJ,EAAkBC,EAAe,CACtD,IAAMQ,EAAMT,EAAW,IAAM,KAAK,UAAUC,CAAI,EAC1CS,EAAS,MAAM,OAAO,OAAO,OAAO,UAAW,IAAI,YAAY,EAAE,OAAOD,CAAG,CAAC,EAClF,MAAO,QAAUT,EAAW,IAAM,CAAC,GAAG,IAAI,WAAWU,CAAM,CAAC,EAAE,IAAIC,GAAKA,EAAE,SAAS,EAAE,EAAE,SAAS,EAAG,GAAG,CAAC,EAAE,KAAK,EAAE,CACjH,CAJeL,EAAAF,GAAA,WCjBfQ,IAAAC,IAAAC,IAEA,IAAMC,GAAMC,EAACC,GAAqB,UAAUA,CAAM,GAAtC,OAEZ,eAAsBC,GAAgBC,EAAUF,EAAgD,CAC9F,IAAMG,EAAM,MAAMD,EAAI,SAAS,IAAIJ,GAAIE,CAAM,CAAC,EAC9C,GAAI,CAACG,EAAK,OAAO,KACjB,GAAI,CAAE,OAAO,KAAK,MAAMA,CAAG,CAAmB,MAAQ,CAAE,OAAO,IAAM,CACvE,CAJsBJ,EAAAE,GAAA,mBAMtB,eAAsBG,GAAgBF,EAAUG,EAAkC,CAChFA,EAAI,WAAa,KAAK,IAAI,EAC1B,MAAMH,EAAI,SAAS,IAAIJ,GAAIO,EAAI,EAAE,EAAG,KAAK,UAAUA,CAAG,CAAC,CACzD,CAHsBN,EAAAK,GAAA,mBAKtB,eAAsBE,GAAaJ,EAAUF,EAAyC,CACpF,IAAMO,EAAW,MAAMN,GAAgBC,EAAKF,CAAM,EAClD,GAAIO,EAAU,OAAOA,EACrB,IAAMC,EAAsB,CAC1B,GAAIR,EACJ,MAAO,CAAE,SAAU,GAAO,UAAW,EAAK,EAC1C,MAAO,CAAC,EACR,eAAgB,KAChB,WAAY,KAAK,IAAI,EACrB,WAAY,KAAK,IAAI,CACvB,EACA,aAAMI,GAAgBF,EAAKM,CAAK,EACzBA,CACT,CAbsBT,EAAAO,GAAA,gBAetB,eAAsBG,GAAYP,EAAUF,EAAkBU,EAAoD,CAChH,IAAML,EAAM,MAAMC,GAAaJ,EAAKF,CAAM,EAC1C,OAAAK,EAAI,MAAQ,CAAE,GAAGA,EAAI,MAAO,GAAGK,CAAM,EACrC,MAAMN,GAAgBF,EAAKG,CAAG,EACvBA,CACT,CALsBN,EAAAU,GAAA,eAOtB,eAAsBE,GAAeT,EAAUF,EAAkBY,EAAoC,CACnG,IAAMP,EAAM,MAAMC,GAAaJ,EAAKF,CAAM,EAC1C,OAAAK,EAAI,eAAiBO,EACrB,MAAMR,GAAgBF,EAAKG,CAAG,EACvBA,CACT,CALsBN,EAAAY,GAAA,kBActB,eAAsBE,GAAeC,EAAUC,EAAkBC,EAAoD,CACnH,IAAMC,EAAM,MAAMC,GAAaJ,EAAKC,CAAM,EAC1C,OAAAE,EAAI,MAAQ,CAAE,GAAGA,EAAI,MAAO,GAAGD,CAAM,EACrC,MAAMG,GAAgBL,EAAKG,CAAG,EACvBA,CACT,CALsBG,EAAAP,GAAA,kBActB,eAAsBQ,GAAkBC,EAAUC,EAAkBC,EAAkBC,EAAoC,CACxH,IAAMC,EAAM,MAAMC,GAAaL,EAAKC,CAAM,EAC1C,OAAKG,EAAI,QAAOA,EAAI,MAAQ,CAAC,GACxBA,EAAI,MAAM,OAAMA,EAAI,MAAM,KAAO,CAAC,GACvCA,EAAI,MAAM,KAAKF,CAAO,EAAIC,EAC1B,MAAMG,GAAgBN,EAAKI,CAAG,EACvBA,CACT,CAPsBG,EAAAR,GAAA,qBAStB,eAAsBS,GAAoBR,EAAUC,EAAkBQ,EAAmBC,EAA8C,CACrI,IAAMN,EAAM,MAAMC,GAAaL,EAAKC,CAAM,EAC1C,OAAKG,EAAI,QAAOA,EAAI,MAAQ,CAAC,GACxBA,EAAI,MAAM,KAAIA,EAAI,MAAM,GAAK,CAAC,GACnCA,EAAI,MAAM,GAAG,UAAYK,EACzBL,EAAI,MAAM,GAAG,cAAgBM,EAC7B,MAAMJ,GAAgBN,EAAKI,CAAG,EACvBA,CACT,CARsBG,EAAAC,GAAA,uBAWf,SAASG,GAAqBC,EAAcC,EAA6B,CAC9E,GAAI,CACF,GAAI,CAACD,EAAM,MAAO,GAClB,IAAME,GAAOD,GAAc,IAAI,KAAK,EACpC,GAAI,CAACC,EAAK,MAAO,GAEjB,IAAMC,EAAQD,EACX,MAAM,GAAG,EACT,IAAIE,GAAKA,EAAE,KAAK,EAAE,YAAY,CAAC,EAC/B,OAAO,OAAO,EAEXC,EAAIL,EAAK,YAAY,EAS3B,GANIG,EAAM,SAASE,CAAC,GAGhBF,EAAM,SAAS,YAAY,GAAKE,EAAE,SAAS,WAAW,GAGtDF,EAAM,SAAS,UAAU,IAAME,IAAM,YAAcA,EAAE,SAAS,WAAW,GAAI,MAAO,GAGxF,QAAWC,KAAQH,EACjB,GAAIG,EAAK,WAAW,GAAG,GAErB,GAAID,EAAE,SAASC,CAAI,EAAG,MAAO,WACpBA,EAAK,WAAW,IAAI,EAAG,CAEhC,IAAMC,EAAMD,EAAK,MAAM,CAAC,EACxB,GAAID,EAAE,SAASE,CAAG,EAAG,MAAO,EAC9B,CAGF,MAAO,EACT,MAAQ,CACN,MAAO,EACT,CACF,CAtCgBZ,EAAAI,GAAA,wBCrFhBS,IAAAC,IAAAC,ICAAC,IAAAC,IAAAC,IAAA,eAAsBC,GAAeC,EAAUC,EAAaC,EAAkBC,EAA+B,CAC3G,IAAMC,EAAMH,EAAO,gBAAkBD,EAAI,kBACzC,GAAI,CAACI,EAAK,MAAM,IAAI,MAAM,6BAA6B,EAEvD,IAAMC,EAAM,MAAM,MAAMD,EAAK,CAC3B,OAAQ,OACR,QAAS,CAAE,eAAgB,kBAAmB,EAC9C,KAAM,KAAK,UAAU,CAAE,SAAAF,EAAU,KAAAC,EAAM,OAAQF,EAAO,EAAG,CAAC,CAC5D,CAAC,EAED,GAAI,CAACI,EAAI,GAAI,MAAM,IAAI,MAAM,eAAeA,EAAI,MAAM,EAAE,EACxD,GAAI,CAAE,OAAO,MAAMA,EAAI,KAAK,CAAG,MAAQ,CAAE,MAAO,CAAE,GAAI,EAAK,CAAG,CAChE,CAZsBC,EAAAP,GAAA,kBCAtBQ,IAAAC,IAAAC,IAEA,eAAsBC,GAAeC,EAAUC,EAAaC,EAAkBC,EAA8B,CAC1G,IAAMC,EAAQ,MAAMC,GAAsBL,EAAKC,EAAO,EAAE,EACxD,GAAI,CAACG,EAAO,MAAM,IAAI,MAAM,mCAAmC,EAE/D,IAAME,EAAc,MAAMC,GAAqBH,CAAK,EAC9CI,EAAW,OAAQL,EAAK,SAAS,UAAW,EAC5CM,EAAY,OAAON,EAAK,WAAa,IAAI,KAAK,KAAK,IAAI,EAAE,GAAG,GAAI,EAAE,YAAY,CAAC,EAC/EO,EAAQ,OAAOP,EAAK,OAAS,YAAY,EACzCQ,EAAc,OAAOR,EAAK,aAAe,aAAa,EAEtDS,EAAY,MAAMC,GAAoBP,EAAa,CAAE,MAAAI,EAAO,YAAAC,EAAa,mBAAoBF,EAAW,cAAeD,CAAQ,CAAC,EAChIM,EAAS,MAAMC,GAAiBT,EAAa,CAAE,MAAO,GAAGI,CAAK,SAAU,CAAC,EAC/E,aAAMM,GAAcV,EAAaM,EAAU,GAAIE,EAAO,EAAE,EAEjD,CAAE,GAAI,GAAM,UAAW,mCAAmCF,EAAU,EAAE,GAAI,aAAcA,EAAU,GAAI,UAAWE,EAAO,GAAI,UAAWL,CAAU,CAC1J,CAfsBQ,EAAAlB,GAAA,kBAiBtB,eAAeM,GAAsBL,EAASkB,EAAwC,CACpF,IAAMC,EAAM,MAAMnB,EAAI,SAAS,IAAI,MAAMkB,CAAQ,EAAE,EACnD,OAAOC,EAAM,KAAK,MAAMA,CAAG,EAAe,IAC5C,CAHeF,EAAAZ,GAAA,yBAKf,eAAeE,GAAqBH,EAAgC,CAClE,IAAMgB,EAAS,IAAI,gBAAgB,CACjC,UAAWhB,EAAM,UACjB,cAAeA,EAAM,cACrB,cAAeA,EAAM,cACrB,WAAY,eACd,CAAC,EACKiB,EAAM,MAAM,MAAM,sCAAuC,CAC7D,OAAO,OAAQ,QAAQ,CAAE,eAAe,mCAAoC,EAAG,KAAMD,EAAO,SAAS,CACvG,CAAC,EACD,GAAI,CAACC,EAAI,GAAI,MAAM,IAAI,MAAM,8BAA8BA,EAAI,MAAM,EAAE,EACvE,IAAMC,EAAW,MAAMD,EAAI,KAAK,EAAG,GAAI,CAACC,EAAK,aAAc,MAAM,IAAI,MAAM,iBAAiB,EAC5F,OAAOA,EAAK,YACd,CAbeL,EAAAV,GAAA,wBAef,eAAeM,GAAoBP,EAAoBiB,EAAgH,CACrK,IAAMC,EAAO,CAAE,QAAS,CAAE,MAAOD,EAAE,MAAO,YAAaA,EAAE,YAAa,mBAAoBA,EAAE,kBAAmB,EAAG,OAAQ,CAAE,cAAeA,EAAE,aAAc,EAAG,eAAgB,CAAE,gBAAiB,GAAM,eAAgB,EAAK,CAAE,EACxNF,EAAM,MAAM,MAAM,0FAA2F,CACjH,OAAQ,OAAQ,QAAS,CAAE,cAAiB,UAAUf,CAAW,GAAI,eAAgB,kBAAmB,EAAG,KAAM,KAAK,UAAUkB,CAAI,CACtI,CAAC,EACD,GAAI,CAACH,EAAI,GAAI,MAAM,IAAI,MAAM,8BAA8BA,EAAI,MAAM,EAAE,EACvE,OAAO,MAAMA,EAAI,KAAK,CACxB,CAPeJ,EAAAJ,GAAA,uBASf,eAAeE,GAAiBT,EAAoBiB,EAAoB,CACtE,IAAMC,EAAO,CAAE,QAAS,CAAE,MAAOD,EAAE,KAAM,EAAG,IAAK,CAAE,OAAQ,QAAS,cAAe,MAAO,CAAE,EACtFF,EAAM,MAAM,MAAM,4EAA6E,CACnG,OAAQ,OAAQ,QAAS,CAAE,cAAiB,UAAUf,CAAW,GAAI,eAAgB,kBAAmB,EAAG,KAAM,KAAK,UAAUkB,CAAI,CACtI,CAAC,EACD,GAAI,CAACH,EAAI,GAAI,MAAM,IAAI,MAAM,2BAA2BA,EAAI,MAAM,EAAE,EACpE,OAAO,MAAMA,EAAI,KAAK,CACxB,CAPeJ,EAAAF,GAAA,oBASf,eAAeC,GAAcV,EAAoBmB,EAAoBC,EAAiB,CACpF,IAAMC,EAAM,IAAI,IAAI,2DAA2D,EAC/EA,EAAI,aAAa,IAAI,KAAMF,CAAW,EACtCE,EAAI,aAAa,IAAI,OAAQ,mBAAmB,EAChDA,EAAI,aAAa,IAAI,WAAYD,CAAQ,EACzC,IAAML,EAAM,MAAM,MAAMM,EAAI,SAAS,EAAG,CAAE,OAAO,OAAQ,QAAS,CAAE,cAAiB,UAAUrB,CAAW,EAAG,CAAE,CAAC,EAChH,GAAI,CAACe,EAAI,GAAI,MAAM,IAAI,MAAM,wBAAwBA,EAAI,MAAM,EAAE,EACjE,OAAO,MAAMA,EAAI,KAAK,CACxB,CAReJ,EAAAD,GAAA,iBCzDfY,IAAAC,IAAAC,IASA,eAAsBC,GAAgBC,EAAiC,CACrE,GAAM,CAAE,OAAAC,EAAQ,IAAAC,EAAK,IAAAC,EAAK,UAAAC,EAAY,KAAM,EAAIJ,EAG1CK,EAAcJ,EAAO,OAAO,MAAM,GACxC,GAAII,EAAa,CAEf,IAAMC,EAAU,CACd,KAAM,gBACN,OAAQL,EAAO,GACf,SAAUC,EAAI,SACd,KAAMA,EAAI,KACV,GAAI,KAAK,IAAI,CACf,EAEMK,EAAI,MAAMH,EAAUC,EAAa,CACrC,OAAQ,OACR,QAAS,CAAE,eAAgB,kBAAmB,EAC9C,KAAM,KAAK,UAAUC,CAAO,CAC9B,CAAC,EAED,GAAI,CAACC,EAAE,GACL,MAAM,IAAI,MAAM,mCAAmCA,EAAE,MAAM,EAAE,EAG/D,MACF,CAIA,GADkBN,EAAO,OAAO,SAAS,IAAM,GAChC,CAEb,IAAMO,EAAUP,EAAO,OAAO,GAC9B,KAAI,CAACO,GAAS,mBAAqB,CAACA,GAAS,QACrC,IAAI,MAAM,6FAA6F,EAKzG,IAAI,MAAM,mFAAmF,CACrG,CAGA,MAAM,IAAI,MAAM,+EAA+E,CACjG,CA5CsBC,EAAAV,GAAA,mBCTtBW,IAAAC,IAAAC,IASA,eAAsBC,GAAiBC,EAAiC,CACtE,GAAM,CAAE,OAAAC,EAAQ,IAAAC,EAAK,IAAAC,EAAK,UAAAC,EAAY,KAAM,EAAIJ,EAG1CK,EAAcJ,EAAO,OAAO,MAAM,GACxC,GAAII,EAAa,CAEf,IAAMC,EAAU,CACd,KAAM,iBACN,OAAQL,EAAO,GACf,SAAUC,EAAI,SACd,KAAMA,EAAI,KACV,GAAI,KAAK,IAAI,CACf,EAEMK,EAAI,MAAMH,EAAUC,EAAa,CACrC,OAAQ,OACR,QAAS,CAAE,eAAgB,kBAAmB,EAC9C,KAAM,KAAK,UAAUC,CAAO,CAC9B,CAAC,EAED,GAAI,CAACC,EAAE,GACL,MAAM,IAAI,MAAM,mCAAmCA,EAAE,MAAM,EAAE,EAG/D,MACF,CAIA,GADkBN,EAAO,OAAO,SAAS,IAAM,GAChC,CAEb,IAAMO,EAAUP,EAAO,OAAO,GAC9B,KAAI,CAACO,GAAS,YAAc,CAACA,GAAS,aAC9B,IAAI,MAAM,8FAA8F,EAK1G,IAAI,MAAM,oFAAoF,CACtG,CAGA,MAAM,IAAI,MAAM,gFAAgF,CAClG,CA5CsBC,EAAAV,GAAA,oBCTtBW,IAAAC,IAAAC,IASA,eAAsBC,GAAcC,EAAiC,CACnE,GAAM,CAAE,OAAAC,EAAQ,IAAAC,EAAK,IAAAC,EAAK,UAAAC,EAAY,KAAM,EAAIJ,EAG1CK,EAAcJ,EAAO,OAAO,MAAM,OACxC,GAAII,EAAa,CAEf,IAAMC,EAAU,CACd,KAAM,cACN,OAAQL,EAAO,GACf,SAAUC,EAAI,SACd,KAAMA,EAAI,KACV,GAAI,KAAK,IAAI,CACf,EAEMK,EAAI,MAAMH,EAAUC,EAAa,CACrC,OAAQ,OACR,QAAS,CAAE,eAAgB,kBAAmB,EAC9C,KAAM,KAAK,UAAUC,CAAO,CAC9B,CAAC,EAED,GAAI,CAACC,EAAE,GACL,MAAM,IAAI,MAAM,uCAAuCA,EAAE,MAAM,EAAE,EAGnE,MACF,CAIA,GADkBN,EAAO,OAAO,SAAS,QAAU,GACpC,CAEb,IAAMO,EAAcP,EAAO,OAAO,OAClC,KAAI,CAACO,GAAa,eAAiB,CAACA,GAAa,QACzC,IAAI,MAAM,+FAA+F,EAK3G,IAAI,MAAM,iFAAiF,CACnG,CAGA,MAAM,IAAI,MAAM,6EAA6E,CAC/F,CA5CsBC,EAAAV,GAAA,iBCTtBW,IAAAC,IAAAC,IASA,eAAsBC,GAASC,EAAiC,CAC9D,GAAM,CAAE,OAAAC,EAAQ,IAAAC,EAAK,IAAAC,EAAK,UAAAC,EAAY,KAAM,EAAIJ,EAG1CK,EAAcJ,EAAO,OAAO,MAAM,EACxC,GAAII,EAAa,CAEf,IAAMC,EAAU,CACd,KAAM,SACN,OAAQL,EAAO,GACf,SAAUC,EAAI,SACd,KAAMA,EAAI,KACV,GAAI,KAAK,IAAI,CACf,EAEMK,EAAI,MAAMH,EAAUC,EAAa,CACrC,OAAQ,OACR,QAAS,CAAE,eAAgB,kBAAmB,EAC9C,KAAM,KAAK,UAAUC,CAAO,CAC9B,CAAC,EAED,GAAI,CAACC,EAAE,GACL,MAAM,IAAI,MAAM,kCAAkCA,EAAE,MAAM,EAAE,EAG9D,MACF,CAIA,GADkBN,EAAO,OAAO,SAAS,GAAK,GAC/B,CAEb,IAAMO,EAASP,EAAO,OAAO,EAC7B,KAAI,CAACO,GAAQ,cAAgB,CAACA,GAAQ,cAC9B,IAAI,MAAM,+FAA+F,EAK3G,IAAI,MAAM,sFAAsF,CACxG,CAGA,MAAM,IAAI,MAAM,kFAAkF,CACpG,CA5CsBC,EAAAV,GAAA,YCTtBW,IAAAC,IAAAC,IAQA,IAAMC,GAAgBC,EAAA,CAACC,EAAgBC,IAA6B,CAClE,IAAMC,EAAQ,IAAI,KAAK,EAAE,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC,EACnD,MAAO,QAAQF,CAAM,IAAIC,CAAO,IAAIC,CAAK,EAC3C,EAHsB,iBAMhBC,GAA0C,CAC9C,GAAI,GACJ,GAAI,IACJ,GAAI,IACJ,OAAQ,GACR,EAAG,GACL,EAEA,eAAsBC,GACpBH,EACAD,EACAK,EACkB,CAElB,GAAIJ,IAAY,KAAM,CACpB,IAAMK,EAAMR,GAAcE,EAAO,GAAIC,CAAO,EACtCM,EAAW,MAAMF,EAAI,SAAS,IAAIC,CAAG,EACrCE,EAAQD,EAAW,SAASA,EAAU,EAAE,EAAI,EAG5CE,EAAQN,GAAeF,CAAO,EACpC,GAAIO,GAASC,EACX,MAAO,EAEX,CAGA,MAAO,EACT,CApBsBV,EAAAK,GAAA,eAsBtB,eAAsBM,GACpBT,EACAD,EACAK,EACe,CACf,IAAMC,EAAMR,GAAcE,EAAO,GAAIC,CAAO,EACtCM,EAAW,MAAMF,EAAI,SAAS,IAAIC,CAAG,EACrCE,EAAQD,EAAW,SAASA,EAAU,EAAE,EAAI,EAGlD,MAAMF,EAAI,SAAS,IAAIC,EAAK,OAAOE,EAAQ,CAAC,EAAG,CAAE,cAAe,GAAM,CAAC,CACzE,CAXsBT,EAAAW,GAAA,oBPjCtB,IAAOC,GAAQ,CACb,MAAM,MAAMC,EAA4BC,EAAU,CAChD,QAAWC,KAAOF,EAAM,SAAU,CAChC,IAAMG,EAAMD,EAAI,KAChB,GAAI,CACF,IAAME,EAAMD,GAAK,OAAS,MAAME,GAAgBJ,EAAKE,EAAI,MAAM,EAAI,KACnE,GAAI,CAACC,EAAK,MAAM,IAAI,MAAM,UAAUD,EAAI,MAAM,YAAY,EAE1D,IAAMG,EAAU,CAAC,CAACF,GAAK,OAAO,SACxBG,EAAOH,GAAK,gBAAkB,KAGpC,GAAIE,GAAWC,EAAM,CACnB,IAAMC,EAAmC,CAAC,EAC1C,QAAWC,KAAMN,EAAI,SACnBK,EAAQC,CAAE,EAAI,MAAMC,GAAeT,EAAKG,EAAKD,EAAI,SAAUA,EAAI,IAAI,EAErE,MAAMQ,GAAmBV,EAAKE,EAAI,QAAS,CAAE,QAAS,GAAM,KAAM,CAAE,QAAAK,CAAQ,CAAE,CAAC,EAC/E,MAAMN,EAAI,IAAI,EACd,QACF,CAGA,IAAMM,EAAmC,CAAC,EACpCI,EAAyD,CAAC,EAEhE,QAAWH,KAAMN,EAAI,SACnB,GAAI,CAGF,GADc,MAAMU,GAAYJ,EAAIL,EAAKH,CAAG,EACjC,CACTW,EAAU,KAAK,CACb,QAASH,EACT,OAAQ,GAAGA,CAAE,kBACf,CAAC,EACDD,EAAQC,CAAE,EAAI,CACZ,OAAQ,WACR,SAAU,QACV,UAAW,CAAC,eAAgB,eAAe,CAC7C,EACA,QACF,CAGA,IAAMK,EAAS,CACb,OAAQV,EACR,IAAK,CACH,SAAUD,EAAI,SACd,KAAMA,EAAI,KACV,KAAMA,EAAI,KAAK,MAAQA,EAAI,KAAK,KAAOA,EAAI,KAAK,MAChD,SAAUA,EAAI,KAAK,UAAYA,EAAI,KAAK,QAC1C,EACA,IAAAF,CACF,EAGA,OAAQQ,EAAI,CACV,IAAK,KACH,MAAMM,GAAed,EAAKG,EAAKD,EAAI,SAAUA,EAAI,IAAI,EACrD,MACF,IAAK,KACH,MAAMa,GAAgBF,CAAM,EAC5B,MACF,IAAK,KACH,MAAMG,GAAiBH,CAAM,EAC7B,MACF,IAAK,SACH,MAAMI,GAAcJ,CAAM,EAC1B,MACF,IAAK,IACH,MAAMK,GAASL,CAAM,EACrB,MACF,QACE,MAAM,IAAI,MAAM,oBAAoBL,CAAE,EAAE,CAC5C,CAGA,MAAMW,GAAiBX,EAAIL,EAAKH,CAAG,EACnCO,EAAQC,CAAE,EAAI,CAAE,OAAQ,WAAY,CAEtC,OAASY,EAAU,CAEjB,GAAIA,GAAK,SAAS,SAAS,gBAAgB,GAAKA,GAAK,SAAS,SAAS,qBAAqB,EAC1FT,EAAU,KAAK,CACb,QAASH,EACT,OAAQY,EAAI,OACd,CAAC,EACDb,EAAQC,CAAE,EAAI,CACZ,OAAQ,oBACR,MAAOY,EAAI,QACX,SAAU,QACV,UAAW,CAAC,eAAgB,eAAe,CAC7C,MAGA,OAAMA,CAEV,CAIF,MAAMV,GAAmBV,EAAKE,EAAI,QAAS,CACzC,QAASS,EAAU,SAAW,EAC9B,KAAM,CAAE,QAAAJ,EAAS,UAAWI,EAAU,OAAS,EAAIA,EAAY,MAAU,CAC3E,CAAC,EAED,MAAMV,EAAI,IAAI,CAChB,OAASmB,EAAU,CAEjB,GAAIpB,EAAI,MACN,MAAMA,EAAI,IAAI,KAAK,CACjB,OAAQE,EAAI,OACZ,MAAOkB,GAAK,SAAW,UACvB,IAAAlB,EACA,UAAW,KAAK,IAAI,CACtB,CAAC,EAAE,MAAM,IAAM,CAAC,CAAC,EAGbF,EAAI,eACN,GAAI,CACF,MAAM,MAAMA,EAAI,cAAe,CAC7B,OAAQ,OACR,QAAS,CAAE,eAAgB,kBAAmB,EAC9C,KAAM,KAAK,UAAU,CACnB,OAAQE,EAAI,OACZ,OAAQkB,GAAK,SAAW,UACxB,GAAI,KAAK,IAAI,CACf,CAAC,CACH,CAAC,CACH,MAAQ,CAER,CAGJ,MAAMV,GAAmBV,EAAKE,EAAI,QAAS,CACzC,QAAS,GACT,MAAO,CAAE,KAAM,MAAO,QAAS,OAAOkB,GAAK,SAAWA,CAAG,CAAE,CAC7D,CAAC,EACD,MAAMnB,EAAI,IAAI,CAChB,CACF,CACF,CACF,EQzJAoB,IAAAC,IAAAC,IAkBA,eAAsBC,GAASC,EAAUC,EAAgBC,EAAc,CACrE,IAAMC,EAAM,WAAWF,CAAM,WAAWC,EAAG,EAAE,GAC7C,MAAMF,EAAI,SAAS,IAAIG,EAAK,KAAK,UAAUD,CAAE,CAAC,EAC9C,IAAME,EAAS,WAAWH,CAAM,gBAC1BI,EAAY,MAAML,EAAI,SAAS,IAAII,EAAQ,MAAM,GAAe,CAAC,EAEjEE,EAAO,CADD,CAAE,GAAIJ,EAAG,GAAI,MAAOA,EAAG,MAAO,KAAMA,EAAG,KAAM,SAAUA,EAAG,SAAU,OAAQA,EAAG,MAAO,EAC/E,GAAGG,EAAS,OAAOE,GAAKA,EAAE,KAAOL,EAAG,EAAE,CAAC,EAC1D,MAAMF,EAAI,SAAS,IAAII,EAAQ,KAAK,UAAUE,EAAK,MAAM,EAAG,GAAI,CAAC,CAAC,CACpE,CARsBE,EAAAT,GAAA,YAUtB,eAAsBU,GAAST,EAAUC,EAAgBS,EAA2C,CAClG,IAAMP,EAAM,WAAWF,CAAM,WAAWS,CAAO,GAC/C,OAAQ,MAAMV,EAAI,SAAS,IAAIG,EAAK,MAAM,CAC5C,CAHsBK,EAAAC,GAAA,YAKtB,eAAsBE,GAAYX,EAAUC,EAAgBS,EAAiB,CAC3E,MAAMV,EAAI,SAAS,OAAO,WAAWC,CAAM,WAAWS,CAAO,EAAE,EAC/D,IAAMN,EAAS,WAAWH,CAAM,gBAC1BI,EAAY,MAAML,EAAI,SAAS,IAAII,EAAQ,MAAM,GAAe,CAAC,EACvE,MAAMJ,EAAI,SAAS,IAAII,EAAQ,KAAK,UAAUC,EAAS,OAAOE,GAAKA,EAAE,KAAOG,CAAO,CAAC,CAAC,CACvF,CALsBF,EAAAG,GAAA,eAOtB,eAAsBC,GAAWZ,EAAUC,EAAgC,CACzE,IAAMG,EAAS,WAAWH,CAAM,gBAChC,OAAQ,MAAMD,EAAI,SAAS,IAAII,EAAQ,MAAM,GAAe,CAAC,CAC/D,CAHsBI,EAAAI,GAAA,cAMtB,eAAsBC,GAAQb,EAAUC,EAAgBS,EAAiBI,EAAgBC,EAA0B,CACjH,IAAMZ,EAAM,WAAWF,CAAM,WAAWS,CAAO,SAASI,CAAM,GAC9D,MAAMd,EAAI,SAAS,IAAIG,EAAKY,EAAM,CAAE,cAAe,GAAK,GAAK,GAAK,GAAI,CAAC,CACzE,CAHsBP,EAAAK,GAAA,WAUtB,eAAsBG,GAAWC,EAAUC,EAAgBC,EAAiBC,EAAgB,CAC1F,IAAMC,EAAM,WAAWH,CAAM,WAAWC,CAAO,YACzCG,EAAQ,MAAML,EAAI,SAAS,IAAII,EAAK,MAAM,GAAqC,CAAC,EACtFC,EAAK,KAAK,CAAE,OAAAF,EAAQ,GAAI,KAAK,IAAI,CAAE,CAAC,EACpC,MAAMH,EAAI,SAAS,IAAII,EAAK,KAAK,UAAUC,CAAI,EAAG,CAAE,cAAe,GAAK,GAAK,GAAK,GAAI,CAAC,CACzF,CALsBC,EAAAP,GAAA,cCxDtBQ,IAAAC,IAAAC,IA0BA,eAAsBC,GAAeC,EAAUC,EAAgBC,EAAgBC,EAAkBC,EAAe,CAC9G,IAAMC,EAAM,WAAWJ,CAAM,YAAYC,CAAM,GAIzCI,GAHY,MAAMN,EAAI,SAAS,IAAIK,EAAK,MAAM,GAA+C,CAAC,GAG1E,OAAOE,GAAKA,EAAE,WAAaJ,CAAQ,EAC7DG,EAAS,KAAK,CAAE,SAAAH,EAAU,MAAAC,CAAM,CAAC,EAEjC,MAAMJ,EAAI,SAAS,IAAIK,EAAK,KAAK,UAAUC,CAAQ,CAAC,CACtD,CATsBE,EAAAT,GAAA,kBC1BtBU,IAAAC,IAAAC,IAwBA,IAAMC,GAAUC,EAACC,GAAkB,WAAWA,CAAK,GAAnC,WAEhB,eAAsBC,GACpBC,EACAC,EAQA,CACAC,GAAOD,EAAK,OAAQ,iBAAiB,EACrCC,GAAOD,EAAK,KAAM,eAAe,EAEjC,IAAIE,EAA6BF,EAAK,KAClCA,EAAK,OAAS,iBAChBC,GAAOD,EAAK,OAAQ,uCAAuC,EAC3DE,EAAiB,gBAAgBF,EAAK,MAAM,IAE1CA,EAAK,OAAS,UAChBC,GAAOD,EAAK,OAAQ,gCAAgC,EACpDE,EAAiB,SAASF,EAAK,MAAM,IAGvC,IAAMH,EAAQM,GAAO,EAAE,EACjBC,EAAiB,CACrB,MAAAP,EACA,SAAUG,EAAK,OACf,OAAQA,EAAK,OACb,KAAME,EACN,QAAS,KAAK,IAAI,EAAGF,EAAK,SAAW,EAAE,EACvC,KAAM,EACN,IAAKK,GAAML,EAAK,aAAe,GAAK,GAAK,CAAC,EAC1C,UAAWA,EAAK,UAChB,UAAWM,GAAM,CACnB,EAEA,MAAMP,EAAI,SAAS,IAAIJ,GAAQE,CAAK,EAAG,KAAK,UAAUO,CAAM,EAAG,CAC7D,cAAe,KAAK,MAAMA,EAAO,IAAME,GAAM,GAAK,GAAI,CACxD,CAAC,EAED,IAAMC,EAAY,GAAGR,EAAI,UAAU,QAAQ,MAAO,EAAE,CAAC,eAAe,mBAAmBF,CAAK,CAAC,GAC7F,MAAO,CAAE,GAAI,GAAe,MAAAA,EAAO,UAAAU,EAAW,OAAAH,CAAO,CACvD,CA3CsBR,EAAAE,GAAA,gBA6CtB,eAAsBU,GAAUT,EAAUF,EAAe,CACvD,IAAMO,EAAS,MAAMK,GAAkBV,EAAI,SAAUJ,GAAQE,CAAK,CAAC,EACnE,GAAI,CAACO,EAAQ,MAAMM,GAAO,kBAAkB,EAC5C,OAAON,CACT,CAJsBR,EAAAY,GAAA,aAStB,eAAsBG,GAAcZ,EAAUF,EAAe,CAC3D,IAAMe,EAAMjB,GAAQE,CAAK,EACnBO,EAAS,MAAMK,GAAkBV,EAAI,SAAUa,CAAG,EACxD,GAAI,CAACR,EAAQ,MAAMM,GAAO,eAAe,EACzC,GAAIN,EAAO,IAAME,GAAM,EAAG,MAAMI,GAAO,eAAe,EACtD,GAAIN,EAAO,MAAQA,EAAO,QAAS,MAAMM,GAAO,kBAAkB,EAElE,OAAAN,EAAO,MAAQ,EACf,MAAMS,GAAUd,EAAI,SAAUa,EAAKR,CAAM,EAClCA,CACT,CAVsBR,EAAAe,GAAA,iBChFtBG,IAAAC,IAAAC,IAaA,IAAMC,GAAWC,EAAA,CAACC,EAAgBC,IAAmB,SAASD,CAAM,IAAIC,CAAM,GAA7D,YACXC,GAAcH,EAACC,GAAmB,SAASA,CAAM,IAAnC,eAEpB,eAAsBG,GACpBC,EACAC,EAMA,CACAC,GAAOD,EAAK,QAAUA,EAAK,QAAUA,EAAK,KAAM,+BAA+B,EAE/E,IAAME,EAAMT,GAASO,EAAK,OAAQA,EAAK,MAAM,EACvCG,EAAW,MAAMC,GAAgBL,EAAI,SAAUG,CAAG,EACxD,GAAIC,EAAU,OAAOA,EAErB,IAAME,EAAa,CACjB,SAAUL,EAAK,OACf,OAAQA,EAAK,OACb,KAAMA,EAAK,KACX,SAAUA,EAAK,SACf,QAAS,CAAC,EACV,UAAW,KAAK,IAAI,CACtB,EACA,aAAMM,GAAUP,EAAI,SAAUG,EAAKG,CAAI,EAChCA,CACT,CAzBsBX,EAAAI,GAAA,cA+BtB,eAAsBS,GAAUC,EAAUC,EAAgB,CAExD,OADc,MAAMC,GAAiBF,EAAI,SAAUG,GAAYF,CAAM,CAAC,CAExE,CAHsBG,EAAAL,GAAA,aC/CtBM,IAAAC,IAAAC,IAqBA,IAAMC,GAAWC,EAAA,CAACC,EAAgBC,IAAmB,aAAaD,CAAM,IAAIC,CAAM,GAAjE,YACXC,GAAcH,EAACC,GAAmB,aAAaA,CAAM,IAAvC,eACdG,GAAaJ,EAAA,CAACC,EAAgBC,IAAmB,YAAYD,CAAM,IAAIC,CAAM,IAAhE,cAEnB,eAAsBG,GACpBC,EACAC,EAMA,CACAC,GAAOD,EAAK,QAAUA,EAAK,QAAUA,EAAK,QAAUA,EAAK,KAAM,gBAAgB,EAC/E,IAAME,EAAMV,GAASQ,EAAK,OAAQA,EAAK,MAAM,EACvCG,EAAS,MAAMC,GAAgBL,EAAI,SAAUG,CAAG,EACtD,GAAIC,EAAQ,OAAOA,EACnB,IAAME,EAAa,CACjB,OAAQL,EAAK,OACb,SAAUA,EAAK,OACf,OAAQA,EAAK,OACb,KAAMA,EAAK,KACX,UAAW,KAAK,IAAI,CACtB,EACA,aAAMM,GAAUP,EAAI,SAAUG,EAAKG,CAAI,EAChCA,CACT,CAtBsBZ,EAAAK,GAAA,cAwBtB,eAAsBS,GAAUR,EAAUL,EAAgBc,EAAiB,CACzE,IAAMC,EAAQ,MAAMC,GAAiBX,EAAI,SAAUH,GAAYF,CAAM,CAAC,EACtE,OAAOc,EAASC,EAAM,OAAQE,GAAMA,EAAE,SAAWH,CAAM,EAAIC,CAC7D,CAHsBhB,EAAAc,GAAA,aAMtB,eAAsBK,GACpBb,EACAC,EAMA,CACAC,GAAOD,EAAK,MAAQA,EAAK,KAAK,KAAK,EAAG,YAAY,EAClD,IAAMa,EAAe,CAAE,MAAOC,GAAG,EAAG,OAAQd,EAAK,OAAQ,KAAMA,EAAK,KAAK,KAAK,EAAG,GAAI,KAAK,IAAI,CAAE,EAC1FE,EAAM,GAAGL,GAAWG,EAAK,OAAQA,EAAK,MAAM,CAAC,GAAGa,EAAI,KAAK,GAC/D,aAAMd,EAAI,SAAS,IAAIG,EAAK,KAAK,UAAUW,CAAG,CAAC,EACxCA,CACT,CAdsBpB,EAAAmB,GAAA,cAgBtB,eAAsBG,GACpBhB,EACAC,EAKA,CACA,IAAMgB,EAASnB,GAAWG,EAAK,OAAQA,EAAK,MAAM,EAC5CiB,EAAU,MAAMlB,EAAI,SAAS,KAAK,CAAE,OAAAiB,EAAQ,MAAO,KAAK,IAAI,IAAKhB,EAAK,OAAS,EAAE,CAAE,CAAC,EAG1F,OADa,MAAM,QAAQ,IAAIiB,EAAQ,KAAK,IAAKC,GAAMnB,EAAI,SAAS,IAAImB,EAAE,KAAM,MAAM,CAAqB,CAAC,GAChG,OAAO,OAAO,EAAE,KAAK,CAACC,EAAGC,IAAMD,EAAE,GAAKC,EAAE,EAAE,CACxD,CAbsB3B,EAAAsB,GAAA,gBCvEtBM,IAAAC,IAAAC,IAuBA,IAAMC,GAAYC,EAAA,CAACC,EAAgBC,IAAoB,iBAAiBD,CAAM,IAAIC,CAAO,GAAvE,aACZC,GAAeH,EAACC,GAAmB,iBAAiBA,CAAM,IAA3C,gBACfG,GAAUJ,EAAA,CAACC,EAAgBC,EAAiBG,IAAe,kBAAkBJ,CAAM,IAAIC,CAAO,IAAIG,CAAE,GAA1F,WACVC,GAAaN,EAAA,CAACC,EAAgBC,IAAoB,kBAAkBD,CAAM,IAAIC,CAAO,IAAxE,cAEnB,eAAsBK,GACpBC,EACAC,EAOA,CACAC,GAAOD,EAAK,QAAUA,EAAK,MAAO,yBAAyB,EAC3D,IAAME,EAAe,CACnB,QAASN,GAAG,EACZ,SAAUI,EAAK,OACf,MAAOA,EAAK,MACZ,OAAQA,EAAK,OACb,QAASA,EAAK,QACd,UAAWA,EAAK,UAChB,UAAW,KAAK,IAAI,CACtB,EACA,aAAMG,GAAUJ,EAAI,SAAUT,GAAUU,EAAK,OAAQE,EAAM,OAAO,EAAGA,CAAK,EACnEA,CACT,CAtBsBX,EAAAO,GAAA,eAwBtB,eAAsBM,GAAWL,EAAUP,EAAgBa,EAAiB,CAC1E,IAAMC,EAAM,MAAMC,GAAkBR,EAAI,SAAUL,GAAaF,CAAM,CAAC,EACtE,OAAOa,EAASC,EAAI,OAAQE,GAAMA,EAAE,SAAWH,CAAM,EAAIC,CAC3D,CAHsBf,EAAAa,GAAA,cA2BtB,eAAsBK,GACpBC,EACAC,EAMA,CACA,IAAMC,EAAM,SAASD,EAAK,MAAM,IAAIA,EAAK,OAAO,IAAI,KAAK,IAAI,CAAC,IAAIE,GAAG,CAAC,GACtE,aAAMH,EAAI,SAAS,IAAIE,EAAKD,EAAK,KAAM,CAAE,aAAc,CAAE,YAAaA,EAAK,WAAY,CAAE,CAAC,EACnF,CAAE,MAAOC,CAAI,CACtB,CAZsBE,EAAAL,GAAA,gBAetB,eAAsBM,GACpBL,EACAC,EAQA,CACA,IAAMK,EAAc,CAClB,GAAIH,GAAG,EACP,MAAOF,EAAK,MACZ,WAAYA,EAAK,WACjB,WAAYA,EAAK,YAAc,CAAC,EAChC,aAAc,CAAC,CAACA,EAAK,aACrB,GAAI,KAAK,IAAI,CACf,EACA,aAAMM,GAAUP,EAAI,SAAUQ,GAAQP,EAAK,OAAQA,EAAK,QAASK,EAAE,EAAE,EAAGA,CAAC,EAClEA,CACT,CArBsBF,EAAAC,GAAA,eAuBtB,eAAsBI,GACpBT,EACAC,EACA,CAGA,OAFa,MAAMS,GAAqBV,EAAI,SAAUW,GAAWV,EAAK,OAAQA,EAAK,OAAO,CAAC,GAE/E,KAAK,CAAC,EAAGW,IAAM,EAAE,GAAKA,EAAE,EAAE,CACxC,CAPsBR,EAAAK,GAAA,aCrHtBI,IAAAC,IAAAC,IA0CA,eAAsBC,GACpBC,EACAC,EAC6B,CAC7B,GAAI,CAEF,IAAMC,EAAWC,GAAiBF,EAAQ,aAAa,EAIvD,GADiB,MAAMD,EAAI,SAAS,IAAI,UAAUE,CAAQ,EAAE,EAE1D,MAAO,CACL,QAAS,GACT,MAAO,CACL,KAAM,gBACN,QAAS,WAAWA,CAAQ,kBAC9B,CACF,EAIF,IAAIE,EAAYH,EAAQ,MAAQ,OAC5BI,EAAmB,KAEvB,GAAIJ,EAAQ,UAAW,CACrB,GAAM,CAAE,iBAAAK,CAAiB,EAAI,KAAM,uCAG7BC,EAAc,MAFC,IAAID,EAAiBN,CAAG,EAEN,eAAeC,EAAQ,UAAWC,CAAQ,EAE7EK,EAAY,SAAWA,EAAY,UACrCF,EAAmB,CACjB,KAAMJ,EAAQ,UACd,SAAUM,EAAY,QACxB,EAGIA,EAAY,SAAS,OAAS,iBAChCH,EAAYG,EAAY,SAAS,MAGnC,QAAQ,IAAI,sCAAsCN,EAAQ,SAAS,QAAQC,CAAQ,EAAE,GAErF,QAAQ,KAAK,sCAAsCD,EAAQ,SAAS,GAAIM,EAAY,KAAK,CAG7F,CAGA,IAAMC,EAAQC,GAAsBL,CAAS,EAGvCM,EAA6B,CACjC,GAAIR,EACJ,KAAMD,EAAQ,SACd,OAAQA,EAAQ,QAAU,QAC1B,GAAIA,EAAQ,UAAY,gBACxB,MAAAO,EACA,eAAgBP,EAAQ,gBAAkB,KAC1C,SAAU,CACR,aAAcA,EAAQ,aACtB,YAAaA,EAAQ,YACrB,KAAMG,EACN,UAAW,IAAI,KAAK,EAAE,YAAY,EAClC,cAAe,YACf,GAAIC,GAAoB,CACtB,UAAWA,EAAiB,KAC5B,cAAeA,EAAiB,QAClC,CACF,CACF,EAEA,MAAMM,GAAgBX,EAAKU,CAAY,EAGvC,IAAME,EAAW,MAAMC,GAAoBb,EAAK,CAC9C,UAAWE,EACX,WAAY,MACd,CAAC,EAEKY,EAAgB,MAAMD,GAAoBb,EAAK,CACnD,UAAWE,EACX,WAAY,MACd,CAAC,EAGKa,EAAUf,EAAI,WAAa,uDAC3BgB,EAAa,MAAMC,GAAmBjB,EAAKE,CAAQ,EACnDgB,EAAW,GAAGH,CAAO,UAAUC,CAAU,GAEzCG,EAAkBnB,EAAI,mBAAqB,wDAG7CA,EAAI,kBAAoBA,EAAI,iBAC9B,MAAMoB,GAAiBpB,EAAK,CAC1B,GAAIC,EAAQ,aACZ,SAAUA,EAAQ,SAClB,SAAAiB,EACA,SAAAN,CACF,CAAC,EAIH,IAAIS,EAAuB,KAC3B,GAAIrB,EAAI,0BAA4B,OAAQ,CAC1C,GAAM,CAAE,0BAAAsB,CAA0B,EAAI,KAAM,uCAE5CD,EAAuB,MAAMC,EAC3BtB,EACAE,EACAD,EAAQ,SACRa,CACF,EAEIO,EAAqB,QACvB,QAAQ,IAAI,2CAA2CnB,CAAQ,IAAKmB,EAAqB,QAAQ,EAEjG,QAAQ,KAAK,+DAAgEA,EAAqB,KAAK,CAE3G,CAEA,MAAO,CACL,QAAS,GACT,OAAQ,CACN,GAAInB,EACJ,KAAMD,EAAQ,SACd,SAAAW,EACA,cAAAE,EACA,SAAAI,EACA,gBAAAC,EACA,WAAYE,GAAsB,QAAU,CAC1C,SAAUA,EAAqB,SAC/B,UAAWA,EAAqB,UAChC,UAAWA,EAAqB,SAClC,EAAI,IACN,CACF,CAEF,OAASE,EAAY,CACnB,eAAQ,MAAM,qBAAsBA,CAAK,EAClC,CACL,QAAS,GACT,MAAO,CACL,KAAM,sBACN,QAASA,EAAM,SAAW,eAC5B,CACF,CACF,CACF,CApJsBC,EAAAzB,GAAA,mBAyJtB,SAASI,GAAiBsB,EAAuB,CAC/C,OAAOA,EACJ,YAAY,EACZ,QAAQ,cAAe,GAAG,EAC1B,QAAQ,WAAY,EAAE,EACtB,UAAU,EAAG,EAAE,CACpB,CANSD,EAAArB,GAAA,oBAWT,SAASM,GAAsBiB,EAAc,CAC3C,OAAQA,EAAM,CACZ,IAAK,aACL,IAAK,UACH,MAAO,CAAE,SAAU,GAAO,UAAW,GAAM,UAAW,GAAM,UAAW,EAAK,EAC9E,IAAK,OACL,QACE,MAAO,CAAE,SAAU,GAAM,UAAW,EAAM,CAC9C,CACF,CATSF,EAAAf,GAAA,yBAcT,eAAeQ,GAAmBjB,EAAUE,EAAmC,CAC7E,IAAMyB,EAAQ,OAAO,WAAW,EAC1BC,EAAY,KAAK,IAAI,EAAK,GAAK,GAAK,GAAK,IAG/C,aAAM5B,EAAI,SAAS,IACjB,eAAe2B,CAAK,GACpB,KAAK,UAAU,CAAE,SAAAzB,EAAU,UAAA0B,CAAU,CAAC,CACxC,EAEOD,CACT,CAXeH,EAAAP,GAAA,sBAgBf,eAAeG,GAAiBpB,EAAU6B,EAKvC,CAEI7B,EAAI,gBAET,MAAM,MAAM,gCAAiC,CAC3C,OAAQ,OACR,QAAS,CACP,cAAiB,UAAUA,EAAI,cAAc,GAC7C,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAU,CACnB,KAAM,4BACN,GAAI6B,EAAK,GACT,QAAS,cAAcA,EAAK,QAAQ,oBACpC,KAAM;AAAA;AAAA,+BAEmBA,EAAK,QAAQ;AAAA;AAAA;AAAA;AAAA,yBAInBA,EAAK,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAMKA,EAAK,SAAS,UAAU,EAAG,EAAE,CAAC;AAAA;AAAA;AAAA;AAAA,OAKrE,CAAC,CACH,CAAC,CACH,CAtCeL,EAAAJ,GAAA,oBC5OfU,IAAAC,IAAAC,IAAA,IAAMC,GAAU,IAAI,IAAY,CAC9B,iCACA,mCACA,mCAGA,0BACA,4BACA,2BACF,CAAC,EAEM,SAASC,GAAYC,EAAuB,CACjD,IAAMC,EAAI,IAAI,QACRC,EAAQF,GAAUF,GAAQ,IAAIE,CAAM,EAAIA,EAAS,GACvD,OAAIE,GAAOD,EAAE,IAAI,8BAA+BC,CAAK,EACrDD,EAAE,IAAI,OAAQ,QAAQ,EACtBA,EAAE,IAAI,+BAAgC,6BAA6B,EACnEA,EAAE,IAAI,+BAAgC,4BAA4B,EAClEA,EAAE,IAAI,yBAA0B,KAAK,EAC9BA,CACT,CATgBE,EAAAJ,GAAA,eAWT,SAASK,GAAYC,EAAc,CACxC,OAAOA,EAAI,SAAW,SACxB,CAFgBF,EAAAC,GAAA,eCtBhBE,IAAAC,IAAAC,ICAAC,IAAAC,IAAAC,IAAO,SAASC,EAAQC,EAQrB,CACD,QAAQ,IAAI,KAAK,UAAU,CAAE,EAAG,IAAI,KAAK,EAAE,YAAY,EAAG,GAAGA,CAAM,CAAC,CAAC,CACvE,CAVgBC,EAAAF,EAAA,WAYT,SAASG,IAAe,CAC7B,GAAI,CAAE,OAAO,OAAO,WAAW,CAAG,MAAQ,CAAE,OAAO,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,MAAM,CAAC,CAAG,CAC1F,CAFgBD,EAAAC,GAAA,gBDMhB,IAAMC,GAAgB,GAChBC,GAAiB,GACjBC,GAAgB,SAEtB,eAAsBC,GACpBC,EACAC,EACAC,EAA4B,CAAC,EACH,CAE1B,IADoBD,EAAI,aAAeA,EAAI,UAAY,iBACnC,aAClB,MAAO,CAAE,GAAI,EAAK,EAGpB,IAAME,EAAKF,EAAI,cACf,GAAI,CAACE,EACH,MAAO,CAAE,GAAI,EAAK,EAGpB,IAAMC,EAAQF,EAAQ,OAASN,GACzBS,EAAgBH,EAAQ,eAAiBL,GACzCS,EAAQJ,EAAQ,OAASJ,GACzBS,EAAYL,EAAQ,UACpBM,EAAON,EAAQ,MAAQ,IAAI,IAAIF,EAAQ,GAAG,EAAE,SAE5CS,EAAKT,EAAQ,QAAQ,IAAI,kBAAkB,GAAK,UAChDU,EAAM,MAAMJ,CAAK,IAAIG,CAAE,GAE7B,GAAI,CACF,IAAME,EAAS,MAAMR,EAAG,IAAIO,CAAG,EAC3BE,EAAYD,EAAS,OAAO,SAASA,EAAQ,EAAE,EAAIP,EAKvD,GAJK,OAAO,SAASQ,CAAS,IAC5BA,EAAYR,GAGVQ,GAAa,EAAG,CAClB,IAAMC,EAAaR,EACnB,OAAAS,EAAQ,CACN,MAAO,OACP,IAAK,eACL,KAAAN,EACA,UAAAD,EACA,OAAQ,GACV,CAAC,EACM,CAAE,GAAI,GAAO,UAAW,EAAG,MAAAH,EAAO,WAAAS,CAAW,CACtD,CAEA,IAAME,EAAgBH,EAAY,EAClC,aAAMT,EAAG,IAAIO,EAAK,OAAOK,CAAa,EAAG,CAAE,cAAeV,CAAc,CAAC,EAClE,CAAE,GAAI,GAAM,UAAWU,EAAe,MAAAX,CAAM,CACrD,MAAuB,CACrB,OAAAU,EAAQ,CACN,MAAO,QACP,IAAK,mBACL,OAAQ,IACR,KAAAN,EACA,UAAAD,CACF,CAAC,EACM,CAAE,GAAI,EAAK,CACpB,CACF,CAxDsBS,EAAAjB,GAAA,aEtBtBkB,IAAAC,IAAAC,IAQO,IAAMC,GAAN,cAAqC,KAAM,CARlD,MAQkD,CAAAC,EAAA,+BACvC,OACA,OAET,YAAYC,EAA2BC,EAAS,IAAK,CACnD,MAAM,iBAAiB,EACvB,KAAK,KAAO,yBACZ,KAAK,OAASA,EACd,KAAK,OAASD,CAChB,CACF,EAEO,SAASE,GAAkBC,EAAiD,CACjF,OACEA,aAAiBL,IAEf,OAAOK,GAAU,UACjBA,IAAU,MACV,WAAYA,GACZ,MAAM,QAASA,EAAiC,MAAM,GACtD,WAAYA,CAGlB,CAXgBJ,EAAAG,GAAA,qBAaT,SAASE,GAASC,EAAsBC,EAAmB,CAChE,IAAMC,EAASF,EAAO,UAAUC,CAAK,EACrC,GAAI,CAACC,EAAO,QAAS,CACnB,IAAMP,EAA4BO,EAAO,MAAM,OAAO,IAAKC,IAAW,CACpE,KAAMA,EAAM,KACZ,QAASA,EAAM,QACf,KAAMA,EAAM,IACd,EAAE,EACF,MAAM,IAAIV,GAAuBE,EAAQ,GAAG,CAC9C,CACA,OAAOO,EAAO,IAChB,CAXgBR,EAAAK,GAAA,SAgBT,SAASK,EAAKC,EAAWT,EAAiB,IAAKU,EAAiC,CACrF,IAAMC,EAAO,IAAI,QAAQD,GAAW,CAAC,CAAC,EACtC,OAAAC,EAAK,IAAI,eAAgB,kBAAkB,EACpC,IAAI,SAAS,KAAK,UAAUF,CAAI,EAAG,CAAE,OAAAT,EAAQ,QAASW,CAAK,CAAC,CACrE,CAJgBb,EAAAU,EAAA,QCjDhBI,IAAAC,IAAAC,IAEA,eAAsBC,IAAU,CAC9B,OAAO,SAAS,KAAK,CACnB,OAAQ,KACR,QAAS,YACT,GAAI,IAAI,KAAK,EAAE,YAAY,CAC7B,EAAG,CAAE,OAAQ,GAAI,CAAC,CACpB,CANsBC,EAAAD,GAAA,WAStB,eAAsBE,GAAOC,EAAe,CAC1C,OAAO,SAAS,KAAK,CACnB,OAAQ,QACR,QAAS,YACT,GAAI,IAAI,KAAK,EAAE,YAAY,CAC7B,EAAG,CAAE,OAAQ,GAAI,CAAC,CACpB,CANsBF,EAAAC,GAAA,UCXtBE,IAAAC,IAAAC,IAGAC,KAOA,IAAMC,GAAcC,EAAE,OAAO,CAC3B,SAAUA,EAAE,OAAO,EAAE,IAAI,EAAG,oBAAoB,EAChD,SAAUA,EAAE,OAAO,EAAE,IAAI,EAAG,oCAAoC,EAAE,MAAM,eAAgB,kDAAkD,EAC1I,MAAOA,EAAE,OAAO,EAAE,MAAM,sBAAsB,EAC9C,KAAMA,EAAE,KAAK,CAAC,UAAW,KAAK,CAAC,EAC/B,UAAWA,EAAE,OAAO,EAAE,SAAS,CACjC,CAAC,EAEKC,GAAcD,EAAE,OAAO,CAC3B,aAAcA,EAAE,OAAO,EAAE,MAAM,oBAAqB,yBAAyB,EAC7E,eAAgBA,EAAE,OAAO,EAAE,MAAM,oBAAqB,yBAAyB,CACjF,CAAC,EAEKE,GAAaF,EAAE,OAAO,CAC1B,WAAYA,EAAE,OAAO,EAAE,IAAI,EAC3B,cAAeA,EAAE,OAAO,EAAE,IAAI,GAAI,uCAAuC,CAC3E,CAAC,EAGD,eAAeG,GAAkBC,EAAUC,EAAiC,CAC1E,GAAI,CAEF,IAAMC,EAAa,MAAMC,GAAmBH,EAAK,EAAE,EAG7CI,EAAUJ,EAAI,aAAe,wBACnC,MAAM,MAAM,GAAGI,CAAO,4BAA6B,CACjD,OAAQ,OACR,QAAS,CACP,cAAiB,UAAUF,CAAU,GACrC,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAU,CAAE,SAAAD,CAAS,CAAC,CACnC,CAAC,EAED,QAAQ,IAAI,oCAAoCA,CAAQ,EAAE,CAC5D,OAASI,EAAO,CACd,QAAQ,MAAM,6CAA6CJ,CAAQ,IAAKI,CAAK,CAE/E,CACF,CArBeC,EAAAP,GAAA,qBAwBf,eAAsBQ,GAAYC,EAAcR,EAAUS,EAAmBC,EAAsC,CACjH,GAAI,CACF,IAAMC,EAAO,MAAMH,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCI,EAAOC,GAAMlB,GAAagB,CAAI,EAIpC,GADiB,MAAMX,EAAI,GAAG,QAAQ,uCAAuC,EAAE,KAAKY,EAAK,QAAQ,EAAE,MAAM,EAEvG,OAAOE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAAS,kCAAmC,CAAE,EAAG,IAAKJ,CAAQ,EAK3H,GADsB,MAAMV,EAAI,GAAG,QAAQ,wCAAwC,EAAE,KAAKY,EAAK,KAAK,EAAE,MAAM,EAE1G,OAAOE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,eAAgB,QAAS,kCAAmC,CAAE,EAAG,IAAKJ,CAAQ,EAI7H,IAAIK,EAAU,KACVC,EAAW,EACXC,EAAS,EAEb,GAAIL,EAAK,UAAW,CAClB,IAAMM,EAAQ,MAAMlB,EAAI,GAAG,QAAQ;AAAA;AAAA;AAAA;AAAA,OAIlC,EAAE,KAAKY,EAAK,SAAS,EAAE,MAAM,EAE9B,GAAI,CAACM,EACH,OAAOJ,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,gBAAiB,QAAS,oBAAqB,CAAE,EAAG,IAAKJ,CAAQ,EAIhH,GAAIQ,EAAM,aAAeA,EAAM,YAAc,KAAK,MAAM,KAAK,IAAI,EAAI,GAAI,EACvE,OAAOJ,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,gBAAiB,QAAS,wBAAyB,CAAE,EAAG,IAAKJ,CAAQ,EAIpH,GAAIQ,EAAM,UAAYA,EAAM,YAAcA,EAAM,SAC9C,OAAOJ,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,cAAe,QAAS,qCAAsC,CAAE,EAAG,IAAKJ,CAAQ,EAG/HK,EAAUG,EAAM,GAChBF,EAAWE,EAAM,iBAGbF,IAAa,MACfC,EAAS,EAEb,CAGA,IAAMhB,EAAW,UAAU,KAAK,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,UAAU,EAAG,CAAC,CAAC,GAG7EkB,EAAc,KAAK,MAAM,KAAK,IAAI,EAAI,GAAI,EAAK,GAAK,GAAK,GAAK,GAepE,GAZA,MAAMnB,EAAI,GAAG,QAAQ;AAAA;AAAA;AAAA,KAGpB,EAAE,KAAKC,EAAUW,EAAK,SAAUA,EAAK,SAAUA,EAAK,MAAOA,EAAK,KAAMK,EAAQE,CAAW,EAAE,IAAI,EAGhG,MAAMnB,EAAI,GAAG,QAAQ;AAAA;AAAA;AAAA,KAGpB,EAAE,KAAKC,CAAQ,EAAE,IAAI,EAGlBc,EAAS,CACX,IAAMK,EAAe,cAAc,KAAK,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,UAAU,EAAG,CAAC,CAAC,GAC3F,MAAMpB,EAAI,GAAG,QAAQ;AAAA;AAAA;AAAA,OAGpB,EAAE,KAAKoB,EAAcnB,EAAUc,CAAO,EAAE,IAAI,EAG7C,MAAMf,EAAI,GAAG,QAAQ;AAAA;AAAA,OAEpB,EAAE,KAAKe,CAAO,EAAE,IAAI,CACvB,CAGA,IAAMM,EAAM,MAAMC,GAAoBtB,EAAKC,EAAUW,EAAK,KAAK,EAE/D,OAAOE,EAAK,CACV,QAAS,GACT,OAAQ,CACN,GAAIb,EACJ,KAAMW,EAAK,SACX,KAAMA,EAAK,SACX,MAAOA,EAAK,MACZ,KAAMA,EAAK,KACX,OAAQ,QACR,OAAQK,IAAW,EACnB,YAAAE,CACF,EACA,SAAAH,EACA,IAAAK,CACF,EAAG,IAAKX,CAAQ,CAElB,OAASa,EAAU,CACjB,OAAIC,GAAkBD,CAAG,EAChBT,EAAK,CACV,QAAS,GACT,MAAO,CAAE,KAAM,kBAAmB,QAAS,oBAAqB,OAAQS,EAAI,MAAO,CACrF,EAAG,IAAKb,CAAQ,GAElBe,EAAQ,QAAShB,EAAW,CAAE,QAAS,qBAAsB,MAAOc,EAAI,OAAQ,CAAC,EAC1ET,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,gBAAiB,QAASS,EAAI,OAAQ,CAAE,EAAG,IAAKb,CAAQ,EACvG,CACF,CAjHsBJ,EAAAC,GAAA,eAoHtB,eAAsBmB,GAAYlB,EAAcR,EAAUS,EAAmBC,EAAsC,CACjH,GAAI,CACF,IAAMiB,EAAS,MAAMC,EAAWpB,EAAKR,CAAG,EAClCC,EAAW0B,EAAO,WAAaA,EAAO,SAEtChB,EAAO,MAAMH,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCI,EAAOC,GAAMhB,GAAac,CAAI,EAGpC,aAAMX,EAAI,GAAG,QAAQ;AAAA;AAAA;AAAA;AAAA,KAIpB,EAAE,KAAKY,EAAK,aAAcA,EAAK,eAAgBX,CAAQ,EAAE,IAAI,EAEvDa,EAAK,CAAE,QAAS,EAAK,EAAG,IAAKJ,CAAQ,CAE9C,OAASa,EAAU,CACjB,GAAIA,aAAe,SAAU,MAAMA,EACnC,OAAIC,GAAkBD,CAAG,EAChBT,EAAK,CACV,QAAS,GACT,MAAO,CAAE,KAAM,kBAAmB,QAAS,oBAAqB,OAAQS,EAAI,MAAO,CACrF,EAAG,IAAKb,CAAQ,GAElBe,EAAQ,QAAShB,EAAW,CAAE,QAAS,qBAAsB,MAAOc,EAAI,OAAQ,CAAC,EAC1ET,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,sBAAuB,QAASS,EAAI,OAAQ,CAAE,EAAG,IAAKb,CAAQ,EAC7G,CACF,CA5BsBJ,EAAAoB,GAAA,eA+BtB,eAAsBG,GAAkBrB,EAAcR,EAAUS,EAAmBC,EAAsC,CACvH,GAAI,CACF,IAAMiB,EAAS,MAAMC,EAAWpB,EAAKR,CAAG,EAClCC,EAAW0B,EAAO,WAAaA,EAAO,SAGtCG,EAAS,MAAM9B,EAAI,GAAG,QAAQ,uCAAuC,EAAE,KAAKC,CAAQ,EAAE,MAAM,EAClG,GAAI,CAAC6B,GAAUA,EAAO,OAAS,UAC7B,OAAOhB,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,gBAAiB,QAAS,wCAAyC,CAAE,EAAG,IAAKJ,CAAQ,EAGpI,IAAMC,EAAO,MAAMH,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCI,EAAOC,GAAMf,GAAYa,CAAI,EAG7BoB,EAAc,IAAI,IAAInB,EAAK,UAAU,EAAE,SAC7C,GAAI,CAACoB,GAAqBD,EAAa/B,CAAG,EACxC,OAAOc,EAAK,CACV,QAAS,GACT,MAAO,CAAE,KAAM,uBAAwB,QAAS,0BAA2B,CAC7E,EAAG,IAAKJ,CAAQ,EAIlB,IAAMuB,EAAS,QAAQ,KAAK,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,UAAU,EAAG,CAAC,CAAC,GAC/E,aAAMjC,EAAI,GAAG,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMpB,EAAE,KAAKiC,EAAQhC,EAAUW,EAAK,WAAYA,EAAK,aAAa,EAAE,IAAI,EAGnE,MAAMZ,EAAI,GAAG,QAAQ;AAAA;AAAA,KAEpB,EAAE,KAAKC,CAAQ,EAAE,IAAI,EAGtB,MAAMF,GAAkBC,EAAKC,CAAQ,EAE9Ba,EAAK,CAAE,QAAS,EAAK,EAAG,IAAKJ,CAAQ,CAE9C,OAASa,EAAU,CACjB,GAAIA,aAAe,SAAU,MAAMA,EACnC,OAAIC,GAAkBD,CAAG,EAChBT,EAAK,CACV,QAAS,GACT,MAAO,CAAE,KAAM,kBAAmB,QAAS,oBAAqB,OAAQS,EAAI,MAAO,CACrF,EAAG,IAAKb,CAAQ,GAElBe,EAAQ,QAAShB,EAAW,CAAE,QAAS,mBAAoB,MAAOc,EAAI,OAAQ,CAAC,EACxET,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,oBAAqB,QAASS,EAAI,OAAQ,CAAE,EAAG,IAAKb,CAAQ,EAC3G,CACF,CAtDsBJ,EAAAuB,GAAA,qBAyDtB,eAAsBK,GAAiB1B,EAAcR,EAAUS,EAAmBC,EAAsC,CACtH,GAAI,CACF,IAAMiB,EAAS,MAAMC,EAAWpB,EAAKR,CAAG,EAClCC,EAAW0B,EAAO,WAAaA,EAAO,SAGtCG,EAAS,MAAM9B,EAAI,GAAG,QAAQ,uCAAuC,EAAE,KAAKC,CAAQ,EAAE,MAAM,EAClG,GAAI,CAAC6B,GAAUA,EAAO,OAAS,MAC7B,OAAOhB,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,gBAAiB,QAAS,oCAAqC,CAAE,EAAG,IAAKJ,CAAQ,EAIhI,IAAMyB,EAAS,OAAO,KAAK,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,UAAU,EAAG,CAAC,CAAC,GAC9E,aAAMnC,EAAI,GAAG,QAAQ;AAAA;AAAA;AAAA;AAAA,KAIpB,EAAE,KAAKmC,EAAQlC,CAAQ,EAAE,IAAI,EAG9B,MAAMD,EAAI,GAAG,QAAQ;AAAA;AAAA,KAEpB,EAAE,KAAKC,CAAQ,EAAE,IAAI,EAGtB,MAAMF,GAAkBC,EAAKC,CAAQ,EAE9Ba,EAAK,CAAE,QAAS,EAAK,EAAG,IAAKJ,CAAQ,CAE9C,OAASa,EAAU,CACjB,GAAIA,aAAe,SAAU,MAAMA,EACnC,OAAAE,EAAQ,QAAShB,EAAW,CAAE,QAAS,oBAAqB,MAAOc,EAAI,OAAQ,CAAC,EACzET,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,qBAAsB,QAASS,EAAI,OAAQ,CAAE,EAAG,IAAKb,CAAQ,CAC5G,CACF,CAlCsBJ,EAAA4B,GAAA,oBCjQtBE,IAAAC,IAAAC,IAMA,eAAsBC,GAAiBC,EAAcC,EAA6B,CAChF,IAAMC,EAAO,MAAMF,EAAI,KAAK,EAAE,MAAM,KAAK,CAAC,EAAE,EACtCG,GAASD,EAAK,OAAS,IAAI,SAAS,EAAE,KAAK,EAAE,YAAY,EACzDE,GAAYF,EAAK,UAAY,IAAI,SAAS,EAAE,KAAK,EACvD,GAAI,CAACC,GAAS,CAACC,EAAU,OAAOC,EAAK,CAAE,QAAQ,GAAO,MAAM,6BAA8B,EAAG,GAAG,EAGhG,IAAMC,EAAM,KAAK,MAAM,KAAK,IAAI,EAAE,GAAI,EAChCC,EAAQ,MAAM,IAAIC,GAAQ,CAAE,KAAK,aAAc,MAAM,CAAC,QAAQ,OAAO,EAAG,SAAAJ,CAAS,CAAC,EACrF,mBAAmB,CAAE,IAAI,QAAS,IAAI,KAAM,CAAC,EAC7C,UAAUH,EAAI,YAAc,YAAY,EACxC,YAAY,cAAc,EAC1B,WAAWE,CAAK,EAChB,YAAYG,CAAG,EACf,kBAAkBA,EAAM,GAAG,IAAI,EAC/B,KAAK,IAAI,YAAY,EAAE,OAAOL,EAAI,UAAU,CAAC,EAE1CQ,EAAO,GAAGR,EAAI,iBAAiB,wBAAwBM,CAAK,GAElE,eAAQ,IAAI,oBAAoBJ,CAAK,KAAKM,CAAI,EAAE,EAEzCJ,EAAK,CAAE,QAAQ,EAAK,CAAC,CAC9B,CAtBsBK,EAAAX,GAAA,oBAyBtB,eAAsBY,GAAkBX,EAAcC,EAA6B,CACjF,IAAMM,EAAQ,IAAI,IAAIP,EAAI,GAAG,EAAE,aAAa,IAAI,OAAO,GAAK,GAC5D,GAAI,CAACO,EAAO,OAAOF,EAAK,CAAE,QAAQ,GAAO,MAAM,gBAAiB,EAAG,GAAG,EAEtE,GAAM,CAAE,QAAAO,CAAQ,EAAI,MAAMC,GAAUN,EAAO,IAAI,YAAY,EAAE,OAAON,EAAI,UAAU,EAAG,CACnF,OAAQA,EAAI,YAAc,aAC1B,SAAU,eACV,eAAgB,EAClB,CAAC,EAGKK,EAAM,KAAK,MAAM,KAAK,IAAI,EAAE,GAAI,EAChCQ,EAAU,MAAM,IAAIN,GAAQ,CAChC,MAAO,CAAC,QAAQ,OAAO,EACvB,SAAUI,EAAQ,QACpB,CAAC,EACE,mBAAmB,CAAE,IAAI,QAAS,IAAI,KAAM,CAAC,EAC7C,UAAUX,EAAI,YAAc,YAAY,EACxC,YAAY,cAAc,EAC1B,WAAWW,EAAQ,GAAa,EAChC,YAAYN,CAAG,EACf,kBAAkBA,EAAM,EAAE,GAAG,IAAI,EACjC,KAAK,IAAI,YAAY,EAAE,OAAOL,EAAI,UAAU,CAAC,EAE1Cc,EAAO,IAAI,QAAQ,CAAE,eAAgB,kBAAmB,CAAC,EAE/D,OAAAA,EAAK,OAAO,aAAc,iBAAiBD,CAAO,qDAAqD,EAAE,GAAG,IAAI,EAAE,EAC3G,IAAI,SAAS,KAAK,UAAU,CAAE,QAAQ,GAAM,SAAUF,EAAQ,QAAS,CAAC,EAAG,CAAE,OAAO,IAAK,QAASG,CAAK,CAAC,CACjH,CA5BsBL,EAAAC,GAAA,qBC/BtBK,IAAAC,IAAAC,IAcA,eAAsBC,GACpBC,EACAC,EACmB,CACnB,GAAI,CAEF,IAAMC,EAAaF,EAAQ,QAAQ,IAAI,eAAe,EACtD,GAAI,CAACE,GAAc,CAACA,EAAW,WAAW,SAAS,EACjD,OAAO,SAAS,KAAK,CACnB,QAAS,GACT,MAAO,CAAE,KAAM,eAAgB,QAAS,gCAAiC,CAC3E,EAAG,CAAE,OAAQ,GAAI,CAAC,EAGpB,IAAMC,EAAQD,EAAW,UAAU,CAAC,EAGpC,GAAI,CAFY,MAAME,GAAiBH,EAAKE,CAAK,EAG/C,OAAO,SAAS,KAAK,CACnB,QAAS,GACT,MAAO,CAAE,KAAM,gBAAiB,QAAS,uBAAwB,CACnE,EAAG,CAAE,OAAQ,GAAI,CAAC,EAIpB,IAAME,EAAO,MAAML,EAAQ,KAA2B,EAEtD,GAAI,CAACK,EAAK,SACR,OAAO,SAAS,KAAK,CACnB,QAAS,GACT,MAAO,CAAE,KAAM,oBAAqB,QAAS,uBAAwB,CACvE,EAAG,CAAE,OAAQ,GAAI,CAAC,EAIpB,IAAMC,EAAS,MAAML,EAAI,GAAG,QAC1B,2CACF,EAAE,KAAKI,EAAK,QAAQ,EAAE,MAAoC,EAE1D,GAAI,CAACC,EACH,OAAO,SAAS,KAAK,CACnB,QAAS,GACT,MAAO,CAAE,KAAM,mBAAoB,QAAS,kBAAmB,CACjE,EAAG,CAAE,OAAQ,GAAI,CAAC,EAIpB,IAAMC,EAAgBN,EAAI,YAAY,WAAWK,EAAO,EAAE,EACpDE,EAAcP,EAAI,YAAY,IAAIM,CAAa,EAGrD,MAAMC,EAAY,MAAM,IAAI,QAAQ,4BAA6B,CAC/D,OAAQ,OACR,QAAS,CAAE,eAAgB,kBAAmB,EAC9C,KAAM,KAAK,UAAU,CACnB,SAAUF,EAAO,GACjB,KAAMA,EAAO,IACf,CAAC,CACH,CAAC,CAAC,EAYF,IAAMG,EAAS,MATE,MAAMD,EAAY,MAAM,IAAI,QAAQ,0BAA2B,CAC9E,OAAQ,OACR,QAAS,CAAE,eAAgB,kBAAmB,EAC9C,KAAM,KAAK,UAAU,CACnB,SAAUF,EAAO,GACjB,KAAMA,EAAO,IACf,CAAC,CACH,CAAC,CAAC,GAE4B,KAI3B,EAEH,OAAO,SAAS,KAAKG,CAAM,CAC7B,OAASC,EAAO,CACd,eAAQ,MAAM,2BAA4BA,CAAK,EACxC,SAAS,KAAK,CACnB,QAAS,GACT,MAAO,CACL,KAAM,cACN,QAASA,aAAiB,MAAQA,EAAM,QAAU,OAAOA,CAAK,CAChE,CACF,EAAG,CAAE,OAAQ,GAAI,CAAC,CACpB,CACF,CAvFsBC,EAAAZ,GAAA,wBA8FtB,eAAsBa,GACpBZ,EACAC,EACAY,EACmB,CACnB,GAAI,CAEF,IAAMP,EAAS,MAAML,EAAI,GAAG,QAC1B,mEACF,EAAE,KAAKY,CAAQ,EAAE,MAKd,EAEH,GAAI,CAACP,EACH,OAAO,SAAS,KAAK,CACnB,QAAS,GACT,MAAO,CAAE,KAAM,mBAAoB,QAAS,kBAAmB,CACjE,EAAG,CAAE,OAAQ,GAAI,CAAC,EAIpB,IAAMC,EAAgBN,EAAI,YAAY,WAAWK,EAAO,EAAE,EAQpDG,EAAS,MAJE,MAHGR,EAAI,YAAY,IAAIM,CAAa,EAGlB,MACjC,IAAI,QAAQ,uCAAuCD,EAAO,EAAE,SAASA,EAAO,IAAI,EAAE,CACpF,GAE8B,KAY3B,EAEH,MAAI,CAACG,EAAO,SAAW,CAACA,EAAO,MACtB,SAAS,KAAK,CACnB,QAAS,GACT,KAAM,CACJ,OAAQH,EAAO,eAAiB,YAAc,UAC9C,KAAM,KACN,YAAa,CAAC,CAChB,CACF,CAAC,EAGI,SAAS,KAAK,CACnB,QAAS,GACT,KAAM,CACJ,OAAQG,EAAO,MAAM,OACrB,YAAaA,EAAO,MAAM,YAC1B,YAAaA,EAAO,MAAM,YAC1B,MAAOA,EAAO,MAAM,KACtB,CACF,CAAC,CACH,OAASC,EAAO,CACd,eAAQ,MAAM,4BAA6BA,CAAK,EACzC,SAAS,KAAK,CACnB,QAAS,GACT,MAAO,CACL,KAAM,eACN,QAASA,aAAiB,MAAQA,EAAM,QAAU,OAAOA,CAAK,CAChE,CACF,EAAG,CAAE,OAAQ,GAAI,CAAC,CACpB,CACF,CA5EsBC,EAAAC,GAAA,yBAmFtB,eAAsBE,GACpBd,EACAC,EACAY,EACmB,CACnB,GAAI,CAEF,IAAMP,EAAS,MAAML,EAAI,GAAG,QAC1B;AAAA;AAAA;AAAA,sBAIF,EAAE,KAAKY,CAAQ,EAAE,MAcd,EAEH,GAAI,CAACP,EACH,OAAO,SAAS,KAAK,CACnB,QAAS,GACT,MAAO,CAAE,KAAM,mBAAoB,QAAS,kBAAmB,CACjE,EAAG,CAAE,OAAQ,GAAI,CAAC,EAIpB,IAAMS,EAAe,IAAI,KAAK,EAAE,YAAY,EAAE,UAAU,EAAG,CAAC,EAMtDC,GALQ,MAAMf,EAAI,GAAG,QACzB;AAAA,yCAEF,EAAE,KAAKY,EAAUE,CAAY,EAAE,MAAgC,IAEpC,cAAgB,EACrCE,EAAQX,EAAO,OAAS,WAAaA,EAAO,SAAW,EAAI,IAAO,KAGlEY,EAAgB,MAAMjB,EAAI,GAAG,QACjC,4DACF,EAAE,KAAKY,CAAQ,EAAE,MAAyB,EAGpCM,EAAe,MAAMlB,EAAI,GAAG,QAChC,2DACF,EAAE,KAAKY,CAAQ,EAAE,MAAyB,EAGpCO,EAAa,MAAMnB,EAAI,GAAG,QAC9B,8DACF,EAAE,KAAKY,CAAQ,EAAE,MAAyB,EAGtCQ,EAAiB,KACjBf,EAAO,OAAS,YAClBe,EAAiB,MAAMpB,EAAI,GAAG,QAC5B;AAAA,mDAEF,EAAE,KAAKY,CAAQ,EAAE,MAKd,GAIL,IAAIS,EAAgB,KACpB,OAAIhB,EAAO,OAAS,QAClBgB,EAAgB,MAAMrB,EAAI,GAAG,QAC3B;AAAA,iDAEF,EAAE,KAAKY,CAAQ,EAAE,MAMd,GAGE,SAAS,KAAK,CACnB,QAAS,GACT,KAAM,CACJ,OAAQ,CACN,GAAIP,EAAO,GACX,KAAMA,EAAO,KACb,KAAMA,EAAO,KACb,MAAOA,EAAO,MACd,KAAMA,EAAO,KACb,OAAQA,EAAO,OACf,OAAQA,EAAO,SAAW,EAC1B,YAAaA,EAAO,cACpB,UAAWA,EAAO,WAClB,cAAeA,EAAO,cACxB,EACA,MAAO,CACL,aAAcA,EAAO,cACrB,eAAgBA,EAAO,gBACvB,SAAUA,EAAO,SACnB,EACA,MAAO,CACL,YAAAU,EACA,MAAAC,EACA,UAAWA,EAAQ,KAAK,IAAI,EAAGA,EAAQD,CAAW,EAAI,KACtD,YAAaC,EAAQ,KAAK,IAAI,IAAK,KAAK,MAAOD,EAAcC,EAAS,GAAG,CAAC,EAAI,CAChF,EACA,MAAO,CACL,cAAeC,GAAe,OAAS,EACvC,aAAcC,GAAc,OAAS,EACrC,WAAYC,GAAY,OAAS,CACnC,EACA,WAAYd,EAAO,OAAS,UAAYe,EAAiBC,CAC3D,CACF,CAAC,CACH,OAASZ,EAAO,CACd,eAAQ,MAAM,2BAA4BA,CAAK,EACxC,SAAS,KAAK,CACnB,QAAS,GACT,MAAO,CACL,KAAM,iBACN,QAASA,aAAiB,MAAQA,EAAM,QAAU,OAAOA,CAAK,CAChE,CACF,EAAG,CAAE,OAAQ,GAAI,CAAC,CACpB,CACF,CArIsBC,EAAAG,GAAA,wBA4ItB,eAAsBS,GACpBvB,EACAC,EACmB,CACnB,GAAI,CAEF,IAAMC,EAAaF,EAAQ,QAAQ,IAAI,eAAe,EACtD,GAAI,CAACE,GAAc,CAACA,EAAW,WAAW,SAAS,EACjD,OAAO,SAAS,KAAK,CACnB,QAAS,GACT,MAAO,CAAE,KAAM,eAAgB,QAAS,gCAAiC,CAC3E,EAAG,CAAE,OAAQ,GAAI,CAAC,EAGpB,IAAMC,EAAQD,EAAW,UAAU,CAAC,EAGpC,GAAI,CAFY,MAAME,GAAiBH,EAAKE,CAAK,EAG/C,OAAO,SAAS,KAAK,CACnB,QAAS,GACT,MAAO,CAAE,KAAM,gBAAiB,QAAS,uBAAwB,CACnE,EAAG,CAAE,OAAQ,GAAI,CAAC,EAIpB,IAAME,EAAO,MAAML,EAAQ,KAA2B,EAEtD,GAAI,CAACK,EAAK,SACR,OAAO,SAAS,KAAK,CACnB,QAAS,GACT,MAAO,CAAE,KAAM,oBAAqB,QAAS,uBAAwB,CACvE,EAAG,CAAE,OAAQ,GAAI,CAAC,EAIpB,IAAMC,EAAS,MAAML,EAAI,GAAG,QAC1B,2CACF,EAAE,KAAKI,EAAK,QAAQ,EAAE,MAAoC,EAE1D,GAAI,CAACC,EACH,OAAO,SAAS,KAAK,CACnB,QAAS,GACT,MAAO,CAAE,KAAM,mBAAoB,QAAS,kBAAmB,CACjE,EAAG,CAAE,OAAQ,GAAI,CAAC,EAIpB,IAAMC,EAAgBN,EAAI,YAAY,WAAWK,EAAO,EAAE,EACpDE,EAAcP,EAAI,YAAY,IAAIM,CAAa,EAGrD,MAAMC,EAAY,MAAM,IAAI,QAAQ,4BAA6B,CAC/D,OAAQ,OACR,QAAS,CAAE,eAAgB,kBAAmB,EAC9C,KAAM,KAAK,UAAU,CACnB,SAAUF,EAAO,GACjB,KAAMA,EAAO,IACf,CAAC,CACH,CAAC,CAAC,EAYF,IAAMG,EAAS,MATE,MAAMD,EAAY,MAAM,IAAI,QAAQ,0BAA2B,CAC9E,OAAQ,OACR,QAAS,CAAE,eAAgB,kBAAmB,EAC9C,KAAM,KAAK,UAAU,CACnB,SAAUF,EAAO,GACjB,KAAMA,EAAO,IACf,CAAC,CACH,CAAC,CAAC,GAE4B,KAI3B,EAEH,OAAO,SAAS,KAAKG,CAAM,CAC7B,OAASC,EAAO,CACd,eAAQ,MAAM,2BAA4BA,CAAK,EACxC,SAAS,KAAK,CACnB,QAAS,GACT,MAAO,CACL,KAAM,cACN,QAASA,aAAiB,MAAQA,EAAM,QAAU,OAAOA,CAAK,CAChE,CACF,EAAG,CAAE,OAAQ,GAAI,CAAC,CACpB,CACF,CAvFsBC,EAAAY,GAAA,wBC3UtBC,IAAAC,IAAAC,IAAO,IAAMC,GAAN,KAAwB,CAA/B,MAA+B,CAAAC,EAAA,0BAC7B,MAA2B,QAC3B,YAAYC,EAA2B,CAAE,KAAK,MAAQA,EAAO,KAAK,QAAUA,EAAM,OAAS,CAE3F,MAAM,MAAMC,EAAiC,CAC3C,IAAMC,EAAM,IAAI,IAAID,EAAI,GAAG,EAC3B,GAAIC,EAAI,WAAa,SAAU,OAAO,IAAI,SAAS,YAAa,CAAE,OAAQ,GAAI,CAAC,EAE/E,IAAMC,EAASD,EAAI,aAAa,IAAI,QAAQ,GAAK,OAC3CE,EAAM,KAAK,IAAI,EAASC,EAAW,IAAYC,EAAQ,EACvDC,EAAM,MAAMJ,CAAM,IAAI,KAAK,MAAMC,EAAMC,CAAQ,CAAC,GAClDG,EAAQ,MAAM,KAAK,QAAQ,IAAYD,CAAG,GAAM,EAEpD,OAAIC,EAAOF,GACT,MAAM,KAAK,QAAQ,IAAIC,EAAKC,EAAO,EAAG,CAAE,WAAY,KAAK,OAAOJ,EAAMC,GAAU,GAAI,CAAE,CAAC,EAChF,IAAI,SAAS,KAAK,UAAU,CAAE,GAAI,EAAK,CAAC,EAAG,CAChD,QAAS,CACP,oBAAqB,OAAOC,CAAK,EACjC,wBAAyB,OAAOA,GAAOE,EAAK,EAAE,EAC9C,oBAAqB,GACvB,CACF,CAAC,GAGI,IAAI,SAAS,KAAK,UAAU,CAAE,GAAI,EAAM,CAAC,EAAG,CACjD,OAAQ,IACR,QAAS,CACP,oBAAqB,OAAOF,CAAK,EACjC,wBAAyB,IACzB,oBAAqB,GACvB,CACF,CAAC,CACH,CACF,ECjCAG,IAAAC,IAAAC,IAkBO,IAAMC,GAAN,KAAiB,CAlBxB,MAkBwB,CAAAC,EAAA,mBACtB,MACA,IACA,SAA4B,KAE5B,YAAYC,EAA2BC,EAAU,CAC/C,KAAK,MAAQD,EACb,KAAK,IAAMC,CACb,CAGQ,QAAQC,EAAgBC,EAAiB,CAC/C,MAAO,WAAWD,CAAM,SAASC,CAAO,WAC1C,CACQ,QAAS,CACf,GAAI,CAAC,KAAK,SAAU,MAAM,IAAI,MAAM,sBAAsB,CAC5D,CAGA,MAAc,KAAKD,EAAgBC,EAAiB,CAClD,IAAMC,EAAQ,MAAM,KAAK,MAAM,QAAQ,IAAc,UAAU,EAC/D,GAAIA,EAAO,CAAE,KAAK,SAAWA,EAAO,MAAQ,CAC5C,IAAMC,EAAS,MAAM,KAAK,IAAI,SAAS,IAAI,KAAK,QAAQH,EAAQC,CAAO,EAAG,MAAM,EAC5EE,IACF,MAAM,KAAK,MAAM,QAAQ,IAAI,WAAYA,CAAM,EAC/C,KAAK,SAAWA,EAEpB,CAEA,MAAc,MAAO,CACnB,KAAK,OAAO,EACZ,KAAK,SAAU,UAAY,KAAK,IAAI,EACpC,MAAM,KAAK,MAAM,QAAQ,IAAI,WAAY,KAAK,QAAQ,CACxD,CAEA,MAAc,WAAY,CACxB,KAAK,OAAO,EACZ,GAAM,CAAE,OAAAH,EAAQ,QAAAC,CAAQ,EAAI,KAAK,SAAU,SAC3C,MAAM,KAAK,IAAI,SAAS,IAAI,KAAK,QAAQD,EAAQC,CAAO,EAAG,KAAK,UAAU,KAAK,QAAQ,CAAC,CAC1F,CAGA,MAAM,KAAKG,EAA2D,CACpE,MAAM,KAAK,KAAKA,EAAS,OAAQA,EAAS,OAAO,EACjD,IAAMC,EAA6B,CACjC,OAAQD,EAAS,OACjB,QAASA,EAAS,QAClB,KAAM,GACN,WAAYA,EAAS,YAAc,CAAC,EACpC,gBAAiBA,EAAS,iBAAmB,CAC/C,EACA,YAAK,SAAW,CACd,SAAUC,EACV,OAAQ,OAAO,aAAaA,EAAa,YAAc,CAAC,GAAG,IAAIC,GAAK,CAACA,EAAE,GAAI,CAAC,CAAC,CAAC,EAC9E,MAAO,CAAC,EACR,UAAW,KAAK,IAAI,CACtB,EACA,MAAM,KAAK,KAAK,EAChB,MAAM,KAAK,UAAU,EACd,CAAE,GAAI,EAAK,CACpB,CAEA,MAAM,KAAKC,EAAqBC,EAAkB,CAEhD,GADA,KAAK,OAAO,EACR,CAAC,KAAK,SAAU,SAAS,KAAM,MAAM,IAAI,MAAM,eAAe,EAClE,GAAI,KAAK,SAAU,MAAMA,CAAQ,EAAG,MAAM,IAAI,MAAM,eAAe,EAEnE,GAAI,EAAED,KAAe,KAAK,SAAU,QAAS,MAAM,IAAI,MAAM,mBAAmB,EAGhF,IAAME,EAAQ,KAAK,SAAU,SAAS,iBAAmB,EAMzD,KAAK,SAAU,OAAOF,CAAW,GAAK,EACtC,KAAK,SAAU,MAAMC,CAAQ,EAAI,GAEjC,MAAM,KAAK,KAAK,EAEhB,MAAM,KAAK,MAAM,QAAQ,IAAI,YAAa,KAAK,IAAI,CAAC,EACpD,IAAME,EAAa,MAAM,KAAK,MAAM,QAAQ,IAAY,aAAa,GAAM,EAC3E,OAAI,KAAK,IAAI,EAAIA,EAAY,MAC3B,MAAM,KAAK,UAAU,EACrB,MAAM,KAAK,MAAM,QAAQ,IAAI,cAAe,KAAK,IAAI,CAAC,GAEjD,CAAE,GAAI,EAAK,CACpB,CAEA,MAAM,OAAQ,CACZ,YAAK,OAAO,EACL,CACL,KAAM,KAAK,SAAU,SAAS,KAC9B,WAAY,KAAK,SAAU,SAAS,WACpC,OAAQ,KAAK,SAAU,OACvB,UAAW,KAAK,SAAU,SAC5B,CACF,CAEA,MAAM,OAAQ,CACZ,YAAK,OAAO,EACZ,KAAK,SAAU,SAAS,KAAO,GAC/B,MAAM,KAAK,KAAK,EAChB,MAAM,KAAK,UAAU,EACd,CAAE,GAAI,EAAK,CACpB,CAGA,MAAM,MAAMC,EAAc,CACxB,IAAMC,EAAM,IAAI,IAAID,EAAI,GAAG,EAC3B,GAAIA,EAAI,SAAW,QAAUC,EAAI,SAAS,SAAS,OAAO,EAAG,CAC3D,IAAMC,EAAI,MAAMF,EAAI,KAAK,EACzB,OAAO,SAAS,KAAK,MAAM,KAAK,KAAKE,CAAC,CAAC,CACzC,CACA,GAAIF,EAAI,SAAW,QAAUC,EAAI,SAAS,SAAS,OAAO,EAAG,CAC3D,GAAM,CAAE,YAAAL,EAAa,SAAAC,CAAS,EAAI,MAAMG,EAAI,KAAK,EACjD,OAAO,SAAS,KAAK,MAAM,KAAK,KAAKJ,EAAaC,CAAQ,CAAC,CAC7D,CACA,OAAIG,EAAI,SAAW,OAASC,EAAI,SAAS,SAAS,QAAQ,EACjD,SAAS,KAAK,MAAM,KAAK,MAAM,CAAC,EAErCD,EAAI,SAAW,QAAUC,EAAI,SAAS,SAAS,QAAQ,EAClD,SAAS,KAAK,MAAM,KAAK,MAAM,CAAC,EAElC,IAAI,SAAS,YAAa,CAAE,OAAQ,GAAI,CAAC,CAClD,CACF,ECjJAE,IAAAC,IAAAC,IA0BO,IAAMC,GAAN,KAAgB,CA1BvB,MA0BuB,CAAAC,EAAA,kBACrB,MACA,IACA,WAAgC,KAChC,WAAqB,EAErB,YAAYC,EAA2BC,EAAU,CAC/C,KAAK,MAAQD,EACb,KAAK,IAAMC,CACb,CAEQ,QAAQC,EAAgBC,EAAiB,CAC/C,MAAO,WAAWD,CAAM,YAAYC,CAAO,OAC7C,CAEA,MAAc,KAAKD,EAAgBC,EAAiB,CAClD,IAAMC,EAAQ,MAAM,KAAK,MAAM,QAAQ,IAAgB,OAAO,EAC9D,GAAIA,EAAO,CACT,KAAK,WAAaA,EAClB,MACF,CACA,IAAMC,EAAU,MAAM,KAAK,IAAI,SAAS,IAAI,KAAK,QAAQH,EAAQC,CAAO,EAAG,MAAM,EAC7EE,IACF,MAAM,KAAK,MAAM,QAAQ,IAAI,QAASA,CAAM,EAC5C,KAAK,WAAaA,EAEtB,CAEA,MAAc,MAAO,CACnB,GAAI,CAAC,KAAK,WAAY,MAAM,IAAI,MAAM,uBAAuB,EAC7D,KAAK,WAAW,UAAY,KAAK,IAAI,EACrC,MAAM,KAAK,MAAM,QAAQ,IAAI,QAAS,KAAK,UAAU,CACvD,CAEA,MAAc,WAAY,CACxB,GAAI,CAAC,KAAK,WAAY,OACtB,GAAM,CAAE,OAAAH,EAAQ,QAAAC,CAAQ,EAAI,KAAK,WACjC,MAAM,KAAK,IAAI,SAAS,IAAI,KAAK,QAAQD,EAAQC,CAAO,EAAG,KAAK,UAAU,KAAK,UAAU,CAAC,CAC5F,CAEA,MAAc,UAAUG,EAAmBC,EAAc,CACvD,GAAI,CAAC,KAAK,WAAY,OACtB,IAAMC,EAAM,KAAK,IAAI,EAErB,GAAIF,IAAc,QAAUE,EAAM,KAAK,WAAa,KAAO,CACzD,KAAK,WAAaA,EAElB,GAAI,CACF,IAAMC,EAAY,WAAW,KAAK,WAAW,MAAM,eAC7CC,EAAW,MAAM,KAAK,IAAI,SAAS,IAAID,EAAW,MAAM,GAAmB,CAAC,EAC9EC,EAAO,OAAS,GAGlB,QAAQ,IAAI,6BAA6BA,EAAO,MAAM,YAAYH,CAAI,EAAE,CAE5E,OAASI,EAAG,CACV,QAAQ,MAAM,0BAA2BA,CAAC,CAC5C,CACF,CACF,CAEA,MAAM,KAAKC,EAA6G,CACtH,aAAM,KAAK,KAAKA,EAAK,OAAQA,EAAK,OAAO,EACzC,KAAK,WAAa,CAChB,OAAQA,EAAK,OACb,QAASA,EAAK,QACd,MAAOA,EAAK,MACZ,KAAMA,EAAK,KACX,KAAMA,EAAK,KACX,UAAWA,EAAK,UAChB,SAAU,CAAC,EACX,UAAW,EACX,UAAW,EACX,OAAQ,GACR,UAAW,KAAK,IAAI,CACtB,EACA,MAAM,KAAK,KAAK,EAChB,MAAM,KAAK,UAAU,EACd,CAAE,GAAI,EAAK,CACpB,CAEA,MAAM,MAAMC,EAAoC,CAC9C,GAAI,CAAC,KAAK,WAAY,MAAM,IAAI,MAAM,uBAAuB,EAC7D,GAAI,KAAK,WAAW,OAAQ,MAAM,IAAI,MAAM,cAAc,EAE1D,IAAMC,EAAK,OAAO,KAAK,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,MAAM,EAAG,CAAC,CAAC,GAChEC,EAAK,KAAK,IAAI,EACdC,EAAwB,CAAE,GAAAF,EAAI,GAAAC,EAAI,GAAGF,CAAI,EAG3CA,EAAI,OAAS,QAAUA,EAAI,SAAS,OAClCA,EAAI,QAAQ,OAAS,OAAQ,KAAK,WAAW,YACxCA,EAAI,QAAQ,OAAS,QAAQ,KAAK,WAAW,aAGxD,KAAK,WAAW,SAAS,KAAKG,CAAS,EACvC,MAAM,KAAK,KAAK,EAGhB,IAAMC,EAAe,MAAM,KAAK,MAAM,QAAQ,IAAY,aAAa,GAAM,EACzEF,EAAKE,EAAc,MACrB,MAAM,KAAK,UAAU,EACrB,MAAM,KAAK,MAAM,QAAQ,IAAI,cAAeF,CAAE,GAIhD,IAAIG,EAAW,gBAAgBL,EAAI,IAAI,GACvC,OAAIA,EAAI,OAAS,QAAUA,EAAI,SAAS,SACtCK,EAAW,gBAAWL,EAAI,QAAQ,MAAM,KAAKA,EAAI,MAAM,MAEzD,MAAM,KAAK,UAAUA,EAAI,KAAMK,CAAQ,EAEhC,CAAE,GAAI,GAAM,QAASJ,CAAG,CACjC,CAEA,MAAM,OAAQ,CACZ,GAAI,CAAC,KAAK,WAAY,MAAM,IAAI,MAAM,uBAAuB,EAC7D,MAAO,CACL,GAAI,GACJ,KAAM,CACJ,QAAS,KAAK,WAAW,QACzB,MAAO,KAAK,WAAW,MACvB,KAAM,KAAK,WAAW,KACtB,KAAM,KAAK,WAAW,KACtB,UAAW,KAAK,WAAW,UAC3B,UAAW,KAAK,WAAW,UAC3B,SAAU,KAAK,WAAW,SAC1B,OAAQ,KAAK,WAAW,OACxB,UAAW,KAAK,WAAW,SAC7B,CACF,CACF,CAEA,MAAM,OAAQ,CACZ,GAAI,CAAC,KAAK,WAAY,MAAM,IAAI,MAAM,uBAAuB,EAC7D,YAAK,WAAW,OAAS,GACzB,MAAM,KAAK,KAAK,EAChB,MAAM,KAAK,UAAU,EACd,CAAE,GAAI,EAAK,CACpB,CAEA,MAAM,MAAMK,EAAc,CACxB,IAAMC,EAAM,IAAI,IAAID,EAAI,GAAG,EAC3B,GAAIA,EAAI,SAAW,QAAUC,EAAI,SAAS,SAAS,OAAO,EAAG,CAC3D,IAAMC,EAAQ,MAAMF,EAAI,KAAK,EAC7B,OAAO,SAAS,KAAK,MAAM,KAAK,KAAKE,CAAI,CAAC,CAC5C,CACA,GAAIF,EAAI,SAAW,QAAUC,EAAI,SAAS,SAAS,QAAQ,EAAG,CAC5D,IAAMC,EAAQ,MAAMF,EAAI,KAAK,EAC7B,OAAO,SAAS,KAAK,MAAM,KAAK,MAAME,CAAI,CAAC,CAC7C,CACA,OAAIF,EAAI,SAAW,OAASC,EAAI,SAAS,SAAS,QAAQ,EACjD,SAAS,KAAK,MAAM,KAAK,MAAM,CAAC,EAErCD,EAAI,SAAW,QAAUC,EAAI,SAAS,SAAS,QAAQ,EAClD,SAAS,KAAK,MAAM,KAAK,MAAM,CAAC,EAElC,IAAI,SAAS,YAAa,CAAE,OAAQ,GAAI,CAAC,CAClD,CACF,ECzLAE,IAAAC,IAAAC,IAkBO,IAAMC,GAAN,KAAe,CAlBtB,MAkBsB,CAAAC,EAAA,iBACpB,MACA,IACA,UAA8B,KAC9B,YAAmC,IAAI,IAEvC,YAAYC,EAA2BC,EAAU,CAC/C,KAAK,MAAQD,EACb,KAAK,IAAMC,CACb,CAEQ,QAAQC,EAAgBC,EAAgB,CAC9C,MAAO,WAAWD,CAAM,SAASC,CAAM,OACzC,CAEQ,SAASD,EAAgB,CAC/B,MAAO,WAAWA,CAAM,aAC1B,CAEA,MAAc,KAAKA,EAAgBC,EAAgB,CACjD,IAAMC,EAAQ,MAAM,KAAK,MAAM,QAAQ,IAAe,OAAO,EAC7D,GAAIA,EAAO,CACT,KAAK,UAAYA,EACjB,MACF,CACA,IAAMC,EAAU,MAAM,KAAK,IAAI,SAAS,IAAI,KAAK,QAAQH,EAAQC,CAAM,EAAG,MAAM,EAC5EE,GACF,MAAM,KAAK,MAAM,QAAQ,IAAI,QAASA,CAAM,EAC5C,KAAK,UAAYA,IAGjB,KAAK,UAAY,CACf,OAAAH,EACA,OAAAC,EACA,SAAU,CAAC,EACX,UAAW,KAAK,IAAI,CACtB,EACA,MAAM,KAAK,MAAM,QAAQ,IAAI,QAAS,KAAK,SAAS,EAExD,CAEA,MAAc,MAAO,CACnB,GAAI,CAAC,KAAK,UAAW,MAAM,IAAI,MAAM,sBAAsB,EAC3D,KAAK,UAAU,UAAY,KAAK,IAAI,EACpC,MAAM,KAAK,MAAM,QAAQ,IAAI,QAAS,KAAK,SAAS,CACtD,CAEA,MAAc,WAAY,CACxB,GAAI,CAAC,KAAK,UAAW,OACrB,GAAM,CAAE,OAAAD,EAAQ,OAAAC,CAAO,EAAI,KAAK,UAE1BG,EAAW,CACf,GAAG,KAAK,UACR,SAAU,KAAK,UAAU,SAAS,MAAM,IAAI,CAC9C,EACA,MAAM,KAAK,IAAI,SAAS,IAAI,KAAK,QAAQJ,EAAQC,CAAM,EAAG,KAAK,UAAUG,CAAQ,CAAC,EAGlF,IAAMC,EAAW,KAAK,SAASL,CAAM,EAC/BM,EAAa,MAAM,KAAK,IAAI,SAAS,IAAID,EAAU,MAAM,GAAgB,CAAC,EAE1EE,EAAO,CADD,CAAE,OAAAN,EAAQ,OAAQ,KAAK,UAAU,SAAU,EACpC,GAAGK,EAAS,OAAQE,GAAMA,EAAE,SAAWP,CAAM,CAAC,EACjE,MAAM,KAAK,IAAI,SAAS,IAAII,EAAU,KAAK,UAAUE,EAAK,MAAM,EAAG,GAAI,CAAC,CAAC,CAC3E,CAEA,MAAM,KAAKE,EAA6F,CAEtG,GADA,MAAM,KAAK,KAAKA,EAAK,OAAQA,EAAK,MAAM,EACpC,CAAC,KAAK,UAAW,MAAM,IAAI,MAAM,sBAAsB,EAG3D,IAAMC,EAAW,CAAC,WAAY,UAAU,EACpCC,EAAWF,EAAK,KACpB,QAAWG,KAAQF,EACjBC,EAAWA,EAAS,QAAQ,IAAI,OAAOC,EAAM,IAAI,EAAG,KAAK,EAG3D,IAAMC,EAAK,OAAO,KAAK,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,MAAM,EAAG,CAAC,CAAC,GAChEC,EAAK,KAAK,IAAI,EACdC,EAAmB,CACvB,GAAAF,EACA,GAAAC,EACA,OAAQL,EAAK,OACb,KAAME,EACN,MAAOF,EAAK,QACd,EAEA,KAAK,UAAU,SAAS,KAAKM,CAAG,EAE5B,KAAK,UAAU,SAAS,OAAS,MACnC,KAAK,UAAU,SAAW,KAAK,UAAU,SAAS,MAAM,IAAI,GAG9D,MAAM,KAAK,KAAK,EAGhB,IAAMC,EAAe,MAAM,KAAK,MAAM,QAAQ,IAAY,aAAa,GAAM,EAC7E,OAAIF,EAAKE,EAAc,MACrB,MAAM,KAAK,UAAU,EACrB,MAAM,KAAK,MAAM,QAAQ,IAAI,cAAeF,CAAE,GAGzC,CAAE,GAAI,GAAM,UAAWD,CAAG,CACnC,CAEA,MAAM,QAAQJ,EAA2E,CAEvF,GADA,MAAM,KAAK,KAAKA,EAAK,OAAQA,EAAK,MAAM,EACpC,CAAC,KAAK,UAAW,MAAM,IAAI,MAAM,sBAAsB,EAE3D,IAAMQ,EAAQR,EAAK,OAAS,GACxBS,EAAW,CAAC,GAAG,KAAK,UAAU,QAAQ,EAG1C,GAAIT,EAAK,OAAQ,CACf,IAAMU,EAAW,SAASV,EAAK,OAAQ,EAAE,EACzCS,EAAWA,EAAS,OAAQE,GAAMA,EAAE,GAAKD,CAAQ,CACnD,CAGAD,EAAS,KAAK,CAACG,EAAGC,IAAMA,EAAE,GAAKD,EAAE,EAAE,EACnC,IAAME,EAAOL,EAAS,MAAM,EAAGD,CAAK,EAC9BO,EAAaD,EAAK,OAAS,EAAI,OAAOA,EAAKA,EAAK,OAAS,CAAC,EAAE,EAAE,EAAI,KAExE,MAAO,CACL,GAAI,GACJ,KAAM,CACJ,SAAUA,EACV,WAAAC,CACF,CACF,CACF,CAEA,MAAM,OAAOf,EAA2E,CAEtF,GADA,MAAM,KAAK,KAAKA,EAAK,OAAQA,EAAK,MAAM,EACpC,CAAC,KAAK,UAAW,MAAM,IAAI,MAAM,sBAAsB,EAE3D,IAAMgB,EAAM,KAAK,IAAI,EACjBhB,EAAK,OACP,KAAK,YAAY,IAAIA,EAAK,OAAQgB,EAAM,GAAK,EAE7C,KAAK,YAAY,OAAOhB,EAAK,MAAM,EAIrC,OAAW,CAACiB,EAAQC,CAAQ,IAAK,KAAK,YAAY,QAAQ,EACpDF,EAAME,GAAU,KAAK,YAAY,OAAOD,CAAM,EAGpD,MAAO,CAAE,GAAI,GAAM,OAAQ,MAAM,KAAK,KAAK,YAAY,KAAK,CAAC,CAAE,CACjE,CAEA,MAAM,MAAME,EAAc,CACxB,IAAMC,EAAM,IAAI,IAAID,EAAI,GAAG,EAC3B,GAAIA,EAAI,SAAW,QAAUC,EAAI,SAAS,SAAS,OAAO,EAAG,CAC3D,IAAMC,EAAQ,MAAMF,EAAI,KAAK,EAC7B,OAAO,SAAS,KAAK,MAAM,KAAK,KAAKE,CAAI,CAAC,CAC5C,CACA,GAAIF,EAAI,SAAW,OAASC,EAAI,SAAS,SAAS,UAAU,EAAG,CAC7D,IAAM7B,EAAS6B,EAAI,aAAa,IAAI,QAAQ,GAAK,GAC3C5B,EAAS4B,EAAI,aAAa,IAAI,QAAQ,GAAK,GAC3CE,EAASF,EAAI,aAAa,IAAI,QAAQ,GAAK,OAC3CZ,EAAQ,SAASY,EAAI,aAAa,IAAI,OAAO,GAAK,KAAM,EAAE,EAChE,OAAO,SAAS,KAAK,MAAM,KAAK,QAAQ,CAAE,OAAA7B,EAAQ,OAAAC,EAAQ,OAAA8B,EAAQ,MAAAd,CAAM,CAAC,CAAC,CAC5E,CACA,GAAIW,EAAI,SAAW,QAAUC,EAAI,SAAS,SAAS,SAAS,EAAG,CAC7D,IAAMC,EAAQ,MAAMF,EAAI,KAAK,EAC7B,OAAO,SAAS,KAAK,MAAM,KAAK,OAAOE,CAAI,CAAC,CAC9C,CACA,OAAO,IAAI,SAAS,YAAa,CAAE,OAAQ,GAAI,CAAC,CAClD,CACF,EC3LAE,IAAAC,IAAAC,IAuBO,IAAMC,GAAN,KAAsB,CAvB7B,MAuB6B,CAAAC,EAAA,wBAC3B,MACA,IACA,SAAiC,KAEjC,YAAYC,EAA2BC,EAAU,CAC/C,KAAK,MAAQD,EACb,KAAK,IAAMC,CACb,CAEA,MAAc,MAAO,CACnB,IAAMC,EAAS,MAAM,KAAK,MAAM,QAAQ,IAAmB,UAAU,EACjEA,IAEF,KAAK,SAAW,CACd,GAAGA,EACH,cAAe,IAAI,IAAI,OAAO,QAAQA,EAAO,eAAiB,CAAC,CAAC,CAAC,CACnE,EAEJ,CAEA,MAAc,MAAO,CACnB,GAAI,CAAC,KAAK,SAAU,OAGpB,IAAMC,EAAU,CACd,GAAG,KAAK,SACR,cAAe,OAAO,YAAY,KAAK,SAAS,aAAa,CAC/D,EAEA,MAAM,KAAK,MAAM,QAAQ,IAAI,WAAYA,CAAO,CAClD,CAKA,MAAM,KAAKC,EAA4F,CACrG,aAAM,KAAK,KAAK,EAEhB,KAAK,SAAW,CACd,OAAQA,EAAK,OACb,QAASA,EAAK,QACd,cAAeA,EAAK,eAAiBA,EAAK,eACtC,CAAE,SAAUA,EAAK,cAAe,UAAWA,EAAK,cAAe,EAC/D,OACJ,cAAe,IAAI,IACnB,YAAa,KAAK,IAAI,CACxB,EAEA,MAAM,KAAK,KAAK,EACT,CAAE,GAAI,EAAK,CACpB,CAKA,MAAM,eAAeA,EAA8D,CAGjF,GAFA,MAAM,KAAK,KAAK,EAEZ,CAAC,KAAK,SACR,MAAM,IAAI,MAAM,2BAA2B,EAG7C,IAAMC,EAAyB,CAC7B,MAAOD,EAAK,MACZ,SAAUA,EAAK,SACf,UAAWA,EAAK,UAChB,UAAW,KAAK,IAAI,CACtB,EAEA,YAAK,SAAS,cAAc,IAAIA,EAAK,MAAOC,CAAQ,EACpD,MAAM,KAAK,KAAK,EAGZ,KAAK,IAAI,EAAI,KAAK,SAAS,YAAc,KAC3C,MAAM,KAAK,oBAAoB,EAG1B,CAAE,GAAI,EAAK,CACpB,CAKA,MAAM,SAASD,EAA+C,CAG5D,GAFA,MAAM,KAAK,KAAK,EAEZ,CAAC,KAAK,SACR,MAAM,IAAI,MAAM,2BAA2B,EAG7C,YAAK,SAAS,cAAgB,CAC5B,SAAUA,EAAK,SACf,UAAWA,EAAK,SAClB,EAEA,MAAM,KAAK,KAAK,EACT,CAAE,GAAI,EAAK,CACpB,CAKA,MAAM,uBAA2C,CAG/C,GAFA,MAAM,KAAK,KAAK,EAEZ,CAAC,KAAK,UAAY,CAAC,KAAK,SAAS,cAEnC,OAAO,MAAM,KAAK,KAAK,UAAU,cAAc,KAAK,GAAK,CAAC,CAAC,EAG7D,IAAME,EAAmB,CAAC,EACpBC,EAAQ,KAAK,SAAS,cAE5B,OAAW,CAACC,EAAOC,CAAO,IAAK,KAAK,SAAS,cAAc,QAAQ,EAAG,CACpE,IAAMC,EAAW,KAAK,kBACpBD,EAAQ,SACRA,EAAQ,UACRF,EAAM,SACNA,EAAM,SACR,EAGIG,EAAW,IACbJ,EAAO,KAAKE,CAAK,EAEjB,QAAQ,IAAI,mBAAmBA,CAAK,iBAAiBE,EAAS,QAAQ,CAAC,CAAC,2BAA2B,CAEvG,CAEA,OAAOJ,CACT,CAMQ,kBAAkBK,EAAcC,EAAcC,EAAcC,EAAsB,CAExF,IAAMC,EAAMJ,EAAO,KAAK,GAAM,IACxBK,EAAMH,EAAO,KAAK,GAAM,IACxBI,GAAOJ,EAAOF,GAAQ,KAAK,GAAM,IACjCO,GAAOJ,EAAOF,GAAQ,KAAK,GAAM,IAEjCO,EACJ,KAAK,IAAIF,EAAK,CAAC,EAAI,KAAK,IAAIA,EAAK,CAAC,EAClC,KAAK,IAAIF,CAAE,EAAI,KAAK,IAAIC,CAAE,EAAI,KAAK,IAAIE,EAAK,CAAC,EAAI,KAAK,IAAIA,EAAK,CAAC,EAGlE,MAAO,SAFG,EAAI,KAAK,MAAM,KAAK,KAAKC,CAAC,EAAG,KAAK,KAAK,EAAIA,CAAC,CAAC,EAGzD,CAKA,MAAc,qBAAsB,CAClC,GAAI,CAAC,KAAK,SAAU,OAEpB,IAAMC,EAAM,KAAK,IAAI,EACfC,EAAS,IAEf,OAAW,CAACb,EAAOH,CAAQ,IAAK,KAAK,SAAS,cAAc,QAAQ,EAC9De,EAAMf,EAAS,UAAYgB,IAC7B,KAAK,SAAS,cAAc,OAAOb,CAAK,EACxC,QAAQ,IAAI,+CAA+CA,CAAK,EAAE,GAItE,KAAK,SAAS,YAAcY,EAC5B,MAAM,KAAK,KAAK,CAClB,CAKA,MAAM,UAAW,CAGf,OAFA,MAAM,KAAK,KAAK,EAEX,KAAK,SAIH,CACL,GAAI,GACJ,KAAM,CACJ,OAAQ,KAAK,SAAS,OACtB,QAAS,KAAK,SAAS,QACvB,cAAe,KAAK,SAAS,cAC7B,UAAW,KAAK,SAAS,cAAc,KACvC,MAAO,MAAM,KAAK,KAAK,SAAS,cAAc,OAAO,CAAC,EAAE,IAAKE,IAAS,CACpE,SAAUA,EAAI,SACd,UAAWA,EAAI,UACf,UAAWA,EAAI,UACf,IAAK,KAAK,IAAI,EAAIA,EAAI,SACxB,EAAE,CACJ,CACF,EAjBS,CAAE,GAAI,GAAO,MAAO,iBAAkB,CAkBjD,CAEA,MAAM,MAAMC,EAAc,CACxB,IAAMC,EAAM,IAAI,IAAID,EAAI,GAAG,EAE3B,GAAIA,EAAI,SAAW,QAAUC,EAAI,SAAS,SAAS,OAAO,EAAG,CAC3D,IAAMC,EAAQ,MAAMF,EAAI,KAAK,EAC7B,OAAO,SAAS,KAAK,MAAM,KAAK,KAAKE,CAAI,CAAC,CAC5C,CAEA,GAAIF,EAAI,SAAW,QAAUC,EAAI,SAAS,SAAS,WAAW,EAAG,CAC/D,IAAMC,EAAQ,MAAMF,EAAI,KAAK,EAC7B,OAAO,SAAS,KAAK,MAAM,KAAK,eAAeE,CAAI,CAAC,CACtD,CAEA,GAAIF,EAAI,SAAW,QAAUC,EAAI,SAAS,SAAS,QAAQ,EAAG,CAC5D,IAAMC,EAAQ,MAAMF,EAAI,KAAK,EAC7B,OAAO,SAAS,KAAK,MAAM,KAAK,SAASE,CAAI,CAAC,CAChD,CAEA,GAAIF,EAAI,SAAW,OAASC,EAAI,SAAS,SAAS,SAAS,EAAG,CAC5D,IAAMlB,EAAS,MAAM,KAAK,sBAAsB,EAChD,OAAO,SAAS,KAAK,CAAE,GAAI,GAAM,OAAAA,CAAO,CAAC,CAC3C,CAEA,OAAIiB,EAAI,SAAW,OAASC,EAAI,SAAS,SAAS,QAAQ,EACjD,SAAS,KAAK,MAAM,KAAK,SAAS,CAAC,EAGrC,IAAI,SAAS,YAAa,CAAE,OAAQ,GAAI,CAAC,CAClD,CACF,EC3PAE,IAAAC,IAAAC,IAmCA,IAAMC,GAA6B,CAAC,qBAAqB,kBAAkB,EACrEC,GAAoC,CAAC,GAAGD,GAAO,kBAAkB,kBAAkB,WAAW,EAC9FE,GAAoC,CAAC,GAAGF,GAAO,oBAAoB,mBAAmB,kBAAkB,WAAW,EAE5GG,GAAN,KAAkB,CAvCzB,MAuCyB,CAAAC,EAAA,oBACf,QACA,IACA,WAAuC,KAE/C,YAAYC,EAA2BC,EAAU,CAC/C,KAAK,QAAUD,EAAM,QACrB,KAAK,IAAMC,CACb,CAGA,MAAc,UAAUC,EAAkBC,EAAuB,CAC/D,GAAI,KAAK,WAAY,OACrB,IAAMC,EAAS,MAAM,KAAK,QAAQ,IAAuB,OAAO,EAChE,GAAIA,EAAQ,CACV,KAAK,WAAaA,EAClB,MACF,CACA,IAAMC,EAAQF,IAAS,UAAYP,GAAgBC,GAC7CS,EAAc,CAAC,EACrB,QAAWC,KAAQF,EAAOC,EAAYC,CAAI,EAAI,CAAE,KAAAA,EAAM,OAAQ,SAAU,EACxE,KAAK,WAAa,CAAE,SAAAL,EAAU,KAAAC,EAAM,YAAa,KAAM,YAAAG,EAAa,OAAQ,MAAO,EACnF,MAAM,KAAK,UAAU,CACvB,CACA,MAAc,WAAY,CAAM,KAAK,YAAY,MAAM,KAAK,QAAQ,IAAI,QAAS,KAAK,UAAU,CAAG,CACnG,IAAY,OAAQ,CAAE,OAAO,KAAK,WAAY,OAAS,UAAYV,GAAgBC,EAAW,CACtF,UAAoC,CAC1C,QAAWW,KAAK,KAAK,MAAO,GAAI,KAAK,WAAY,YAAYA,CAAC,EAAE,SAAW,YAAa,OAAOA,EAC/F,OAAO,IACT,CACA,MAAc,UAAUD,EAAwB,CAC9C,KAAK,WAAY,YAAcA,EAC/B,IAAME,EAAK,KAAK,WAAY,YAAYF,CAAI,EAC5C,KAAK,WAAY,YAAYA,CAAI,EAAI,CAAE,GAAGE,EAAI,OAAQ,UAAW,UAAW,KAAK,IAAI,CAAE,EACvF,MAAM,KAAK,UAAU,CACvB,CACA,MAAc,SAASF,EAAwB,CAC7C,IAAME,EAAK,KAAK,WAAY,YAAYF,CAAI,EAC5C,KAAK,WAAY,YAAYA,CAAI,EAAI,CAAE,GAAGE,EAAI,OAAQ,YAAa,YAAa,KAAK,IAAI,CAAE,EAC3F,MAAM,KAAK,UAAU,CACvB,CACA,MAAc,SAASF,EAAwBG,EAAa,CAC1D,IAAMD,EAAK,KAAK,WAAY,YAAYF,CAAI,EAC5C,KAAK,WAAY,YAAYA,CAAI,EAAI,CAAE,GAAGE,EAAI,OAAQ,SAAU,MAAOC,EAAK,YAAaD,EAAG,YAAc,GAAK,CAAE,EACjH,MAAM,KAAK,UAAU,CACvB,CAGA,MAAc,yBAA0B,CACtC,IAAME,EAAI,KAAK,WAAY,SAE3B,MAAM,KAAK,IAAI,GAAG,QAChB;AAAA,oCAEF,EAAE,KAAK,QAAQ,OAAO,WAAW,CAAC,GAAIA,EAAG,2CACvC,6DACA,SAAU,KAAK,IAAI,EAAG,KAAK,IAAI,CAAC,EAAE,IAAI,EAGxC,IAAMC,EAAW,KAAK,IAAI,EAAI,EAAE,GAAG,KAAK,IACxC,MAAM,KAAK,IAAI,GAAG,QAChB;AAAA,uCAEF,EAAE,KAAK,WAAW,OAAO,WAAW,CAAC,GAAID,EAAG,YAAa,YAAa,cACpEC,EAAU,YAAa,KAAK,IAAI,CAAC,EAAE,IAAI,CAC3C,CAEA,MAAc,uBAAwB,CACpC,IAAMD,EAAI,KAAK,WAAY,SAC3B,MAAM,KAAK,IAAI,GAAG,QAAQ,iEAAiE,EACxF,KAAK,KAAK,IAAI,EAAGA,CAAC,EAAE,IAAI,CAC7B,CAEA,MAAc,sBAAuB,CACnC,IAAMA,EAAI,KAAK,WAAY,SACrBE,EAAM,MAAM,KAAK,IAAI,GAAG,QAC5B,8EACF,EAAE,KAAKF,CAAC,EAAE,MAAuD,EACjE,GAAI,CAACE,EAAK,MAAM,IAAI,MAAM,+BAA+B,EAEzD,IAAMC,EAAK,KAAK,IAAI,EAAE,SAAS,EACzBC,EAAM,MAAM,KAAK,KAAKF,EAAI,eAAgB,QAAQC,CAAE,EAAE,EACtDE,EAAM,MAAM,MAAMH,EAAI,YAAa,CAAE,OAAQ,OAAQ,QAAS,CAAE,cAAeE,EAAK,cAAeD,CAAG,CAAC,CAAC,EAC9G,GAAI,CAACE,EAAI,IAAMA,EAAI,SAAW,IAAK,MAAM,IAAI,MAAM,6BAA6BA,EAAI,MAAM,EAAE,EAE5F,MAAM,KAAK,IAAI,GAAG,QAChB,kFACF,EAAE,KAAK,KAAK,IAAI,EAAG,KAAK,IAAI,EAAGL,CAAC,EAAE,IAAI,CACxC,CAEA,MAAc,wBAAyB,CACrC,IAAMA,EAAI,KAAK,WAAY,SACrBM,EAAc,UAAUN,EAAE,QAAQ,WAAY,EAAE,CAAC,GACvD,MAAM,KAAK,IAAI,GAAG,QAChB,mGACF,EAAE,KAAKM,EAAa,cAAe,KAAK,IAAI,EAAGN,CAAC,EAAE,IAAI,CACxD,CAEA,MAAc,uBAAwB,CACpC,GAAI,KAAK,IAAI,0BAA4B,OAAQ,OACjD,IAAMA,EAAI,KAAK,WAAY,SACrBO,EAAM,UAAU,OAAO,WAAW,CAAC,GACzC,MAAM,KAAK,IAAI,GAAG,QAChB;AAAA;AAAA,2BAGF,EAAE,KAAKA,EAAK,QAAS,KAAK,IAAI,EAAGP,CAAC,EAAE,IAAI,CAC1C,CAEA,MAAc,sBAAuB,CACnC,IAAMA,EAAI,KAAK,WAAY,SACrBQ,EAAS,MAAM,KAAK,IAAI,GAAG,QAC/B,wDACF,EAAE,KAAKR,CAAC,EAAE,MAA6D,EACvE,GAAI,CAACQ,EAAQ,MAAM,IAAI,MAAM,kBAAkB,EAE/C,IAAMC,EAAQ,MAAM,KAAK,WAAWT,EAAGQ,EAAO,KAAK,EAC7CE,EAAO,GAAG,KAAK,IAAI,iBAAiB,wBAAwBD,CAAK,GAEvE,MAAM,KAAK,IAAI,GAAG,QAAQ,yEAAyE,EAChG,KAAK,KAAK,IAAI,EAAG,KAAK,IAAI,EAAGT,CAAC,EAAE,IAAI,EACvC,QAAQ,IAAI,gCAAgCQ,EAAO,KAAK,KAAKE,CAAI,EAAE,CACrE,CAEA,MAAc,gBAAiB,CAC7B,IAAMV,EAAI,KAAK,WAAY,SAC3B,MAAM,KAAK,IAAI,GAAG,QAChB,uFACF,EAAE,KAAK,KAAK,IAAI,EAAG,KAAK,IAAI,EAAGA,CAAC,EAAE,IAAI,CACxC,CAGA,MAAc,QAAS,CACrB,KAAK,WAAY,OAAS,UAC1B,KAAK,WAAY,YAAc,KAAK,IAAI,EACxC,MAAM,KAAK,UAAU,EAErB,GAAI,CACF,IAAIJ,EAAO,KAAK,SAAS,EACzB,KAAOA,GAAM,CACX,MAAM,KAAK,UAAUA,CAAI,EACzB,GAAI,CACF,OAAQA,EAAM,CACZ,IAAK,qBAAuB,MAAM,KAAK,wBAAwB,EAAG,MAClE,IAAK,mBAAuB,MAAM,KAAK,sBAAsB,EAAK,MAClE,IAAK,kBAAuB,MAAM,KAAK,qBAAqB,EAAM,MAClE,IAAK,oBAAuB,MAAM,KAAK,uBAAuB,EAAI,MAClE,IAAK,mBAAuB,MAAM,KAAK,sBAAsB,EAAK,MAClE,IAAK,kBAAuB,MAAM,KAAK,qBAAqB,EAAM,MAClE,IAAK,YAAuB,MAAM,KAAK,eAAe,EAAY,KACpE,CACA,MAAM,KAAK,SAASA,CAAI,CAC1B,OAASe,EAAO,CACd,YAAM,KAAK,SAASf,EAAMe,GAAG,SAAW,OAAOA,CAAC,CAAC,EAC3CA,CACR,CACAf,EAAO,KAAK,SAAS,CACvB,CACA,KAAK,WAAY,OAAS,YAC1B,KAAK,WAAY,YAAc,KAAK,IAAI,EACxC,KAAK,WAAY,YAAc,KAC/B,MAAM,KAAK,UAAU,CACvB,OAAS,EAAG,CACV,WAAK,WAAY,OAAS,SAC1B,KAAK,WAAY,MAAS,GAAW,SAAW,OAAO,CAAC,EACxD,MAAM,KAAK,UAAU,EACf,CACR,CACF,CAGA,MAAc,KAAKgB,EAAgBC,EAAc,CAC/C,IAAMC,EAAM,IAAI,YACVC,EAAM,MAAM,OAAO,OAAO,UAAU,MAAOD,EAAI,OAAOF,CAAM,EAAG,CAAE,KAAK,OAAQ,KAAK,SAAU,EAAG,GAAO,CAAC,MAAM,CAAC,EAC/GR,EAAM,MAAM,OAAO,OAAO,KAAK,OAAQW,EAAKD,EAAI,OAAOD,CAAI,CAAC,EAClE,MAAO,CAAC,GAAG,IAAI,WAAWT,CAAG,CAAC,EAAE,IAAIY,GAAKA,EAAE,SAAS,EAAE,EAAE,SAAS,EAAE,GAAG,CAAC,EAAE,KAAK,EAAE,CAClF,CAEA,MAAc,WAAWzB,EAAkB0B,EAAe,CACxD,IAAMH,EAAM,IAAI,YACVI,EAAU,KAAK,KAAK,UAAU,CAAE,IAAI,QAAS,IAAI,KAAM,CAAC,CAAC,EAAE,QAAQ,MAAM,EAAE,EAC3EC,EAAU,KAAK,KAAK,UAAU,CAClC,IAAK,KAAK,IAAI,YAAc,aAC5B,IAAK,KAAK,IAAI,cAAgB,eAC9B,IAAKF,EAAO,SAAA1B,EAAU,KAAK,aAAc,MAAM,CAAC,QAAQ,OAAO,EAC/D,IAAK,KAAK,MAAM,KAAK,IAAI,EAAE,GAAI,EAC/B,IAAK,KAAK,MAAM,KAAK,IAAI,EAAE,GAAI,EAAI,GAAG,IACxC,CAAC,CAAC,EAAE,QAAQ,MAAM,EAAE,EACdsB,EAAO,GAAGK,CAAM,IAAIC,CAAO,GAC3BJ,EAAM,MAAM,OAAO,OAAO,UAAU,MAAOD,EAAI,OAAO,KAAK,IAAI,UAAU,EAAG,CAAC,KAAK,OAAQ,KAAK,SAAS,EAAG,GAAM,CAAC,MAAM,CAAC,EACzHV,EAAM,MAAM,OAAO,OAAO,KAAK,OAAQW,EAAKD,EAAI,OAAOD,CAAI,CAAC,EAC5DO,EAAM,KAAK,OAAO,aAAa,GAAG,IAAI,WAAWhB,CAAG,CAAC,CAAC,EAAE,QAAQ,MAAM,GAAG,EAAE,QAAQ,MAAM,GAAG,EAAE,QAAQ,MAAM,EAAE,EACpH,MAAO,GAAGS,CAAI,IAAIO,CAAG,EACvB,CAGA,MAAM,MAAMC,EAAc,CACxB,IAAMC,EAAM,IAAI,IAAID,EAAI,GAAG,EAE3B,GAAIA,EAAI,SAAW,QAAUC,EAAI,WAAa,SAAU,CACtD,GAAM,CAAE,SAAA/B,EAAU,KAAAC,CAAK,EAAI,MAAM6B,EAAI,KAAK,EAC1C,aAAM,KAAK,UAAU9B,EAAUC,CAAI,EAE5B,SAAS,KAAK,CAAE,QAAQ,GAAM,MAAO,KAAK,UAAW,CAAC,CAC/D,CAEA,GAAI6B,EAAI,SAAW,QAAUC,EAAI,WAAa,OAAQ,CACpD,GAAM,CAAE,SAAA/B,EAAU,KAAAC,CAAK,EAAI,MAAM6B,EAAI,KAAK,EAC1C,aAAM,KAAK,UAAU9B,EAAUC,CAAI,GAElC,SAAc,MAAM,KAAK,OAAO,KAC1B,SAAS,KAAK,CAAE,QAAQ,GAAM,MAAO,KAAK,UAAW,CAAC,CAC/D,CAEA,GAAI6B,EAAI,SAAW,OAASC,EAAI,WAAa,UAC3C,OAAK,KAAK,WACH,SAAS,KAAK,CAAE,QAAQ,GAAM,MAAO,KAAK,UAAW,CAAC,EADhC,SAAS,KAAK,CAAE,QAAQ,GAAM,MAAM,IAAK,CAAC,EAIzE,GAAID,EAAI,SAAW,QAAUC,EAAI,WAAa,SAAU,CACtD,GAAM,CAAE,SAAA/B,EAAU,KAAAC,CAAK,EAAI,MAAM6B,EAAI,KAAK,EAC1C,MAAM,KAAK,UAAU9B,EAAUC,CAAI,EAEnC,QAAWK,KAAK,KAAK,MAAW,KAAK,WAAY,YAAYA,CAAC,EAAE,SAAW,WACzE,KAAK,WAAY,YAAYA,CAAC,EAAE,OAAS,UACzC,KAAK,WAAY,YAAYA,CAAC,EAAE,MAAQ,QAE1C,YAAK,WAAY,OAAS,OAC1B,MAAM,KAAK,UAAU,EACd,SAAS,KAAK,CAAE,QAAQ,GAAM,MAAM,KAAK,UAAW,CAAC,CAC9D,CAEA,OAAO,IAAI,SAAS,YAAa,CAAE,OAAQ,GAAI,CAAC,CAClD,CACF,EjEnPA,IAAM0B,GAAmB,IAAI,IAAI,CAC/B,yBACA,wBACA,yBACA,wBACA,uBACF,CAAC,EAEKC,GAAeC,EAAE,OAAO,CAC5B,SAAUA,EAAE,OAAO,EAAE,IAAI,EAAG,mBAAmB,EAC/C,cAAeA,EAAE,OAAO,EAAE,IAAI,EAAG,wBAAwB,EACzD,aAAcA,EAAE,OAAO,EAAE,MAAM,sBAAsB,EACrD,YAAaA,EAAE,OAAO,EAAE,IAAI,EAAG,sBAAsB,EACrD,OAAQA,EAAE,OAAO,EAAE,SAAS,EAC5B,SAAUA,EAAE,OAAO,EAAE,SAAS,EAC9B,KAAMA,EAAE,KAAK,CAAC,OAAQ,UAAW,YAAY,CAAC,EAAE,SAAS,EACzD,eAAgBA,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAC1C,UAAWA,EAAE,OAAO,EAAE,SAAS,CACjC,CAAC,EAEKC,GAAkBD,EAAE,OAAO,CAC/B,WAAYA,EAAE,OAAO,EAAE,IAAI,EAAG,qBAAqB,EACnD,KAAMA,EAAE,OAAOA,EAAE,QAAQ,CAAC,EAC1B,SAAUA,EAAE,MAAMA,EAAE,KAAK,CAAC,KAAM,KAAM,KAAM,SAAU,GAAG,CAAC,CAAC,EAAE,SAAS,EACtE,SAAUA,EAAE,OAAO,EAAE,SAAS,CAChC,CAAC,EAED,SAASE,GAAoBC,EAAkB,CAC7C,IAAMC,EAAWD,EAAS,MAAM,GAAG,EAAE,OAAO,OAAO,EACnD,OAAKC,EAAS,OACPA,EAAS,MAAM,EAAG,CAAC,EAAE,KAAK,GAAG,EADP,MAE/B,CAJSC,EAAAH,GAAA,uBAMT,SAASI,GAAiBC,EAAuBC,EAAUC,EAAmBC,EAAiB,CAC7F,IAAMC,EAAUC,GAAYL,CAAM,EAC5BM,EAAa,OAAOL,GAAK,cAAiB,SAC5C,OAAOA,EAAI,YAAY,EACpB,MAAM,GAAG,EACT,IAAKM,GAAcA,EAAE,KAAK,CAAC,EAC3B,OAAO,OAAO,EACjB,CAAC,EAECC,EAAY,IAAI,IAAY,CAAC,GAAGjB,GAAkB,GAAGe,CAAU,CAAC,EAClEN,GAAUQ,EAAU,IAAIR,CAAM,GAChCI,EAAQ,IAAI,8BAA+BJ,CAAM,EAGnD,IAAMS,EAAe,IAAI,KACtBL,EAAQ,IAAI,8BAA8B,GAAK,IAC7C,MAAM,GAAG,EACT,IAAKM,GAAMA,EAAE,KAAK,CAAC,EACnB,OAAO,OAAO,CACnB,EACA,QAAWC,IAAO,CAChB,gBACA,eACA,kBACA,kBACA,uBACA,aACA,YACA,cACF,EACMA,GAAKF,EAAa,IAAIE,CAAG,EAE/B,OAAAP,EAAQ,IAAI,+BAAgC,MAAM,KAAKK,CAAY,EAAE,KAAK,GAAG,CAAC,EAC9EL,EAAQ,IAAI,gCAAiC,yBAAyB,EACtEA,EAAQ,IAAI,eAAgBF,CAAS,EACrCE,EAAQ,IAAI,YAAaD,CAAO,EACzBC,CACT,CArCSN,EAAAC,GAAA,oBAuCT,SAASa,GAAaC,EAAeC,EAAqB,CACxD,IAAMC,EAAS,IAAI,QAAQF,CAAI,EAC/B,OAAIC,GACe,IAAI,QAAQA,CAAK,EACzB,QAAQ,CAACE,EAAOC,IAAQF,EAAO,IAAIE,EAAKD,CAAK,CAAC,EAElDD,CACT,CAPSjB,EAAAc,GAAA,gBAST,SAASM,GAAgBC,EAAeN,EAAe,CACrD,IAAMT,EAAUQ,GAAaC,EAAMM,EAAI,OAAO,EAC9C,OAAO,IAAI,SAASA,EAAI,KAAMC,GAAa,CAAE,OAAQD,EAAI,OAAQ,QAAAf,CAAQ,CAAC,CAAC,CAC7E,CAHSN,EAAAoB,GAAA,mBAaT,IAAOG,GAAQ,CACb,MAAM,MAAMC,EAAcrB,EAAUsB,EAA2C,CAC7E,IAAMC,EAAK,KAAK,IAAI,EACdtB,EAAYuB,GAAa,EACzBzB,EAASsB,EAAI,QAAQ,IAAI,QAAQ,EAEjCI,EAAW3B,GAAiBC,EAAQC,EAAKC,EAD/B,OAAO,aAAgB,SAAW,YAAc,SACC,EAC7DyB,EAAkB,KAEtB,GAAIC,GAAYN,CAAG,EACjB,OAAO,IAAI,SAAS,KAAMF,GAAa,CAAE,OAAQ,IAAK,QAASR,GAAac,CAAQ,CAAE,CAAC,CAAC,EAG1F,GAAI,CAGF,GAFAC,EAAM,IAAI,IAAIL,EAAI,GAAG,EAEjBA,EAAI,SAAW,OAASK,EAAI,WAAa,WAAY,CACvD,IAAMR,EAAM,MAAMU,GAAQ,EAC1B,OAAOX,GAAgBC,EAAKO,CAAQ,CACtC,CACA,GAAIJ,EAAI,SAAW,OAASK,EAAI,WAAa,UAAW,CACtD,IAAMR,EAAM,MAAMW,GAAO7B,CAAG,EAC5B,OAAOiB,GAAgBC,EAAKO,CAAQ,CACtC,CAGA,GAAIC,EAAI,WAAa,eACnB,OAAO,IAAI,SAAS,KAAK,UAAU,CACjC,GAAI,GACJ,OAAQL,EAAI,OACZ,SAAUK,EAAI,SACd,OAAQA,EAAI,OACZ,QAASA,EAAI,KACb,WAAY1B,EAAI,aAAe,IACjC,CAAC,EAAG,CACF,OAAQ,IACR,QAAS,CAAE,eAAgB,mBAAoB,GAAGyB,CAAS,CAC7D,CAAC,EAKH,GAAIC,EAAI,WAAa,6BAA+BL,EAAI,SAAW,OAAQ,CAIzE,IAHoBrB,EAAI,aAAe,iBAGnB,aAClB,OAAO8B,EAAK,CACV,QAAS,GACT,MAAO,CAAE,KAAM,YAAa,QAAS,yCAA0C,CACjF,EAAG,IAAKL,CAAQ,EAGlB,GAAI,CACF,IAAMM,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EAIxCW,EAHSxC,EAAE,OAAO,CACtB,MAAOA,EAAE,OAAO,EAAE,MAAM,CAC1B,CAAC,EACmB,MAAMuC,CAAI,EAGxBE,EAAS,IAAI,YAAY,EAAE,OAAOjC,EAAI,YAAc,EAAE,EAC5D,GAAI,CAACA,EAAI,WACP,MAAM,IAAI,MAAM,2BAA2B,EAG7C,IAAMkC,EAAM,KAAK,MAAM,KAAK,IAAI,EAAI,GAAI,EAClCC,EAAMD,EAAO,EAAI,GAAK,GAAK,GAE3BE,EAAQ,MAAM,IAAIC,GAAQ,CAC9B,IAAKL,EAAK,MACV,MAAO,CAAC,OAAO,CACjB,CAAC,EACE,mBAAmB,CAAE,IAAK,OAAQ,CAAC,EACnC,UAAUhC,EAAI,YAAc,YAAY,EACxC,YAAYA,EAAI,cAAgB,eAAe,EAC/C,YAAYkC,CAAG,EACf,kBAAkBC,CAAG,EACrB,KAAKF,CAAM,EAEd,OAAOH,EAAK,CACV,QAAS,GACT,MAAAM,EACA,UAAW,IAAI,KAAKD,EAAM,GAAI,EAAE,YAAY,CAC9C,EAAG,IAAKV,CAAQ,CAClB,OAASa,EAAU,CACjB,OAAIA,EAAI,OACCR,EAAK,CACV,QAAS,GACT,MAAO,CAAE,KAAM,aAAc,QAASQ,EAAI,MAAO,CACnD,EAAG,IAAKb,CAAQ,EAEXK,EAAK,CACV,QAAS,GACT,MAAO,CAAE,KAAM,oBAAqB,QAAS,OAAOQ,GAAK,SAAWA,CAAG,CAAE,CAC3E,EAAG,IAAKb,CAAQ,CAClB,CACF,CAEA,IAAMc,EAAIvC,EAAI,aAAe,KAEvBwC,EAASnB,EAAI,OAAO,YAAY,EACtC,GAAImB,IAAW,OAASA,IAAW,OAAQ,CACzC,IAAMC,EAAQ/C,GAAoBgC,EAAI,QAAQ,EACxCgB,EAAc,MAAMC,GAAUtB,EAAKrB,EAAK,CAC5C,MAAAyC,EACA,UAAAxC,EACA,KAAMyB,EAAI,QACZ,CAAC,EAED,GAAI,CAACgB,EAAY,GAAI,CACnB,IAAMvC,EAAU,IAAI,QAAQsB,CAAQ,EACpC,OAAI,OAAOiB,EAAY,YAAe,UACpCvC,EAAQ,IAAI,cAAe,OAAOuC,EAAY,UAAU,CAAC,EAEvD,OAAOA,EAAY,OAAU,UAC/BvC,EAAQ,IAAI,oBAAqB,OAAOuC,EAAY,KAAK,CAAC,EAE5DvC,EAAQ,IAAI,wBAAyB,GAAG,EACjC2B,EAAK,CACV,QAAS,GACT,MAAO,CAAE,KAAM,eAAgB,QAAS,mBAAoB,CAC9D,EAAG,IAAK3B,CAAO,CACjB,CAEI,OAAOuC,EAAY,OAAU,UAC/BjB,EAAS,IAAI,oBAAqB,OAAOiB,EAAY,KAAK,CAAC,EAEzD,OAAOA,EAAY,WAAc,UACnCjB,EAAS,IAAI,wBAAyB,OAAO,KAAK,IAAIiB,EAAY,UAAW,CAAC,CAAC,CAAC,CAEpF,CAKF,GAAIhB,EAAI,WAAa,QAAQa,CAAC,WAAalB,EAAI,SAAW,OACxD,GAAI,CACF,IAAMU,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCW,EAAOY,GAAMrD,GAAcwC,CAAI,EAC/Bc,EAAS,MAAMC,GAAgB9C,EAAKgC,CAAI,EAE9C,OAAIa,EAAO,QACFf,EAAK,CAAE,QAAS,GAAM,KAAMe,EAAO,MAAO,EAAG,IAAKpB,CAAQ,EAE1DK,EAAK,CAAE,QAAS,GAAO,MAAOe,EAAO,KAAM,EAAG,IAAKpB,CAAQ,CAEtE,OAASa,EAAU,CACjB,OAAIS,GAAkBT,CAAG,EAChBR,EAAK,CACV,QAAS,GACT,MAAO,CACL,KAAM,kBACN,QAAS,oBACT,OAAQQ,EAAI,MACd,CACF,EAAGA,EAAI,OAAQb,CAAQ,EAElBK,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,gBAAiB,QAASQ,EAAI,OAAQ,CAAE,EAAG,IAAKb,CAAQ,CACvG,CAKF,GAAIC,EAAI,WAAa,wBAA0BL,EAAI,SAAW,OAC5D,OAAO,MAAM2B,GAAY3B,EAAKrB,EAAKC,EAAWwB,CAAQ,EAIxD,GAAIC,EAAI,WAAa,wBAA0BL,EAAI,SAAW,OAC5D,OAAO,MAAM4B,GAAY5B,EAAKrB,EAAKC,EAAWwB,CAAQ,EAIxD,GAAIC,EAAI,WAAa,+BAAiCL,EAAI,SAAW,OACnE,OAAO,MAAM6B,GAAkB7B,EAAKrB,EAAKC,EAAWwB,CAAQ,EAI9D,GAAIC,EAAI,WAAa,8BAAgCL,EAAI,SAAW,OAClE,OAAO,MAAM8B,GAAiB9B,EAAKrB,EAAKC,EAAWwB,CAAQ,EAK7D,GAAIC,EAAI,WAAa,qBAAuBL,EAAI,SAAW,OACzD,OAAO,MAAM+B,GAAiB/B,EAAKrB,CAAG,EAIxC,GAAI0B,EAAI,WAAa,sBAAwBL,EAAI,SAAW,MAC1D,OAAO,MAAMgC,GAAkBhC,EAAKrB,CAAG,EAKzC,GAAI0B,EAAI,WAAa,6BAA+BL,EAAI,SAAW,OACjE,OAAO,MAAMiC,GAAqBjC,EAAKrB,CAAG,EAI5C,GAAI0B,EAAI,WAAa,6BAA+BL,EAAI,SAAW,OACjE,OAAO,MAAMkC,GAAqBlC,EAAKrB,CAAG,EAI5C,IAAMwD,EAAuB9B,EAAI,SAAS,MAAM,iDAAiD,EACjG,GAAI8B,GAAwBnC,EAAI,SAAW,MAAO,CAChD,IAAMoC,EAAWD,EAAqB,CAAC,EAEvC,OAAO,MAAME,GAAsBrC,EAAKrB,EAAKyD,CAAQ,CACvD,CAGA,IAAME,EAAgBjC,EAAI,SAAS,MAAM,yCAAyC,EAClF,GAAIiC,GAAiBtC,EAAI,SAAW,MAAO,CACzC,IAAMoC,EAAWE,EAAc,CAAC,EAEhC,OAAO,MAAMC,GAAqBvC,EAAKrB,EAAKyD,CAAQ,CACtD,CAMA,GAAI/B,EAAI,WAAa,QAAQa,CAAC,UAAYlB,EAAI,SAAW,MAAO,CAC9D,IAAMwC,GAAUxC,EAAI,QAAQ,IAAI,UAAU,GAAKK,EAAI,aAAa,IAAI,QAAQ,GAAK,WAAW,SAAS,EAC/FQ,EAAM,IAAI,KACV4B,EAAK,GAAG5B,EAAI,eAAe,CAAC,IAAI,OAAOA,EAAI,YAAY,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,CAAC,GAC3E6B,EAAQ,SAASF,CAAM,IAAIC,CAAE,GAC7B/C,EAAS,MAAMf,EAAI,SAAS,IAAI+D,EAAO,MAAM,GAAa,CAAE,MAAO,EAAG,MAAOD,CAAG,EACtF,OAAOhC,EAAK,CAAE,QAAQ,GAAM,KAAK,CAAE,OAAA+B,EAAQ,MAAOC,EAAI,MAAO,OAAO/C,EAAM,OAAO,CAAC,CAAE,CAAE,EAAG,IAAKU,CAAQ,CACxG,CAGA,GAAIC,EAAI,WAAa,QAAQa,CAAC,oBAAsBlB,EAAI,SAAW,OAAQ,CACzE,IAAMwC,GAAUxC,EAAI,QAAQ,IAAI,UAAU,GAAK,WAAW,SAAS,EAC7Da,EAAM,IAAI,KACV4B,EAAK,GAAG5B,EAAI,eAAe,CAAC,IAAI,OAAOA,EAAI,YAAY,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,CAAC,GAC3E6B,EAAQ,SAASF,CAAM,IAAIC,CAAE,GAC7BE,EAAU,UAAUH,CAAM,QAG1BI,EAAW,MAAMjE,EAAI,SAAS,IAAI+D,EAAO,MAAM,GAAa,CAAE,MAAO,EAAG,MAAOD,CAAG,EACpFI,EAAQ,OAAOD,EAAQ,OAAS,CAAC,EAAI,EAInCE,EAAM,MAAMC,GAAapE,EAAK6D,CAAM,EACpCQ,EAAQ,CAAC,CAACF,GAAK,OAAO,SAAS,GAC/BG,EAAS,CAAC,CAACH,GAAK,OAAO,OAE7B,MAAI,CAACE,GAAS,CAACC,GAAUJ,EAAQ,IAExBpC,EAAK,CAAE,QAAQ,GAAO,MAAM,CAAE,KAAK,YAAa,QAAQ,8BAA+B,EAAG,KAAK,CAAE,OAAA+B,EAAQ,MAAOC,EAAI,MAAOI,EAAM,CAAE,CAAE,EAAG,IAAKzC,CAAQ,GAG9J,MAAMzB,EAAI,SAAS,IAAI+D,EAAO,KAAK,UAAU,CAAE,MAAAG,EAAO,MAAOJ,CAAG,CAAC,CAAC,EAC3DhC,EAAK,CAAE,QAAQ,GAAM,KAAK,CAAE,OAAA+B,EAAQ,MAAOC,EAAI,MAAAI,CAAM,CAAE,EAAG,IAAKzC,CAAQ,EAChF,CAKA,GAAIC,EAAI,WAAa,QAAQa,CAAC,SAAWlB,EAAI,SAAW,OACtD,GAAI,CAEF,IAAMkD,EAAS,MAAMC,EAAWnD,EAAKrB,CAAG,EAClCyD,EAAWc,EAAO,WAAaA,EAAO,SAE5C,GAAI,CAACd,EACH,OAAO3B,EAAK,CAAE,QAAS,GAAO,MAAO,2BAA4B,EAAG,IAAKL,CAAQ,EAGnF,IAAMM,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxC,CAAE,WAAAoD,EAAY,KAAAzC,EAAM,SAAA0C,EAAU,SAAAC,CAAS,EAAI/B,GAAMnD,GAAiBsC,CAAI,EAGtE6C,EAAaC,GAAmBxD,CAAG,EACnCyD,EAAO,MAAMC,GAAiB/E,EAAKyD,EAAU1B,EAAM6C,GAAc,MAAS,EAChF,GAAIE,EAAK,IACP,OAAOhD,EAAKgD,EAAK,SAAU,IAAKrD,CAAQ,EAI1C,IAAMuD,EAAe,CACnB,OAAQvB,EACR,SAAUkB,GAAYF,EACtB,SAAUC,GAAY,CAAC,KAAM,KAAM,IAAI,EACvC,KAAM,CACJ,GAAG1C,EACH,WAAAyC,EACA,UAAW,IAAI,KAAK,EAAE,YAAY,CACpC,EACA,UAAW,KAAK,IAAI,EACpB,QAASK,EAAK,GAChB,EAGA,MAAM9E,EAAI,WAAW,KAAKgF,CAAG,EAE7B,IAAMnC,EAAS,CACb,QAAS,GACT,OAAQ,GACR,OAAQY,EACR,WAAAgB,EACA,OAAQK,EAAK,GACf,EAGA,aAAMA,EAAK,MAAMjC,CAAM,EAEhBf,EAAKe,EAAQ,IAAKpB,CAAQ,CAEnC,OAASa,EAAU,CACjB,OAAIA,aAAe,SACVrB,GAAgBqB,EAAKb,CAAQ,EAGlCsB,GAAkBT,CAAG,EAChBR,EAAK,CACV,QAAS,GACT,MAAO,CACL,KAAM,kBACN,QAAS,oBACT,OAAQQ,EAAI,MACd,CACF,EAAGA,EAAI,OAAQb,CAAQ,GAGzBwD,EAAQ,CACN,MAAO,QACP,IAAK,oBAAoB3C,GAAK,SAAW,SAAS,GAClD,UAAArC,EACA,KAAMyB,EAAI,SACV,OAAQ,GACV,CAAC,EACMI,EAAK,CACV,QAAS,GACT,MAAO,CAAE,KAAM,cAAe,QAASQ,EAAI,OAAQ,CACrD,EAAG,IAAKb,CAAQ,EAClB,CAmBF,GAfIC,EAAI,SAAS,SAAS,SAAS,GACRL,EAAI,QAAQ,IAAI,iBAAiB,IAAM,QAE9D4D,EAAQ,CACN,MAAO,OACP,IAAK,qBACL,UAAAhF,EACA,KAAMyB,EAAI,QACZ,CAAC,EAODA,EAAI,WAAa,QAAQa,CAAC,iBAAmBlB,EAAI,SAAW,MAC9D,GAAI,CACF,IAAMkD,EAAS,MAAMC,EAAWnD,EAAKrB,CAAG,EACxC,OAAO8B,EAAK,CAAE,GAAI,GAAM,OAAAyC,CAAO,EAAG,IAAK9C,CAAQ,CACjD,OAASa,EAAU,CAEjB,OAAIA,aAAe,SACVrB,GAAgBqB,EAAKb,CAAQ,GAEtCwD,EAAQ,CACN,MAAO,QACP,IAAK,eAAe3C,GAAK,SAAW,SAAS,GAC7C,UAAArC,EACA,KAAMyB,EAAI,SACV,OAAQ,GACV,CAAC,EACMI,EAAK,CAAE,GAAI,GAAO,MAAO,OAAOQ,GAAK,SAAWA,CAAG,CAAE,EAAG,IAAKb,CAAQ,EAC9E,CAMF,GAAIC,EAAI,WAAa,QAAQa,CAAC,gBAAkBlB,EAAI,SAAW,MAC7D,OAAO,MAAM,cAAcA,EAAKrB,EAAKC,EAAWwB,CAAQ,EAI1D,GAAIC,EAAI,WAAa,QAAQa,CAAC,wBAA0BlB,EAAI,SAAW,OAAQ,CAC7E,MAAM6D,GAAa7D,EAAKrB,CAAG,EAC3B,IAAM+B,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EAOxC8D,EANS3F,EAAE,OAAO,CACtB,GAAIA,EAAE,OAAO,EAAE,IAAI,EAAG,aAAa,EACnC,KAAMA,EAAE,OAAO,EAAE,SAAS,EAC1B,OAAQA,EAAE,OAAO,EAAE,SAAS,EAC5B,GAAIA,EAAE,OAAO,EAAE,SAAS,CAC1B,CAAC,EACqB,UAAUuC,CAAI,EACpC,GAAI,CAACoD,EAAO,QAAS,OAAOrD,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAASqD,EAAO,MAAM,MAAO,CAAE,EAAG,IAAK1D,CAAQ,EAE/H,GAAM,CAAE,GAAA2D,EAAI,KAAAC,EAAM,OAAAC,EAAQ,GAAAC,CAAG,EAAIJ,EAAO,KAClChB,EAAoB,CACxB,GAAAiB,EAAI,KAAAC,EAAM,OAAAC,EAAQ,GAAAC,EAClB,MAAO,CAAE,SAAU,GAAO,UAAW,EAAK,EAC1C,eAAgB,IAClB,EACA,aAAMC,GAAgBxF,EAAKmE,CAAG,EACvBrC,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,QAAS,GAAM,OAAQqC,CAAI,CAAE,EAAG,IAAK1C,CAAQ,CACpF,CAGA,GAAIC,EAAI,WAAa,QAAQa,CAAC,yBAA2BlB,EAAI,SAAW,OACtE,GAAI,CACF,MAAM6D,GAAa7D,EAAKrB,CAAG,EAC3B,IAAM+B,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EAOxC8D,EAJS3F,EAAE,OAAO,CACtB,OAAQA,EAAE,OAAO,EAAE,IAAI,CAAC,EACxB,iBAAkBA,EAAE,OAAO,EAAE,IAAI,CACnC,CAAC,EACqB,UAAUuC,CAAI,EACpC,GAAI,CAACoD,EAAO,QACV,OAAOrD,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAASqD,EAAO,MAAM,MAAO,CAAE,EAAG,IAAK1D,CAAQ,EAG5G,GAAM,CAAE,OAAAoC,EAAQ,iBAAA4B,CAAiB,EAAIN,EAAO,KAGxCO,EACJ,GAAI,CACFA,EAAI,IAAI,IAAID,CAAgB,CAC9B,MAAQ,CACN,OAAO3D,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAAS,oBAAqB,CAAE,EAAG,IAAKL,CAAQ,CAC7G,CAGA,IAAMkE,GAAc3F,EAAI,uBAAyB,IAAM,aACvD,GAAI,CAAC4F,GAAqBF,EAAE,KAAMC,CAAU,EAC1C,OAAO7D,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAAS,QAAQ4D,EAAE,IAAI,cAAe,CAAE,EAAG,IAAKjE,CAAQ,EAIrH,IAAMoE,EAAU,MAAMC,GAAe9F,EAAK6D,EAAQ4B,CAAgB,EAClE,OAAO3D,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,OAAQ+D,EAAQ,GAAI,eAAgBA,EAAQ,cAAe,CAAE,EAAG,IAAKpE,CAAQ,CACpH,OAASsE,EAAQ,CAEf,OAAIA,aAAa,SAAiB9E,GAAgB8E,EAAGtE,CAAQ,GAG7DwD,EAAQ,CACN,MAAO,QACP,IAAK,4BAA4Bc,GAAG,SAAW,SAAS,GACxD,UAAA9F,EACA,KAAMyB,EAAI,SACV,OAAQ,GACV,CAAC,EACMI,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,QAAS,qBAAsB,CAAE,EAAG,IAAKL,CAAQ,EAC5G,CAIF,GAAIC,EAAI,WAAa,QAAQa,CAAC,2BAA6BlB,EAAI,SAAW,OAAQ,CAChF,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMyE,EAAalG,EAAI,sBAAwB,GAC/C,GAAI,CAACkG,EAAY,OAAOpE,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,OAAQ,GAAO,KAAM,6BAA8B,CAAE,EAAG,IAAKL,CAAQ,EAC3H,IAAM0E,EAAI,MAAM,MAAMD,EAAY,CAAE,OAAQ,MAAO,CAAC,EAAE,MAAM,IAAM,IAAI,EAChEE,EAAK,CAAC,CAACD,GAAKA,EAAE,GACpB,OAAOrE,EAAK,CAAE,QAASsE,EAAI,KAAM,CAAE,OAAQA,CAAG,CAAE,EAAGA,EAAK,IAAM,IAAK3E,CAAQ,CAC7E,CAKA,GAAIC,EAAI,WAAa,QAAQa,CAAC,kBAAoBlB,EAAI,SAAW,OAC/D,GAAI,CACF,IAAMU,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxC,CAAE,SAAAgF,CAAS,EAAItE,EAErB,GAAI,CAAC,MAAM,QAAQsE,CAAQ,EACzB,OAAOvE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,eAAgB,QAAS,2BAA4B,CAAE,EAAG,IAAKL,CAAQ,EAGtH,IAAI6E,EAAS,EACb,QAAWC,KAAWF,EACpB,GAAI,CACF,MAAMrG,EAAI,GAAG,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAapB,EAAE,KACDuG,EAAQ,KACRA,EAAQ,SACRA,EAAQ,OAAS,GACjBA,EAAQ,aAAe,GACvBA,EAAQ,MAAQ,GAChBA,EAAQ,QAAU,YAClBA,EAAQ,QAAU,SACpB,EAAE,IAAI,EACND,GACF,OAAShE,EAAK,CACZ2C,EAAQ,QAAShF,EAAW,CAAE,QAAS,qBAAsB,MAAO,OAAOqC,CAAG,CAAE,CAAC,CACnF,CAGF,OAAOR,EAAK,CAAE,QAAS,GAAM,OAAAwE,CAAO,EAAG,IAAK7E,CAAQ,CACtD,OAASa,EAAK,CACZ,OAAA2C,EAAQ,QAAShF,EAAW,CAAE,QAAS,uBAAwB,MAAO,OAAOqC,CAAG,CAAE,CAAC,EAC5ER,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,QAAS,aAAc,CAAE,EAAG,IAAKL,CAAQ,CACpG,CAIF,GAAIC,EAAI,WAAa,QAAQa,CAAC,sBAAwBlB,EAAI,SAAW,MACnE,GAAI,CACF,IAAMwB,EAAS,MAAM7C,EAAI,GAAG,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASnC,EAAE,IAAI,EAEP,OAAO8B,EAAK,CAAE,QAAS,GAAM,KAAMe,EAAO,SAAW,CAAC,CAAE,EAAG,IAAKpB,CAAQ,CAC1E,OAASa,EAAK,CACZ,OAAA2C,EAAQ,QAAShF,EAAW,CAAE,QAAS,sBAAuB,MAAO,OAAOqC,CAAG,CAAE,CAAC,EAC3ER,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,UAAW,CAAE,EAAG,IAAKL,CAAQ,CAC5E,CAIF,GAAIC,EAAI,WAAa,QAAQa,CAAC,iBAAmBlB,EAAI,SAAW,MAC9D,GAAI,CACF,IAAMmF,EAAQ,SAAS9E,EAAI,aAAa,IAAI,OAAO,GAAK,IAAI,EACtD+E,EAAS/E,EAAI,aAAa,IAAI,QAAQ,EAExCgF,EAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,UAONC,EAAmB,CAAC,EAEtBF,IACFC,GAAS,oBACTC,EAAO,KAAKF,CAAM,GAGpBC,GAAS,sCACTC,EAAO,KAAKH,EAAM,SAAS,CAAC,EAE5B,IAAM3D,EAAS,MAAM7C,EAAI,GAAG,QAAQ0G,CAAK,EAAE,KAAK,GAAGC,CAAM,EAAE,IAAI,EAE/D,OAAO7E,EAAK,CAAE,QAAS,GAAM,KAAMe,EAAO,SAAW,CAAC,CAAE,EAAG,IAAKpB,CAAQ,CAC1E,OAASa,EAAK,CACZ,OAAA2C,EAAQ,QAAShF,EAAW,CAAE,QAAS,0BAA2B,MAAO,OAAOqC,CAAG,CAAE,CAAC,EAC/ER,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,UAAW,CAAE,EAAG,IAAKL,CAAQ,CAC5E,CAIF,GAAIC,EAAI,WAAa,QAAQa,CAAC,qBAAuBlB,EAAI,SAAW,MAClE,GAAI,CACF,IAAMmF,EAAQ,SAAS9E,EAAI,aAAa,IAAI,OAAO,GAAK,IAAI,EAEtDmB,EAAS,MAAM7C,EAAI,GAAG,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOnC,EAAE,KAAKwG,CAAK,EAAE,IAAI,EAEnB,OAAO1E,EAAK,CAAE,QAAS,GAAM,KAAMe,EAAO,SAAW,CAAC,CAAE,EAAG,IAAKpB,CAAQ,CAC1E,OAASa,EAAK,CACZ,OAAA2C,EAAQ,QAAShF,EAAW,CAAE,QAAS,qBAAsB,MAAO,OAAOqC,CAAG,CAAE,CAAC,EAC1ER,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,UAAW,CAAE,EAAG,IAAKL,CAAQ,CAC5E,CAIF,GAAIC,EAAI,WAAa,QAAQa,CAAC,qBAAuBlB,EAAI,SAAW,OAClE,GAAI,CACF,IAAMwB,EAAS,MAAMxB,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EAEhD,aAAMrB,EAAI,GAAG,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAYpB,EAAE,KACD6C,EAAO,KACPA,EAAO,SACPA,EAAO,WAAa,EACpBA,EAAO,WAAa,EACpBA,EAAO,OAAS,GAChBA,EAAO,aAAe,GACtBA,EAAO,SAAW,EACpB,EAAE,IAAI,EAECf,EAAK,CAAE,QAAS,EAAK,EAAG,IAAKL,CAAQ,CAC9C,OAASa,EAAK,CACZ,OAAA2C,EAAQ,QAAShF,EAAW,CAAE,QAAS,oBAAqB,MAAO,OAAOqC,CAAG,CAAE,CAAC,EACzER,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,UAAW,CAAE,EAAG,IAAKL,CAAQ,CAC5E,CAMF,GAAIC,EAAI,WAAa,QAAQa,CAAC,sBAAwBlB,EAAI,SAAW,MACnE,GAAI,CACF,IAAMoC,EAAW/B,EAAI,aAAa,IAAI,WAAW,GAAK,UAEhDmB,EAAS,MAAM7C,EAAI,GAAG,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWnC,EAAE,KAAKyD,CAAQ,EAAE,MAAM,EAExB,OAAIZ,EACKf,EAAK,CAAE,QAAS,GAAM,KAAMe,CAAO,EAAG,IAAKpB,CAAQ,EAEnDK,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,YAAa,QAAS,oBAAqB,CAAE,EAAG,IAAKL,CAAQ,CAE9G,OAASa,EAAK,CACZ,OAAA2C,EAAQ,QAAShF,EAAW,CAAE,QAAS,sBAAuB,MAAO,OAAOqC,CAAG,CAAE,CAAC,EAC3ER,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,UAAW,CAAE,EAAG,IAAKL,CAAQ,CAC5E,CAIF,GAAIC,EAAI,WAAa,QAAQa,CAAC,6BAA+BlB,EAAI,SAAW,MAC1E,GAAI,CACF,IAAMoC,EAAW/B,EAAI,aAAa,IAAI,WAAW,GAAK,UAEhDmB,EAAS,MAAM7C,EAAI,GAAG,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUnC,EAAE,KAAKyD,CAAQ,EAAE,MAAM,EAExB,OAAIZ,EACKf,EAAK,CAAE,QAAS,GAAM,KAAMe,CAAO,EAAG,IAAKpB,CAAQ,EAGnDK,EAAK,CACV,QAAS,GACT,KAAM,CACJ,SAAU,UACV,SAAU,4BACV,aAAc,GACd,aAAc,GACd,YAAa,GACb,WAAY,EACd,CACF,EAAG,IAAKL,CAAQ,CAEpB,OAASa,EAAK,CACZ,OAAA2C,EAAQ,QAAShF,EAAW,CAAE,QAAS,oBAAqB,MAAO,OAAOqC,CAAG,CAAE,CAAC,EACzER,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,UAAW,CAAE,EAAG,IAAKL,CAAQ,CAC5E,CAIF,GAAIC,EAAI,WAAa,QAAQa,CAAC,sBAAwBlB,EAAI,SAAW,MAAO,CAC1E,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAG7E,GAAI,CACF,IAAMM,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCoC,EAAW1B,EAAK,UAAY,UAGlC,aAAM/B,EAAI,GAAG,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SA6BpB,EAAE,KACDyD,EACA1B,EAAK,UAAY,GACjBA,EAAK,cAAgB,GACrBA,EAAK,cAAgB,GACrBA,EAAK,YAAc,EAAI,EACvBA,EAAK,qBAAuB,EAC5BA,EAAK,YAAc,GACnBA,EAAK,gBAAkB,EAAI,EAC3BA,EAAK,kBAAoB,GACzBA,EAAK,YAAc,GACnBA,EAAK,iBAAmB,EAAI,CAC9B,EAAE,IAAI,EAECD,EAAK,CAAE,QAAS,EAAK,EAAG,IAAKL,CAAQ,CAC9C,OAASa,EAAK,CACZ,OAAA2C,EAAQ,QAAShF,EAAW,CAAE,QAAS,yBAA0B,MAAO,OAAOqC,CAAG,CAAE,CAAC,EAC9ER,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,UAAW,CAAE,EAAG,IAAKL,CAAQ,CAC5E,CACF,CAOA,GAAIC,EAAI,WAAa,QAAQa,CAAC,kBAAoBlB,EAAI,SAAW,MAC/D,GAAI,CACF,IAAMwB,EAAS,MAAM7C,EAAI,GAAG,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAyBnC,EAAE,MAAM,EAET,GAAI6C,EAAQ,CAEV,IAAM+D,EAAc,CAClB,GAAI/D,EAAO,GACX,WAAYA,EAAO,WACnB,SAAUA,EAAO,SACjB,SAAUA,EAAO,SACjB,SAAUA,EAAO,SACjB,SAAUA,EAAO,SACjB,MAAOA,EAAO,OAAS,KACvB,YAAaA,EAAO,aAAe,KACnC,OAAQA,EAAO,QAAU,YACzB,MAAQA,EAAO,aAAe,MAAQA,EAAO,aAAe,KAAQ,CAClE,KAAMA,EAAO,WACb,KAAMA,EAAO,UACf,EAAI,KACJ,OAAQA,EAAO,QAAU,EACzB,cAAeA,EAAO,eAAiB,KACvC,cAAeA,EAAO,eAAiB,KACvC,sBAAuBA,EAAO,uBAAyB,IACzD,EAEA,OAAOf,EAAK,CAAE,QAAS,GAAM,KAAM8E,CAAY,EAAG,IAAKnF,CAAQ,CACjE,KACE,QAAOK,EAAK,CAAE,QAAS,GAAM,KAAM,IAAK,EAAG,IAAKL,CAAQ,CAE5D,OAASa,EAAK,CACZ,OAAA2C,EAAQ,QAAShF,EAAW,CAAE,QAAS,0BAA2B,MAAO,OAAOqC,CAAG,CAAE,CAAC,EAC/ER,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,QAAS,8BAA+B,CAAE,EAAG,IAAKL,CAAQ,CACrH,CAIF,GAAIC,EAAI,WAAa,QAAQa,CAAC,iBAAmBlB,EAAI,SAAW,MAC9D,GAAI,CACF,IAAMwF,EAAUnF,EAAI,aAAa,IAAI,SAAS,EAE9C,GAAI,CAACmF,EACH,OAAO/E,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,kBAAmB,QAAS,4BAA6B,CAAE,EAAG,IAAKL,CAAQ,EAG1H,IAAMoB,EAAS,MAAM7C,EAAI,GAAG,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAgBnC,EAAE,KAAK6G,CAAO,EAAE,IAAI,EAErB,OAAO/E,EAAK,CAAE,QAAS,GAAM,KAAMe,EAAO,SAAW,CAAC,CAAE,EAAG,IAAKpB,CAAQ,CAC1E,OAASa,EAAK,CACZ,OAAA2C,EAAQ,QAAShF,EAAW,CAAE,QAAS,0BAA2B,MAAO,OAAOqC,CAAG,CAAE,CAAC,EAC/ER,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,QAAS,8BAA+B,CAAE,EAAG,IAAKL,CAAQ,CACrH,CAIF,GAAIC,EAAI,WAAa,QAAQa,CAAC,iBAAmBlB,EAAI,SAAW,OAC9D,GAAI,CACF,IAAMU,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EAG9C,GAAI,CAACU,EAAK,SAAW,OAAOA,EAAK,QAAW,UAAY,CAACA,EAAK,MAAQ,CAACA,EAAK,KAC1E,OAAOD,EAAK,CACV,QAAS,GACT,MAAO,CAAE,KAAM,kBAAmB,QAAS,8CAA+C,CAC5F,EAAG,IAAKL,CAAQ,EAKlB,GAAI,CADe,CAAC,OAAQ,OAAQ,OAAQ,MAAM,EAClC,SAASM,EAAK,IAAI,EAChC,OAAOD,EAAK,CACV,QAAS,GACT,MAAO,CAAE,KAAM,kBAAmB,QAAS,6CAA8C,CAC3F,EAAG,IAAKL,CAAQ,EAIlB,GAAIM,EAAK,MAEH,CADe,CAAC,SAAU,MAAO,QAAQ,EAC7B,SAASA,EAAK,IAAI,EAChC,OAAOD,EAAK,CACV,QAAS,GACT,MAAO,CAAE,KAAM,kBAAmB,QAAS,0CAA2C,CACxF,EAAG,IAAKL,CAAQ,EAKpB,IAAMqF,EAAW,UAAU,KAAK,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,MAAM,EAAG,EAAE,CAAC,GAC1EC,EAAY,IAAI,KAAK,EAAE,YAAY,EAGzC,MAAM/G,EAAI,GAAG,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,SAKpB,EAAE,KACD8G,EACA/E,EAAK,QACLA,EAAK,OACLA,EAAK,KACLA,EAAK,KACLA,EAAK,QAAU,KACfA,EAAK,QAAU,KACfA,EAAK,MAAQ,KACbA,EAAK,QAAU,KACfA,EAAK,YAAc,KACnBgF,CACF,EAAE,IAAI,EAGN,IAAMC,EAAa,CACjB,GAAIF,EACJ,QAAS/E,EAAK,QACd,OAAQA,EAAK,OACb,KAAMA,EAAK,KACX,KAAMA,EAAK,KACX,OAAQA,EAAK,QAAU,KACvB,OAAQA,EAAK,QAAU,KACvB,KAAMA,EAAK,MAAQ,KACnB,OAAQA,EAAK,QAAU,KACvB,WAAYA,EAAK,YAAc,KAC/B,UAAAgF,CACF,EAEA,OAAA9B,EAAQ,OAAQhF,EAAW,CAAE,QAAS,qBAAsB,SAAA6G,EAAU,QAAS/E,EAAK,QAAS,KAAMA,EAAK,IAAK,CAAC,EACvGD,EAAK,CAAE,QAAS,GAAM,KAAMkF,CAAW,EAAG,IAAKvF,CAAQ,CAChE,OAASa,EAAK,CACZ,OAAA2C,EAAQ,QAAShF,EAAW,CAAE,QAAS,0BAA2B,MAAO,OAAOqC,CAAG,CAAE,CAAC,EAC/ER,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,QAAS,4BAA6B,CAAE,EAAG,IAAKL,CAAQ,CACnH,CAIF,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,yBAAyB,CAAC,GAAKlB,EAAI,SAAW,OACxF,GAAI,CACF,IAAMwF,EAAUnF,EAAI,SAAS,MAAM,GAAG,EAAE,MAAM,GAAI,EAAE,EAAE,CAAC,EACjDK,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EAGxC4F,EAAgB,CAAC,YAAa,OAAQ,WAAY,IAAI,EAC5D,GAAI,CAAClF,EAAK,QAAU,CAACkF,EAAc,SAASlF,EAAK,MAAM,EACrD,OAAOD,EAAK,CACV,QAAS,GACT,MAAO,CAAE,KAAM,kBAAmB,QAAS,sDAAuD,CACpG,EAAG,IAAKL,CAAQ,EAIlB,IAAIiF,EAAQ,uEACNC,EAAgB,CAAC5E,EAAK,MAAM,EAElC,OAAI,OAAOA,EAAK,QAAW,WACzB2E,GAAS,uBACTC,EAAO,KAAK5E,EAAK,MAAM,GAGrBA,EAAK,OAAS,OAAOA,EAAK,MAAM,MAAS,UAAY,OAAOA,EAAK,MAAM,MAAS,WAClF2E,GAAS,mCACTC,EAAO,KAAK5E,EAAK,MAAM,KAAMA,EAAK,MAAM,IAAI,GAG9C2E,GAAS,gBACTC,EAAO,KAAKE,CAAO,EAEnB,MAAM7G,EAAI,GAAG,QAAQ0G,CAAK,EAAE,KAAK,GAAGC,CAAM,EAAE,IAAI,EAEhD1B,EAAQ,OAAQhF,EAAW,CAAE,QAAS,sBAAuB,QAAA4G,EAAS,OAAQ9E,EAAK,MAAO,CAAC,EACpFD,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,GAAI,EAAK,CAAE,EAAG,IAAKL,CAAQ,CAClE,OAASa,EAAK,CACZ,OAAA2C,EAAQ,QAAShF,EAAW,CAAE,QAAS,yBAA0B,MAAO,OAAOqC,CAAG,CAAE,CAAC,EAC9ER,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,QAAS,2BAA4B,CAAE,EAAG,IAAKL,CAAQ,CAClH,CAIF,GAAIC,EAAI,WAAa,QAAQa,CAAC,yBAA2BlB,EAAI,SAAW,OACtE,GAAI,CAEF,IAAMwF,GADO,MAAMxF,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,GACzB,QAEjB6F,EAAU,EAEd,OAAIL,GAIFK,GAFe,MAAMlH,EAAI,GAAG,QAAQ,6CAA6C,EAC9E,KAAK6G,CAAO,EAAE,IAAI,GACJ,MAAM,SAAW,EAClC5B,EAAQ,OAAQhF,EAAW,CAAE,QAAS,2BAA4B,QAAA4G,EAAS,QAAAK,CAAQ,CAAC,IAWpFA,GARe,MAAMlH,EAAI,GAAG,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOnC,EAAE,IAAI,GACU,MAAM,SAAW,EAClCiF,EAAQ,OAAQhF,EAAW,CAAE,QAAS,2BAA4B,QAAAiH,CAAQ,CAAC,GAGtEpF,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,QAAAoF,CAAQ,CAAE,EAAG,IAAKzF,CAAQ,CACjE,OAASa,EAAK,CACZ,OAAA2C,EAAQ,QAAShF,EAAW,CAAE,QAAS,iBAAkB,MAAO,OAAOqC,CAAG,CAAE,CAAC,EACtER,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,QAAS,gCAAiC,CAAE,EAAG,IAAKL,CAAQ,CACvH,CAKF,GAAIC,EAAI,WAAa,QAAQa,CAAC,gBAAkBlB,EAAI,SAAW,OAC7D,GAAI,CACF,IAAMU,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxC,CAAE,SAAAoC,EAAU,YAAA0D,EAAa,UAAAC,CAAU,EAAIrF,EAE7C,GAAI,CAAC,MAAM,QAAQqF,CAAS,EAC1B,OAAOtF,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,eAAgB,QAAS,4BAA6B,CAAE,EAAG,IAAKL,CAAQ,EAIvH,MAAMzB,EAAI,GAAG,QAAQ,sEAAsE,EACxF,KAAKyD,GAAY,UAAW0D,GAAe,EAAE,EAAE,IAAI,EAGtD,IAAIb,EAAS,EACb,QAAWe,KAAQD,EACjB,GAAI,CACF,MAAMpH,EAAI,GAAG,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAOpB,EAAE,KACDyD,GAAY,UACZ0D,GAAe,GACfE,EAAK,SACLA,EAAK,SACLA,EAAK,OACLA,EAAK,IACLA,EAAK,MACLA,EAAK,KACLA,EAAK,SACLA,EAAK,aACLA,EAAK,eACLA,EAAK,MACP,EAAE,IAAI,EACNf,GACF,OAAShE,EAAK,CACZ2C,EAAQ,QAAShF,EAAW,CAAE,QAAS,qBAAsB,MAAO,OAAOqC,CAAG,CAAE,CAAC,CACnF,CAGF,OAAOR,EAAK,CAAE,QAAS,GAAM,OAAAwE,CAAO,EAAG,IAAK7E,CAAQ,CACtD,OAASa,EAAK,CACZ,OAAA2C,EAAQ,QAAShF,EAAW,CAAE,QAAS,qBAAsB,MAAO,OAAOqC,CAAG,CAAE,CAAC,EAC1ER,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,UAAW,CAAE,EAAG,IAAKL,CAAQ,CAC5E,CAIF,GAAIC,EAAI,WAAa,QAAQa,CAAC,iBAAmBlB,EAAI,SAAW,MAC9D,GAAI,CACF,IAAMoC,EAAW/B,EAAI,aAAa,IAAI,WAAW,GAAK,UAChDyF,EAAczF,EAAI,aAAa,IAAI,aAAa,EAElDgF,EAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UASNC,EAAmB,CAAClD,CAAQ,EAE9B0D,IACFT,GAAS,uBACTC,EAAO,KAAKQ,CAAW,GAGzBT,GAAS,yBAET,IAAM7D,EAAS,MAAM7C,EAAI,GAAG,QAAQ0G,CAAK,EAAE,KAAK,GAAGC,CAAM,EAAE,IAAI,EAE/D,OAAO7E,EAAK,CAAE,QAAS,GAAM,KAAMe,EAAO,SAAW,CAAC,CAAE,EAAG,IAAKpB,CAAQ,CAC1E,OAASa,EAAK,CACZ,OAAA2C,EAAQ,QAAShF,EAAW,CAAE,QAAS,0BAA2B,MAAO,OAAOqC,CAAG,CAAE,CAAC,EAC/ER,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,UAAW,CAAE,EAAG,IAAKL,CAAQ,CAC5E,CAMF,GAAIC,EAAI,WAAa,QAAQa,CAAC,uBAAyBlB,EAAI,SAAW,OAAQ,CAC5E,MAAM6D,GAAa7D,EAAKrB,CAAG,EAC3B,GAAI,CACF,IAAM+B,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EAexCW,EAdSxC,EAAE,OAAO,CACtB,KAAMA,EAAE,OAAO,EAAE,IAAI,CAAC,EACtB,KAAMA,EAAE,KAAK,CAAC,sBAAuB,cAAe,eAAgB,iBAAiB,CAAC,EACtF,MAAOA,EAAE,MAAM,CAACA,EAAE,OAAO,EAAGA,EAAE,OAAO,CAAC,CAAC,EACvC,eAAgBA,EAAE,OAAO,EAAE,SAAS,EACpC,QAASA,EAAE,OAAO,EAAE,SAAS,EAC7B,UAAWA,EAAE,OAAO,EAAE,SAAS,EAC/B,OAAQA,EAAE,QAAQ,EAAE,QAAQ,EAAI,EAChC,SAAUA,EAAE,OAAO,CACjB,YAAaA,EAAE,OAAO,EAAE,SAAS,EACjC,aAAcA,EAAE,OAAO,EAAE,SAAS,CACpC,CAAC,EAAE,SAAS,CACd,CAAC,EAEmB,MAAMuC,CAAI,EACxB,CAAE,iBAAAuF,CAAiB,EAAI,KAAM,uCAG7BzE,EAAS,MAFM,IAAIyE,EAAiBtH,CAAG,EAEX,gBAAgB,CAChD,GAAGgC,EACH,UAAW,OACb,CAAC,EAED,OAAIa,EAAO,QACFf,EAAK,CAAE,QAAS,GAAM,KAAMe,EAAO,IAAK,EAAG,IAAKpB,CAAQ,EAExDK,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,sBAAuB,QAASe,EAAO,KAAM,CAAE,EAAG,IAAKpB,CAAQ,CAEhH,OAASa,EAAU,CACjB,OAAIA,EAAI,OACCR,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,mBAAoB,QAASQ,EAAI,OAAO,CAAC,EAAE,OAAQ,CAAE,EAAG,IAAKb,CAAQ,EAE7GK,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,sBAAuB,QAASQ,EAAI,OAAQ,CAAE,EAAG,IAAKb,CAAQ,CAC7G,CACF,CAGA,GAAIC,EAAI,WAAa,QAAQa,CAAC,qBAAuBlB,EAAI,SAAW,MAAO,CACzE,MAAM6D,GAAa7D,EAAKrB,CAAG,EAC3B,GAAI,CACF,GAAM,CAAE,iBAAAsH,CAAiB,EAAI,KAAM,uCAE7BC,EAAa,MADE,IAAID,EAAiBtH,CAAG,EACP,eAAe,EACrD,OAAO8B,EAAK,CAAE,QAAS,GAAM,KAAMyF,CAAW,EAAG,IAAK9F,CAAQ,CAChE,OAASa,EAAU,CACjB,OAAOR,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,oBAAqB,QAASQ,EAAI,OAAQ,CAAE,EAAG,IAAKb,CAAQ,CAC3G,CACF,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,gCAAgC,CAAC,GAAKlB,EAAI,SAAW,OAAQ,CACvG,MAAM6D,GAAa7D,EAAKrB,CAAG,EAC3B,GAAI,CACF,IAAMwH,EAAO9F,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EAChC,CAAE,iBAAA4F,CAAiB,EAAI,KAAM,uCAG7BzE,EAAS,MAFM,IAAIyE,EAAiBtH,CAAG,EAEX,oBAAoBwH,CAAI,EAE1D,OAAI3E,EAAO,QACFf,EAAK,CAAE,QAAS,EAAK,EAAG,IAAKL,CAAQ,EAErCK,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,0BAA2B,QAASe,EAAO,KAAM,CAAE,EAAG,IAAKpB,CAAQ,CAEpH,OAASa,EAAU,CACjB,OAAOR,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,0BAA2B,QAASQ,EAAI,OAAQ,CAAE,EAAG,IAAKb,CAAQ,CACjH,CACF,CAGA,GAAIC,EAAI,WAAa,QAAQa,CAAC,wBAA0BlB,EAAI,SAAW,OAAQ,CAC7E,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMM,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EAExC8D,EADS3F,EAAE,OAAO,CAAE,OAAQA,EAAE,OAAO,EAAE,IAAI,CAAC,EAAG,YAAaA,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,IAAI,IAAI,EAAE,QAAQ,EAAE,CAAE,CAAC,EACrF,UAAUuC,CAAI,EACpC,GAAI,CAACoD,EAAO,QAAS,OAAOrD,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAASqD,EAAO,MAAM,MAAO,CAAE,EAAG,IAAK1D,CAAQ,EAC/H,GAAM,CAAE,OAAAoC,EAAQ,YAAA4D,CAAY,EAAItC,EAAO,KAEjChB,EAAM,MAAMC,GAAapE,EAAK6D,CAAM,EACpCzB,EAAQ,MAAMsF,GAAoB1H,EAAK,CAAE,UAAWmE,EAAI,GAAI,WAAYsD,CAAY,CAAC,EAErFE,EAAY,GADL3H,EAAI,WAAa,6BACL,WAAW,mBAAmBoC,CAAK,CAAC,GAE7D,OAAON,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,UAAA6F,CAAU,CAAE,EAAG,IAAKlG,CAAQ,CACnE,CAGA,GAAIC,EAAI,WAAa,QAAQa,CAAC,uBAAyBlB,EAAI,SAAW,OAAQ,CAC5E,MAAM6D,GAAa7D,EAAKrB,CAAG,EAC3B,IAAM+B,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,IAAM,IAAI,EAC9C,GAAI,CAACU,GAAM,QAAU,OAAOA,EAAK,OAAU,SACzC,OAAOD,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAAS,yBAA0B,CAAE,EAAG,IAAKL,CAAQ,EAElH,IAAMoE,EAAU,MAAM+B,GAAY5H,EAAK+B,EAAK,OAAQA,EAAK,KAAK,EAC9D,OAAOD,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,QAAS,GAAM,MAAO+D,EAAQ,KAAM,CAAE,EAAG,IAAKpE,CAAQ,CAC7F,CAGA,GAAIC,EAAI,WAAa,QAAQa,CAAC,+BAAiClB,EAAI,SAAW,OAAQ,CACpF,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMM,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,IAAM,IAAI,EAC9C,MAAI,CAACU,GAAM,QAAU,CAACA,GAAM,WAAa,CAACA,GAAM,eAAiB,CAACA,GAAM,cAC/DD,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAAS,iDAAkD,CAAE,EAAG,IAAKL,CAAQ,GAE1I,MAAMzB,EAAI,SAAS,IACjB,MAAM+B,EAAK,MAAM,GACjB,KAAK,UAAU,CACb,UAAWA,EAAK,UAChB,cAAeA,EAAK,cACpB,cAAeA,EAAK,cACpB,WAAYA,EAAK,YAAc,IACjC,CAAC,CACH,EACOD,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,OAAQ,EAAK,CAAE,EAAG,IAAKL,CAAQ,EACtE,CAIA,GAAIC,EAAI,WAAa,QAAQa,CAAC,mBAAqBlB,EAAI,SAAW,MAAO,CACvE,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMoC,EAASnC,EAAI,aAAa,IAAI,QAAQ,EAC5C,GAAI,CAACmC,EAAQ,OAAO/B,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAAS,iBAAkB,CAAE,EAAG,IAAKL,CAAQ,EAErH,IAAMoG,EAAM7H,EAAI,aACV8H,EAAW9H,EAAI,gBACrB,GAAI,CAAC6H,GAAO,CAACC,EACX,OAAOhG,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,SAAU,QAAS,gDAAiD,CAAE,EAAG,IAAKL,CAAQ,EAGrI,IAAMgB,EAAQ,mBAAmB,0FAA0F,EACrHsF,EAAU,6EAA6E,mBAAmBF,CAAG,CAAC,iBAAiB,mBAAmBC,CAAQ,CAAC,UAAUrF,CAAK,6CAA6C,mBAAmBoB,CAAM,CAAC,GACvP,OAAO/B,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,IAAKiG,CAAQ,CAAE,EAAG,IAAKtG,CAAQ,CACtE,CAIA,GAAIC,EAAI,WAAa,QAAQa,CAAC,sBAAwBlB,EAAI,SAAW,MAAO,CAC1E,IAAMmG,EAAO9F,EAAI,aAAa,IAAI,MAAM,EAClCmC,EAASnC,EAAI,aAAa,IAAI,OAAO,GAAK,GAEhD,GAAI,CAAC8F,GAAQ,CAAC3D,EAAQ,OAAO,IAAI,SAAS,qBAAsB,CAAE,OAAQ,GAAI,CAAC,EAE/E,IAAMgE,EAAM7H,EAAI,aACVgI,EAAKhI,EAAI,iBACT8H,EAAW9H,EAAI,gBAEf+B,EAAO,IAAI,gBAAgB,CAC/B,KAAAyF,EACA,UAAWK,EACX,cAAeG,EACf,aAAcF,EACd,WAAY,oBACd,CAAC,EAEK3B,EAAI,MAAM,MAAM,sCAAuC,CAC3D,OAAQ,OACR,QAAS,CAAE,eAAgB,mCAAoC,EAC/D,KAAApE,CACF,CAAC,EAED,GAAI,CAACoE,EAAE,GAAI,OAAO,IAAI,SAAS,wBAAyB,CAAE,OAAQ,GAAI,CAAC,EAEvE,IAAM8B,EAAM,MAAM9B,EAAE,KAAK,EAGnBhC,EAAM,MAAMC,GAAapE,EAAK6D,CAAM,EAE1C,OAAAM,EAAI,QAAU,CAAE,GAAG8D,CAAI,EACvB,MAAMzC,GAAgBxF,EAAKmE,CAAG,EAEvB,IAAI,SAAS,gDAAiD,CAAE,OAAQ,GAAI,CAAC,CACtF,CAIA,GAAIzC,EAAI,WAAa,QAAQa,CAAC,+BAAiClB,EAAI,SAAW,OAAQ,CACpF,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMM,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EAKxC8D,EAJS3F,EAAE,OAAO,CACtB,OAAQA,EAAE,OAAO,EAAE,IAAI,CAAC,EACxB,QAASA,EAAE,OAAOA,EAAE,QAAQ,CAAC,EAAE,SAAS,CAC1C,CAAC,EACqB,UAAUuC,CAAI,EACpC,GAAI,CAACoD,EAAO,QAAS,OAAOrD,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAASqD,EAAO,MAAM,MAAO,CAAE,EAAG,IAAK1D,CAAQ,EAE/H,GAAM,CAAE,OAAAoC,EAAQ,QAAAqE,CAAQ,EAAI/C,EAAO,KAC7BU,EAAU,MAAMsC,GAAenI,EAAK6D,EAAQ,CAAE,QAAAqE,CAAQ,CAAC,EAC7D,OAAOpG,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,OAAQ+D,EAAQ,GAAI,MAAOA,EAAQ,KAAM,CAAE,EAAG,IAAKpE,CAAQ,CAClG,CAIA,GAAIC,EAAI,WAAa,QAAQa,CAAC,iCAAmClB,EAAI,SAAW,OAAQ,CACtF,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMM,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EAMxC8D,EALS3F,EAAE,OAAO,CACtB,OAAQA,EAAE,OAAO,EAAE,IAAI,CAAC,EACxB,QAASA,EAAE,KAAK,CAAC,KAAM,KAAM,KAAM,SAAU,GAAG,CAAC,EACjD,IAAKA,EAAE,OAAO,EAAE,IAAI,CACtB,CAAC,EACqB,UAAUuC,CAAI,EACpC,GAAI,CAACoD,EAAO,QAAS,OAAOrD,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAASqD,EAAO,MAAM,MAAO,CAAE,EAAG,IAAK1D,CAAQ,EAE/H,GAAM,CAAE,OAAAoC,EAAQ,QAAAuE,EAAS,IAAKC,CAAW,EAAIlD,EAAO,KAC9CU,EAAU,MAAMyC,GAAkBtI,EAAK6D,EAAQuE,EAASC,CAAU,EACxE,OAAOvG,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,OAAQ+D,EAAQ,GAAI,QAAAuC,EAAS,QAASC,CAAW,CAAE,EAAG,IAAK5G,CAAQ,CAC1G,CAIA,GAAIC,EAAI,WAAa,QAAQa,CAAC,+BAAiClB,EAAI,SAAW,OAAQ,CACpF,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMM,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EAMxC8D,EALS3F,EAAE,OAAO,CACtB,OAAQA,EAAE,OAAO,EAAE,IAAI,CAAC,EACxB,UAAWA,EAAE,OAAO,EAAE,IAAI,CAAC,EAC3B,cAAeA,EAAE,OAAO,EAAE,IAAI,CAAC,CACjC,CAAC,EACqB,UAAUuC,CAAI,EACpC,GAAI,CAACoD,EAAO,QAAS,OAAOrD,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAASqD,EAAO,MAAM,MAAO,CAAE,EAAG,IAAK1D,CAAQ,EAE/H,GAAM,CAAE,OAAAoC,EAAQ,UAAA0E,EAAW,cAAAC,CAAc,EAAIrD,EAAO,KAC9CU,EAAU,MAAM4C,GAAoBzI,EAAK6D,EAAQ0E,EAAWC,CAAa,EAC/E,OAAO1G,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,OAAQ+D,EAAQ,GAAI,WAAY,EAAK,CAAE,EAAG,IAAKpE,CAAQ,CAC9F,CAKA,GAAIC,EAAI,WAAa,QAAQa,CAAC,gBAAkBlB,EAAI,SAAW,MAAO,CACpE,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,cAAc,EACxC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMgC,EAAWuC,EAAK,SAChB7B,EAAM,MAAMC,GAAapE,EAAKyD,CAAQ,EAExCiF,EAAS,KACb,OAAIvE,EAAI,iBAENuE,EAAS,MADGvE,EAAI,eAAe,MAAM,EAAE,CACrB,IAEbrC,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,GAAIqC,EAAI,GAAI,MAAOA,EAAI,MAAO,kBAAmBuE,CAAO,CAAE,EAAG,IAAKjH,CAAQ,CACjH,CAGA,GAAIC,EAAI,WAAa,QAAQa,CAAC,wBAA0BlB,EAAI,SAAW,OAAQ,CAC7E,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,cAAc,EACxC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMgC,EAAWuC,EAAK,SAChBjE,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EAExC8D,EADS3F,EAAE,OAAO,CAAE,iBAAkBA,EAAE,OAAO,EAAE,IAAI,CAAE,CAAC,EACxC,UAAUuC,CAAI,EACpC,GAAI,CAACoD,EAAO,QAAS,OAAOrD,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAASqD,EAAO,MAAM,MAAO,CAAE,EAAG,IAAK1D,CAAQ,EAE/H,IAAMiE,EAAI,IAAI,IAAIP,EAAO,KAAK,gBAAgB,EAExCQ,GAAc3F,EAAI,uBAAyB,IAAM,aACvD,OAAK4F,GAAqBF,EAAE,KAAMC,CAAU,GAI5C,MAAMG,GAAe9F,EAAKyD,EAAUiC,EAAE,SAAS,CAAC,EACzC5D,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,MAAO,EAAK,CAAE,EAAG,IAAKL,CAAQ,GAJ1DK,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAAS,QAAQ4D,EAAE,IAAI,cAAe,CAAE,EAAG,IAAKjE,CAAQ,CAKvH,CAGA,GAAIC,EAAI,WAAa,QAAQa,CAAC,sBAAwBlB,EAAI,SAAW,OAAQ,CAC3E,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,cAAc,EACxC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMgC,EAAWuC,EAAK,SAChBjE,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EAExC8D,EADS3F,EAAE,OAAO,CAAE,SAAUA,EAAE,QAAQ,EAAE,SAAS,EAAG,UAAWA,EAAE,QAAQ,EAAE,SAAS,CAAE,CAAC,EACzE,UAAUuC,CAAI,EACpC,GAAI,CAACoD,EAAO,QAAS,OAAOrD,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAASqD,EAAO,MAAM,MAAO,CAAE,EAAG,IAAK1D,CAAQ,EAC/H,IAAMoE,EAAU,MAAM+B,GAAY5H,EAAKyD,EAAU0B,EAAO,IAAI,EAC5D,OAAOrD,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,MAAO+D,EAAQ,KAAM,CAAE,EAAG,IAAKpE,CAAQ,CAC9E,CAGA,GAAIC,EAAI,WAAa,QAAQa,CAAC,6BAA+BlB,EAAI,SAAW,OAAQ,CAClF,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,cAAc,EACxC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMgC,EAAWuC,EAAK,SAChB7B,EAAM,MAAMC,GAAapE,EAAKyD,CAAQ,EAE5C,GAAI,CAACU,EAAI,MAAM,UAAY,CAACA,EAAI,eAC9B,OAAOrC,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,gBAAiB,QAAS,uCAAwC,CAAE,EAAG,IAAKL,CAAQ,EAEnI,GAAI,CACF,IAAM0E,EAAI,MAAM,MAAMhC,EAAI,eAAgB,CACxC,OAAQ,OACR,QAAS,CAAE,eAAgB,kBAAmB,EAC9C,KAAM,KAAK,UAAU,CAAE,KAAM,OAAQ,OAAQV,EAAU,GAAI,KAAK,IAAI,CAAE,CAAC,CACzE,CAAC,EACD,OAAO3B,EAAK,CAAE,QAASqE,EAAE,GAAI,KAAM,CAAE,OAAQA,EAAE,MAAO,CAAE,EAAG,IAAK1E,CAAQ,CAC1E,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,QAASiE,GAAG,SAAW,gBAAiB,CAAE,EAAG,IAAKtE,CAAQ,CACrH,CACF,CAKA,GAAIC,EAAI,WAAa,QAAQa,CAAC,mBAAqBlB,EAAI,SAAW,OAAQ,CAExE,GAAI,CAACrB,EAAI,mBAAqB,CAACA,EAAI,sBACjC,OAAO8B,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,kBAAmB,QAAS,uBAAwB,CAAE,EAAG,IAAKL,CAAQ,EAGrH,IAAMkH,EAAM,MAAMtH,EAAI,KAAK,EAAE,MAAM,IAAM,IAAI,EAC7C,GAAI,CAACsH,EAAK,OAAO,IAAI,SAAS,WAAY,CAAE,OAAQ,GAAI,CAAC,EAEzD,GAAI,CACF,IAAMC,EAAOD,EAAI,KAEX9E,EAAS8E,EAAI,MAAM,QAAQ,UAAU,QAAUA,EAAI,MAAM,QAAQ,UAAU,UACjF,GAAI,CAAC9E,EAAQ,OAAO,IAAI,SAAS,KAAM,CAAE,OAAQ,GAAI,CAAC,EAGtD,GAAI+E,IAAS,iCAAmCA,IAAS,gCAAiC,CACxF,IAAMC,EAAOF,EAAI,KAAK,QAAQ,MAAM,UAAYA,EAAI,KAAK,QAAQ,OAAO,OAAO,CAAC,GAAG,OAAO,UAAY,GAChGT,EAAU,uBAAuB,KAAKW,CAAI,EAC1C1E,EAAM,MAAMC,GAAapE,EAAK6D,CAAM,EAC1CM,EAAI,MAAQ,CAAE,SAAU,CAAC+D,EAAS,UAAWA,CAAQ,EACrD,MAAM1C,GAAgBxF,EAAKmE,CAAG,CAChC,CACF,MAAY,CAEZ,CAEA,OAAO,IAAI,SAAS,KAAM,CAAE,OAAQ,GAAI,CAAC,CAC3C,CAKA,GAAIzC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,iCAAiC,CAAC,GAAKlB,EAAI,SAAW,OAAQ,CACxG,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMoF,EAAUnF,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EACnCK,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCwC,EAAS9B,EAAK,QAAU,UAExBqD,EAAKpF,EAAI,WAAW,WAAW,GAAG6D,CAAM,IAAIgD,CAAO,EAAE,EACrDiC,EAAO9I,EAAI,WAAW,IAAIoF,CAAE,EAC5B2D,EAAW,CAAE,OAAAlF,EAAQ,QAAAgD,EAAS,GAAG9E,CAAK,EACtCoE,EAAI,MAAM2C,EAAK,MAAM,kBAAmB,CAAE,OAAQ,OAAQ,KAAM,KAAK,UAAUC,CAAQ,CAAE,CAAC,EAChG,OAAOjH,EAAK,MAAMqE,EAAE,KAAK,EAAGA,EAAE,OAAQ1E,CAAQ,CAChD,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,kCAAkC,CAAC,GAAKlB,EAAI,SAAW,OAAQ,CACzG,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMoF,EAAUnF,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EAEnCmC,GADO,MAAMxC,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,GAC1B,QAAU,UAExB+D,EAAKpF,EAAI,WAAW,WAAW,GAAG6D,CAAM,IAAIgD,CAAO,EAAE,EAErDV,EAAI,MADGnG,EAAI,WAAW,IAAIoF,CAAE,EACb,MAAM,mBAAoB,CAAE,OAAQ,MAAO,CAAC,EACjE,OAAOtD,EAAK,MAAMqE,EAAE,KAAK,EAAGA,EAAE,OAAQ1E,CAAQ,CAChD,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,kCAAkC,CAAC,GAAKlB,EAAI,SAAW,MAAO,CACxG,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMoF,EAAUnF,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EACnCmC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UAE3C0D,EAAKpF,EAAI,WAAW,WAAW,GAAG6D,CAAM,IAAIgD,CAAO,EAAE,EAErDV,EAAI,MADGnG,EAAI,WAAW,IAAIoF,CAAE,EACb,MAAM,kBAAkB,EAC7C,OAAOtD,EAAK,MAAMqE,EAAE,KAAK,EAAGA,EAAE,OAAQ1E,CAAQ,CAChD,CAKA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,2BAA2B,CAAC,GAAKlB,EAAI,SAAW,OAAQ,CAClG,IAAMwF,EAAUnF,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EACnCK,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCwC,EAAS9B,EAAK,QAAU,UAGxBiH,EAAK3H,EAAI,QAAQ,IAAI,kBAAkB,GAAKA,EAAI,QAAQ,IAAI,iBAAiB,GAAK,UAClF4H,EAAK5H,EAAI,QAAQ,IAAI,YAAY,GAAK,GACtC6H,EAAW,GAAGF,CAAE,IAAIC,CAAE,GAAG,UAAU,EAAG,EAAE,EAExC7D,EAAKpF,EAAI,WAAW,WAAW,GAAG6D,CAAM,IAAIgD,CAAO,EAAE,EACrDiC,EAAO9I,EAAI,WAAW,IAAIoF,CAAE,EAC5B2D,EAAW,CAAE,YAAahH,EAAK,YAAa,SAAAmH,CAAS,EACrD/C,EAAI,MAAM2C,EAAK,MAAM,kBAAmB,CAAE,OAAQ,OAAQ,KAAM,KAAK,UAAUC,CAAQ,CAAE,CAAC,EAChG,OAAOjH,EAAK,MAAMqE,EAAE,KAAK,EAAGA,EAAE,OAAQ1E,CAAQ,CAChD,CAKA,GAAIC,EAAI,WAAa,QAAQa,CAAC,iBAAmBlB,EAAI,SAAW,OAAQ,CACtE,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMM,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCwC,EAAS9B,EAAK,QAAU,UACxBG,EAAM,KAAK,IAAI,EACrB,OAAAH,EAAK,UAAYA,EAAK,WAAaG,EACnCH,EAAK,UAAYG,EACjB,MAAMiH,GAASnJ,EAAK6D,EAAQ9B,CAAI,EACzBD,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,GAAIC,EAAK,EAAG,CAAE,EAAG,IAAKN,CAAQ,CACrE,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,sBAAsB,CAAC,GAAKlB,EAAI,SAAW,QAAS,CAC9F,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAM2H,EAAU1H,EAAI,SAAS,MAAM,GAAG,EAAE,IAAI,EACtCK,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCwC,EAAS9B,EAAK,QAAU,UAExBsH,EAAM,MAAMC,GAAStJ,EAAK6D,EAAQuF,CAAO,EAC/C,GAAI,CAACC,EAAK,OAAOvH,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAErF,IAAM8H,EAAO,CAAE,GAAGF,EAAK,GAAGtH,EAAM,UAAW,KAAK,IAAI,CAAE,EACtD,aAAMoH,GAASnJ,EAAK6D,EAAQ0F,CAAI,EACzBzH,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,GAAIsH,CAAQ,CAAE,EAAG,IAAK3H,CAAQ,CACrE,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,sBAAsB,CAAC,GAAKlB,EAAI,SAAW,SAAU,CAC/F,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAM2H,EAAU1H,EAAI,SAAS,MAAM,GAAG,EAAE,IAAI,EACtCmC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UAEjD,aAAM8H,GAAYxJ,EAAK6D,EAAQuF,CAAO,EAC/BtH,EAAK,CAAE,QAAS,EAAK,EAAG,IAAKL,CAAQ,CAC9C,CAKA,GAAIC,EAAI,WAAa,QAAQa,CAAC,WAAalB,EAAI,SAAW,MAAO,CAC/D,IAAMwC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UAC3C+H,EAAO,MAAMC,GAAW1J,EAAK6D,CAAM,EACzC,OAAO/B,EAAK,CAAE,QAAS,GAAM,KAAM2H,CAAK,EAAG,IAAKhI,CAAQ,CAC1D,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,gBAAgB,CAAC,GAAKlB,EAAI,SAAW,MAAO,CACtF,IAAM+H,EAAU1H,EAAI,SAAS,MAAM,GAAG,EAAE,IAAI,EACtCmC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UAE3CiI,EAAK,MAAML,GAAStJ,EAAK6D,EAAQuF,CAAO,EAC9C,OAAKO,EAEE7H,EAAK,CAAE,QAAS,GAAM,KAAM6H,CAAG,EAAG,IAAKlI,CAAQ,EAFtCK,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,CAGtF,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,qBAAqB,CAAC,GAAKlB,EAAI,SAAW,OAAQ,CAC5F,IAAM+H,EAAU1H,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EACnCK,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCwC,EAAS9B,EAAK,QAAU,UACxB6H,EAAS7H,EAAK,QAAU,YACxB8H,EAAO9H,EAAK,KAElB,MAAK,CAAC,MAAO,KAAM,OAAO,EAAE,SAAS8H,CAAI,GAIzC,MAAMC,GAAQ9J,EAAK6D,EAAQuF,EAASQ,EAAQC,CAAI,EACzC/H,EAAK,CAAE,QAAS,EAAK,EAAG,IAAKL,CAAQ,GAJnCK,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAAS,2BAA4B,CAAE,EAAG,IAAKL,CAAQ,CAKtH,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,wBAAwB,CAAC,GAAKlB,EAAI,SAAW,OAAQ,CAC/F,IAAM+H,EAAU1H,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EACnCK,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCwC,EAAS9B,EAAK,QAAU,UACxB6H,EAAS7H,EAAK,QAAU,YAE9B,aAAMgI,GAAW/J,EAAK6D,EAAQuF,EAASQ,CAAM,EACtC9H,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,GAAI,KAAK,IAAI,CAAE,CAAE,EAAG,IAAKL,CAAQ,CACxE,CAKA,GAAIC,EAAI,WAAa,QAAQa,CAAC,qBAAuBlB,EAAI,SAAW,OAAQ,CAC1E,IAAMU,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCwC,EAAS9B,EAAK,QAAU,UACxB6H,EAAS7H,EAAK,QAAU,YACxBiI,EAAWjI,EAAK,UAAY,UAC5BK,EAAQL,EAAK,MAEnB,OAAKK,GAIL,MAAM6H,GAAejK,EAAK6D,EAAQ+F,EAAQI,EAAU5H,CAAK,EAClDN,EAAK,CAAE,QAAS,EAAK,EAAG,IAAKL,CAAQ,GAJnCK,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAAS,gBAAiB,CAAE,EAAG,IAAKL,CAAQ,CAK3G,CAKA,GAAIC,EAAI,WAAa,QAAQa,CAAC,kBAAoBlB,EAAI,SAAW,OAAQ,CACvE,IAAMU,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCwC,EAAS9B,EAAK,QAAU,UACxBmI,EAASnI,EAAK,OACdK,EAAQL,EAAK,MAEnB,GAAI,CAACK,EACH,OAAON,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAAS,gBAAiB,CAAE,EAAG,IAAKL,CAAQ,EAIzG,IAAM0I,EAAY,WAAWtG,CAAM,eAC7BuG,EAAa,MAAMpK,EAAI,SAAS,IAAImK,EAAW,MAAM,GAAmB,CAAC,EAO/E,GANKC,EAAS,SAAShI,CAAK,IAC1BgI,EAAS,KAAKhI,CAAK,EACnB,MAAMpC,EAAI,SAAS,IAAImK,EAAW,KAAK,UAAUC,CAAQ,CAAC,GAIxDF,EAAQ,CACV,IAAMG,EAAU,WAAWxG,CAAM,SAASqG,CAAM,UAC1CI,EAAe,MAAMtK,EAAI,SAAS,IAAIqK,EAAS,MAAM,GAAmB,CAAC,EAC1EC,EAAW,SAASlI,CAAK,IAC5BkI,EAAW,KAAKlI,CAAK,EACrB,MAAMpC,EAAI,SAAS,IAAIqK,EAAS,KAAK,UAAUC,CAAU,CAAC,EAE9D,CAEA,OAAOxI,EAAK,CAAE,QAAS,EAAK,EAAG,IAAKL,CAAQ,CAC9C,CAKA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,sBAAsB,CAAC,GAAKlB,EAAI,SAAW,MAAO,CAC5F,IAAMkJ,EAAW7I,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EACpC8I,EAAS9I,EAAI,aAAa,IAAI,QAAQ,GAAK,IAAI,KAAK,EAAE,YAAY,EAAE,SAAS,EAEnF,GAAI,CAEF,IAAM+I,EAAc,IADEzK,EAAI,sBAAwB,IAAI,QAAQ,WAAY,EAAE,CACzC,iBAAiBuK,CAAQ,WAAWC,CAAM,GACvErE,EAAI,MAAM,MAAMsE,CAAW,EAC3BzI,EAAO,MAAMmE,EAAE,KAAK,EAC1B,MAAI,CAACA,EAAE,IAAM,CAACnE,EAAK,GACVF,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,iBAAkB,QAASE,EAAK,SAAW,QAAS,CAAE,EAAGmE,EAAE,OAAQ1E,CAAQ,EAEnHK,EAAK,CAAE,QAAS,GAAM,KAAME,EAAK,IAAK,EAAG,IAAKP,CAAQ,CAC/D,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,cAAe,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CACnG,CACF,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,yBAAyB,CAAC,GAAKlB,EAAI,SAAW,MAAO,CAC/F,IAAMkJ,EAAW7I,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EACpC8I,EAAS9I,EAAI,aAAa,IAAI,QAAQ,GAAK,IAAI,KAAK,EAAE,YAAY,EAAE,SAAS,EAEnF,GAAI,CAEF,IAAM+I,EAAc,IADEzK,EAAI,sBAAwB,IAAI,QAAQ,WAAY,EAAE,CACzC,oBAAoBuK,CAAQ,WAAWC,CAAM,GAC1ErE,EAAI,MAAM,MAAMsE,CAAW,EAC3BzI,EAAO,MAAMmE,EAAE,KAAK,EAC1B,MAAI,CAACA,EAAE,IAAM,CAACnE,EAAK,GACVF,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,iBAAkB,QAASE,EAAK,SAAW,QAAS,CAAE,EAAGmE,EAAE,OAAQ1E,CAAQ,EAEnHK,EAAK,CAAE,QAAS,GAAM,KAAME,EAAK,IAAK,EAAG,IAAKP,CAAQ,CAC/D,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,cAAe,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CACnG,CACF,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,wBAAwB,CAAC,GAAKlB,EAAI,SAAW,MAAO,CAC9F,IAAMkJ,EAAW7I,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EACpC8I,EAAS9I,EAAI,aAAa,IAAI,QAAQ,GAAK,IAAI,KAAK,EAAE,YAAY,EAAE,SAAS,EAEnF,GAAI,CAEF,IAAM+I,EAAc,IADEzK,EAAI,sBAAwB,IAAI,QAAQ,WAAY,EAAE,CACzC,mBAAmBuK,CAAQ,WAAWC,CAAM,GACzErE,EAAI,MAAM,MAAMsE,CAAW,EAC3BzI,EAAO,MAAMmE,EAAE,KAAK,EAC1B,MAAI,CAACA,EAAE,IAAM,CAACnE,EAAK,GACVF,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,iBAAkB,QAASE,EAAK,SAAW,QAAS,CAAE,EAAGmE,EAAE,OAAQ1E,CAAQ,EAEnHK,EAAK,CAAE,QAAS,GAAM,KAAME,EAAK,IAAK,EAAG,IAAKP,CAAQ,CAC/D,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,cAAe,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CACnG,CACF,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,wBAAwB,CAAC,GAAKlB,EAAI,SAAW,MAAO,CAC9F,IAAMkJ,EAAW7I,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EAE1C,GAAI,CAEF,IAAM+I,EAAc,IADEzK,EAAI,sBAAwB,IAAI,QAAQ,WAAY,EAAE,CACzC,mBAAmBuK,CAAQ,GACxDpE,EAAI,MAAM,MAAMsE,CAAW,EAC3BzI,EAAO,MAAMmE,EAAE,KAAK,EAC1B,MAAI,CAACA,EAAE,IAAM,CAACnE,EAAK,GACVF,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,iBAAkB,QAASE,EAAK,SAAW,QAAS,CAAE,EAAGmE,EAAE,OAAQ1E,CAAQ,EAEnHK,EAAK,CAAE,QAAS,GAAM,KAAME,EAAK,IAAK,EAAG,IAAKP,CAAQ,CAC/D,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,cAAe,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CACnG,CACF,CAKA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,iCAAiC,CAAC,GAAKlB,EAAI,SAAW,OAAQ,CACxG,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMoF,EAAUnF,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EACnCK,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCwC,EAAS9B,EAAK,QAAU,UAExBqD,EAAKpF,EAAI,UAAU,WAAW,GAAG6D,CAAM,KAAKgD,CAAO,EAAE,EACrDiC,EAAO9I,EAAI,UAAU,IAAIoF,CAAE,EAC3BsF,EAAY,CAAE,OAAA7G,EAAQ,QAAAgD,EAAS,GAAG9E,CAAK,EACvCoE,EAAI,MAAM2C,EAAK,MAAM,kBAAmB,CAAE,OAAQ,OAAQ,KAAM,KAAK,UAAU4B,CAAS,CAAE,CAAC,EACjG,OAAO5I,EAAK,MAAMqE,EAAE,KAAK,EAAGA,EAAE,OAAQ1E,CAAQ,CAChD,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,kCAAkC,CAAC,GAAKlB,EAAI,SAAW,OAAQ,CACzG,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMoF,EAAUnF,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EACnCK,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCwC,EAAS9B,EAAK,QAAU,UAExBqD,EAAKpF,EAAI,UAAU,WAAW,GAAG6D,CAAM,KAAKgD,CAAO,EAAE,EAErDV,EAAI,MADGnG,EAAI,UAAU,IAAIoF,CAAE,EACZ,MAAM,mBAAoB,CAAE,OAAQ,OAAQ,KAAM,KAAK,UAAUrD,CAAI,CAAE,CAAC,EAC7F,OAAOD,EAAK,MAAMqE,EAAE,KAAK,EAAGA,EAAE,OAAQ1E,CAAQ,CAChD,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,kCAAkC,CAAC,GAAKlB,EAAI,SAAW,OAAQ,CACzG,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMoF,EAAUnF,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EAEnCmC,GADO,MAAMxC,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,GAC1B,QAAU,UAExB+D,EAAKpF,EAAI,UAAU,WAAW,GAAG6D,CAAM,KAAKgD,CAAO,EAAE,EAErDV,EAAI,MADGnG,EAAI,UAAU,IAAIoF,CAAE,EACZ,MAAM,mBAAoB,CAAE,OAAQ,MAAO,CAAC,EACjE,OAAOtD,EAAK,MAAMqE,EAAE,KAAK,EAAGA,EAAE,OAAQ1E,CAAQ,CAChD,CAKA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,sBAAsB,CAAC,GAAKlB,EAAI,SAAW,MAAO,CAC5F,IAAMwF,EAAUnF,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EACnCmC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UAE3C0D,EAAKpF,EAAI,UAAU,WAAW,GAAG6D,CAAM,KAAKgD,CAAO,EAAE,EAErDV,EAAI,MADGnG,EAAI,UAAU,IAAIoF,CAAE,EACZ,MAAM,kBAAkB,EAC7C,OAAOtD,EAAK,MAAMqE,EAAE,KAAK,EAAGA,EAAE,OAAQ1E,CAAQ,CAChD,CAKA,GAAIC,EAAI,WAAa,QAAQa,CAAC,kBAAoBlB,EAAI,SAAW,OAAQ,CACvE,IAAMU,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCwC,EAAS9B,EAAK,QAAU,UACxBK,EAAQL,EAAK,MACbiI,EAAWjI,EAAK,SAEtB,GAAI,CAACK,EACH,OAAON,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,gBAAiB,QAAS,qBAAsB,CAAE,EAAG,IAAKL,CAAQ,EAIjH,IAAM0I,EAAY,WAAWtG,CAAM,eAC7B8G,EAAW,MAAM3K,EAAI,SAAS,IAAImK,EAAW,MAAM,GAAmB,CAAC,EAGxEQ,EAAO,SAASvI,CAAK,IACxBuI,EAAO,KAAKvI,CAAK,EACjB,MAAMpC,EAAI,SAAS,IAAImK,EAAW,KAAK,UAAUQ,CAAM,CAAC,GAI1D,IAAMC,EAAe,WAAW/G,CAAM,eAAezB,CAAK,GAC1D,aAAMpC,EAAI,SAAS,IAAI4K,EAAc,KAAK,UAAU,CAClD,MAAAxI,EACA,SAAA4H,EACA,WAAY,KAAK,IAAI,CACvB,CAAC,CAAC,EAEKlI,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,WAAY,EAAK,CAAE,EAAG,IAAKL,CAAQ,CAC1E,CAGA,GAAIC,EAAI,WAAa,QAAQa,CAAC,kBAAoBlB,EAAI,SAAW,OAAQ,CACvE,IAAMU,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCwC,EAAS9B,EAAK,QAAU,UACxBK,EAAQL,EAAK,MACb8I,EAAW9I,EAAK,SAChB+I,EAAY/I,EAAK,UACjBgJ,EAAYhJ,EAAK,WAAa,KAAK,IAAI,EAE7C,GAAI,CAACK,GAASyI,IAAa,QAAaC,IAAc,OACpD,OAAOhJ,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,eAAgB,QAAS,6BAA8B,CAAE,EAAG,IAAKL,CAAQ,EAIxH,IAAMuJ,EAAc,WAAWnH,CAAM,kBAAkBzB,CAAK,GAC5D,aAAMpC,EAAI,SAAS,IAAIgL,EAAa,KAAK,UAAU,CACjD,SAAAH,EACA,UAAAC,EACA,UAAAC,CACF,CAAC,EAAG,CACF,cAAe,IACjB,CAAC,EAEMjJ,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,QAAS,EAAK,CAAE,EAAG,IAAKL,CAAQ,CACvE,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,kBAAkB,CAAC,GAAKlB,EAAI,SAAW,OAAQ,CACzF,IAAMwF,EAAUnF,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EACnCK,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCwC,EAAS9B,EAAK,QAAU,UACxBkJ,EAAgBlJ,EAAK,cACrBmJ,EAAiBnJ,EAAK,eAEtBqD,EAAKpF,EAAI,gBAAgB,WAAW,GAAG6D,CAAM,KAAKgD,CAAO,EAAE,EAC3DiC,EAAO9I,EAAI,gBAAgB,IAAIoF,CAAE,EACjC+F,EAAU,CAAE,OAAAtH,EAAQ,QAAAgD,EAAS,cAAAoE,EAAe,eAAAC,CAAe,EAC3D/E,EAAI,MAAM2C,EAAK,MAAM,kBAAmB,CAAE,OAAQ,OAAQ,KAAM,KAAK,UAAUqC,CAAO,CAAE,CAAC,EAC/F,OAAOrJ,EAAK,MAAMqE,EAAE,KAAK,EAAGA,EAAE,OAAQ1E,CAAQ,CAChD,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,mBAAmB,CAAC,GAAKlB,EAAI,SAAW,OAAQ,CAC1F,IAAMwF,EAAUnF,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EACnCK,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCwC,EAAS9B,EAAK,QAAU,UACxB8I,EAAW9I,EAAK,SAChB+I,EAAY/I,EAAK,UAEvB,GAAI8I,IAAa,QAAaC,IAAc,OAC1C,OAAOhJ,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,mBAAoB,QAAS,iCAAkC,CAAE,EAAG,IAAKL,CAAQ,EAGhI,IAAM2D,EAAKpF,EAAI,gBAAgB,WAAW,GAAG6D,CAAM,KAAKgD,CAAO,EAAE,EAC3DiC,EAAO9I,EAAI,gBAAgB,IAAIoF,CAAE,EACjC+F,EAAU,CAAE,SAAAN,EAAU,UAAAC,CAAU,EAChC3E,EAAI,MAAM2C,EAAK,MAAM,mBAAoB,CAAE,OAAQ,OAAQ,KAAM,KAAK,UAAUqC,CAAO,CAAE,CAAC,EAChG,OAAOrJ,EAAK,MAAMqE,EAAE,KAAK,EAAGA,EAAE,OAAQ1E,CAAQ,CAChD,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,oBAAoB,CAAC,GAAKlB,EAAI,SAAW,MAAO,CAC1F,IAAMwF,EAAUnF,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EACnCmC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UAE3C0D,EAAKpF,EAAI,gBAAgB,WAAW,GAAG6D,CAAM,KAAKgD,CAAO,EAAE,EAE3DV,EAAI,MADGnG,EAAI,gBAAgB,IAAIoF,CAAE,EAClB,MAAM,mBAAmB,EAC9C,OAAOtD,EAAK,MAAMqE,EAAE,KAAK,EAAGA,EAAE,OAAQ1E,CAAQ,CAChD,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,mBAAmB,CAAC,GAAKlB,EAAI,SAAW,MAAO,CACzF,IAAMwF,EAAUnF,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EACnCmC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UAE3C0D,EAAKpF,EAAI,gBAAgB,WAAW,GAAG6D,CAAM,KAAKgD,CAAO,EAAE,EAE3DV,EAAI,MADGnG,EAAI,gBAAgB,IAAIoF,CAAE,EAClB,MAAM,kBAAkB,EAC7C,OAAOtD,EAAK,MAAMqE,EAAE,KAAK,EAAGA,EAAE,OAAQ1E,CAAQ,CAChD,CAKA,GAAIC,EAAI,WAAa,QAAQa,CAAC,kBAAoBlB,EAAI,SAAW,OAAQ,CACvE,IAAM+J,EAAW,MAAM/J,EAAI,SAAS,EAC9BwC,EAASuH,EAAS,IAAI,QAAQ,GAAK,UACnCxB,EAASwB,EAAS,IAAI,SAAS,GAAK,YACpCC,EAAYD,EAAS,IAAI,OAAO,EAEtC,GAAI,CAACC,GAAa,EAAEA,aAAqB,MACvC,OAAOvJ,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,gBAAiB,QAAS,qBAAsB,CAAE,EAAG,IAAKL,CAAQ,EAIjH,IAAM6J,EAAU,OAAO,KAAK,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,UAAU,CAAC,CAAC,GAGtEC,EAAQ,UAAU1H,CAAM,YAAYyH,CAAO,OAC3CE,EAAc,MAAMH,EAAU,YAAY,EAChD,MAAMrL,EAAI,SAAS,IAAIuL,EAAOC,EAAa,CACzC,aAAc,CACZ,YAAa,WACf,EACA,eAAgB,CACd,OAAA3H,EACA,OAAA+F,EACA,WAAY,IAAI,KAAK,EAAE,YAAY,CACrC,CACF,CAAC,EAGD,IAAM6B,EAAgB,CACpB,GAAIH,EACJ,OAAAzH,EACA,OAAA+F,EACA,SAAUyB,EAAU,KACpB,KAAMA,EAAU,KAChB,MAAAE,EACA,gBAAiB,KAAK,IAAI,EAC1B,OAAQ,WACR,mBAAoB,CACtB,EAEA,MAAMvL,EAAI,SAAS,IAAI,SAAS6D,CAAM,IAAIyH,CAAO,GAAI,KAAK,UAAUG,CAAa,CAAC,EAGlF,IAAMC,EAAe,cAAc7H,CAAM,GACnC8H,EAAc,MAAM3L,EAAI,SAAS,IAAI0L,EAAc,MAAM,GAAmB,CAAC,EACnF,OAAAC,EAAU,QAAQL,CAAO,EACzB,MAAMtL,EAAI,SAAS,IAAI0L,EAAc,KAAK,UAAUC,EAAU,MAAM,EAAG,GAAG,CAAC,CAAC,EAErE7J,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,QAAAwJ,EAAS,OAAQ,UAAW,CAAE,EAAG,IAAK7J,CAAQ,CACrF,CAGA,GAAIC,EAAI,WAAa,QAAQa,CAAC,WAAalB,EAAI,SAAW,MAAO,CAC/D,IAAMwC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UAC3C8E,EAAQ,SAAS9E,EAAI,aAAa,IAAI,OAAO,GAAK,IAAI,EACtDkK,EAAS,SAASlK,EAAI,aAAa,IAAI,QAAQ,GAAK,GAAG,EAEvDgK,EAAe,cAAc7H,CAAM,GACnC8H,EAAc,MAAM3L,EAAI,SAAS,IAAI0L,EAAc,MAAM,GAAmB,CAAC,EAE7EG,EAAWF,EAAU,MAAMC,EAAQA,EAASpF,CAAK,EACjDsF,EAAS,CAAC,EAEhB,QAAWR,KAAWO,EAAU,CAC9B,IAAME,EAAW,MAAM/L,EAAI,SAAS,IAAI,SAAS6D,CAAM,IAAIyH,CAAO,GAAI,MAAM,EACxES,GACFD,EAAO,KAAKC,CAAQ,CAExB,CAEA,OAAOjK,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,OAAAgK,EAAQ,MAAOH,EAAU,MAAO,CAAE,EAAG,IAAKlK,CAAQ,CACzF,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,gBAAgB,CAAC,GAAKlB,EAAI,SAAW,MAAO,CACtF,IAAMiK,EAAU5J,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EACnCmC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UAE3CqK,EAAW,MAAM/L,EAAI,SAAS,IAAI,SAAS6D,CAAM,IAAIyH,CAAO,GAAI,MAAM,EAE5E,OAAKS,EAIEjK,EAAK,CAAE,QAAS,GAAM,KAAMiK,CAAS,EAAG,IAAKtK,CAAQ,EAHnDK,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,kBAAmB,QAAS,iBAAkB,CAAE,EAAG,IAAKL,CAAQ,CAIjH,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,uBAAuB,CAAC,GAAKlB,EAAI,SAAW,MAAO,CAC7F,IAAMiK,EAAU5J,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EACnCmC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UAE3CqK,EAAW,MAAM/L,EAAI,SAAS,IAAI,SAAS6D,CAAM,IAAIyH,CAAO,GAAI,MAAM,EAE5E,OAAKS,EAIEjK,EAAK,CACV,QAAS,GACT,KAAM,CACJ,QAAAwJ,EACA,OAAQS,EAAS,QAAU,WAC3B,SAAUA,EAAS,oBAAsB,EACzC,MAAOA,EAAS,OAAS,CAAC,CAC5B,CACF,EAAG,IAAKtK,CAAQ,EAXPK,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,kBAAmB,QAAS,iBAAkB,CAAE,EAAG,IAAKL,CAAQ,CAYjH,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,wBAAwB,CAAC,GAAKlB,EAAI,SAAW,OAAQ,CAC/F,IAAMiK,EAAU5J,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EAEnCmC,GADO,MAAMxC,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,GAC1B,QAAU,UAExB0K,EAAW,MAAM/L,EAAI,SAAS,IAAI,SAAS6D,CAAM,IAAIyH,CAAO,GAAI,MAAM,EAE5E,OAAKS,GAKLA,EAAS,OAAS,aAClBA,EAAS,mBAAqB,EAC9B,MAAM/L,EAAI,SAAS,IAAI,SAAS6D,CAAM,IAAIyH,CAAO,GAAI,KAAK,UAAUS,CAAQ,CAAC,EAKtEjK,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,QAAAwJ,EAAS,OAAQ,YAAa,CAAE,EAAG,IAAK7J,CAAQ,GAX5EK,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,kBAAmB,QAAS,iBAAkB,CAAE,EAAG,IAAKL,CAAQ,CAYjH,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,gBAAgB,CAAC,GAAKlB,EAAI,SAAW,SAAU,CACzF,IAAMiK,EAAU5J,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EAEnCmC,GADO,MAAMxC,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,GAC1B,QAAU,UAExB0K,EAAW,MAAM/L,EAAI,SAAS,IAAI,SAAS6D,CAAM,IAAIyH,CAAO,GAAI,MAAM,EAE5E,GAAI,CAACS,EACH,OAAOjK,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,kBAAmB,QAAS,iBAAkB,CAAE,EAAG,IAAKL,CAAQ,EAI/G,MAAMzB,EAAI,SAAS,OAAO+L,EAAS,KAAK,EAGxC,MAAM/L,EAAI,SAAS,OAAO,SAAS6D,CAAM,IAAIyH,CAAO,EAAE,EAGtD,IAAMI,EAAe,cAAc7H,CAAM,GAEnCmI,GADc,MAAMhM,EAAI,SAAS,IAAI0L,EAAc,MAAM,GAAmB,CAAC,GACrD,OAAQtG,GAAOA,IAAOkG,CAAO,EAC3D,aAAMtL,EAAI,SAAS,IAAI0L,EAAc,KAAK,UAAUM,CAAW,CAAC,EAEzDlK,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,QAAS,EAAK,CAAE,EAAG,IAAKL,CAAQ,CACvE,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,sBAAsB,CAAC,GAAKlB,EAAI,SAAW,MAAO,CAC5F,IAAMiK,EAAU5J,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EACnCmC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UAE3CqK,EAAW,MAAM/L,EAAI,SAAS,IAAI,SAAS6D,CAAM,IAAIyH,CAAO,GAAI,MAAM,EAE5E,OAAKS,EAIEjK,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,MAAOiK,EAAS,OAAS,CAAC,CAAE,CAAE,EAAG,IAAKtK,CAAQ,EAH1EK,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,kBAAmB,QAAS,iBAAkB,CAAE,EAAG,IAAKL,CAAQ,CAIjH,CAKA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,mBAAmB,CAAC,GAAKlB,EAAI,SAAW,OAAQ,CAC1F,IAAM4K,EAASvK,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EAClCK,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCwC,EAAS9B,EAAK,QAAU,UAGxB6H,EAAS7H,EAAK,QAAU,YACxBmK,EAAe,GAAGrI,CAAM,SAASoI,CAAM,IAAIrC,CAAM,GACjDuC,EAAUnM,EAAI,kBAAkB,WAAWkM,CAAY,EAO7D,GAAI,EADgB,MAJD,MADClM,EAAI,kBAAkB,IAAImM,CAAO,EAChB,MAAM,mBAAoB,CAC7D,OAAQ,OACR,KAAM,KAAK,UAAU,CAAE,IAAKD,EAAc,MAAO,EAAG,OAAQ,GAAK,CAAC,CACpE,CAAC,GACoC,KAAK,GACzB,QACf,OAAOpK,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAAS,mBAAoB,CAAE,EAAG,IAAKL,CAAQ,EAG5G,IAAM2D,EAAKpF,EAAI,SAAS,WAAW,GAAG6D,CAAM,KAAKoI,CAAM,EAAE,EACnDnD,EAAO9I,EAAI,SAAS,IAAIoF,CAAE,EAC1BgH,GAAW,CAAE,OAAAvI,EAAQ,OAAAoI,EAAQ,GAAGlK,CAAK,EACrCoE,GAAI,MAAM2C,EAAK,MAAM,kBAAmB,CAAE,OAAQ,OAAQ,KAAM,KAAK,UAAUsD,EAAQ,CAAE,CAAC,EAChG,OAAOtK,EAAK,MAAMqE,GAAE,KAAK,EAAGA,GAAE,OAAQ1E,CAAQ,CAChD,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,sBAAsB,CAAC,GAAKlB,EAAI,SAAW,MAAO,CAC5F,IAAM4K,EAASvK,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EAClCmC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UAC3C2K,EAAS3K,EAAI,aAAa,IAAI,QAAQ,GAAK,OAC3C8E,EAAQ,SAAS9E,EAAI,aAAa,IAAI,OAAO,GAAK,KAAM,EAAE,EAE1D0D,EAAKpF,EAAI,SAAS,WAAW,GAAG6D,CAAM,KAAKoI,CAAM,EAAE,EAEnD9F,EAAI,MADGnG,EAAI,SAAS,IAAIoF,CAAE,EACX,MAAM,6BAA6BvB,CAAM,WAAWoI,CAAM,WAAWI,GAAU,EAAE,UAAU7F,CAAK,EAAE,EACvH,OAAO1E,EAAK,MAAMqE,EAAE,KAAK,EAAGA,EAAE,OAAQ1E,CAAQ,CAChD,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,qBAAqB,CAAC,GAAKlB,EAAI,SAAW,OAAQ,CAC5F,IAAM4K,EAASvK,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EAClCK,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCwC,EAAS9B,EAAK,QAAU,UAExBqD,EAAKpF,EAAI,SAAS,WAAW,GAAG6D,CAAM,KAAKoI,CAAM,EAAE,EACnDnD,EAAO9I,EAAI,SAAS,IAAIoF,CAAE,EAC1BgH,EAAW,CAAE,OAAAvI,EAAQ,OAAAoI,EAAQ,GAAGlK,CAAK,EACrCoE,EAAI,MAAM2C,EAAK,MAAM,oBAAqB,CAAE,OAAQ,OAAQ,KAAM,KAAK,UAAUsD,CAAQ,CAAE,CAAC,EAClG,OAAOtK,EAAK,MAAMqE,EAAE,KAAK,EAAGA,EAAE,OAAQ1E,CAAQ,CAChD,CAKA,GAAIC,EAAI,WAAa,QAAQa,CAAC,iBAAmBlB,EAAI,SAAW,OAAQ,CACtE,IAAMU,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCwC,EAAS9B,EAAK,QAAU,UACxBuK,EAAQvK,EAAK,OAAS,iBACtBmI,EAASnI,EAAK,OAEdwK,EAAU,OAAO,KAAK,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,MAAM,EAAG,CAAC,CAAC,GACrEC,EAAW,WAAW3I,CAAM,gBAC5BuG,EAAa,MAAMpK,EAAI,SAAS,IAAIwM,EAAU,MAAM,GAAgB,CAAC,EAErEjD,EAAO,CADD,CAAE,QAAAgD,EAAS,MAAAD,EAAO,OAAApC,EAAQ,SAAU,KAAM,MAAO,EAAG,UAAW,KAAK,IAAI,CAAE,EACnE,GAAGE,EAAS,OAAQjE,GAAMA,EAAE,UAAYoG,CAAO,CAAC,EACnE,MAAMvM,EAAI,SAAS,IAAIwM,EAAU,KAAK,UAAUjD,EAAK,MAAM,EAAG,GAAG,CAAC,CAAC,EAGnE,IAAMkD,EAAgB,WAAW5I,CAAM,WAAW0I,CAAO,SACzD,aAAMvM,EAAI,SAAS,IAAIyM,EAAe,KAAK,UAAU,CAAC,CAAC,CAAC,EAEjD3K,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,QAAAyK,CAAQ,CAAE,EAAG,IAAK9K,CAAQ,CACjE,CAGA,GAAIC,EAAI,WAAa,QAAQa,CAAC,iBAAmBlB,EAAI,SAAW,MAAO,CAErE,IAAMmL,EAAW,WADF9K,EAAI,aAAa,IAAI,QAAQ,GAAK,SACf,gBAC5BgL,EAAW,MAAM1M,EAAI,SAAS,IAAIwM,EAAU,MAAM,GAAgB,CAAC,EACzE,OAAO1K,EAAK,CAAE,QAAS,GAAM,KAAM4K,CAAO,EAAG,IAAKjL,CAAQ,CAC5D,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,sBAAsB,CAAC,GAAKlB,EAAI,SAAW,MAAO,CAC5F,IAAMkL,EAAU7K,EAAI,SAAS,MAAM,GAAG,EAAE,IAAI,EACtCmC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UAE3C8K,EAAW,WAAW3I,CAAM,gBAE5B8I,GADW,MAAM3M,EAAI,SAAS,IAAIwM,EAAU,MAAM,GAAgB,CAAC,GACpD,KAAMI,GAAMA,EAAE,UAAYL,CAAO,EACtD,GAAI,CAACI,EACH,OAAO7K,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAG7E,IAAMgL,EAAgB,WAAW5I,CAAM,WAAW0I,CAAO,SACnDM,EAAW,MAAM7M,EAAI,SAAS,IAAIyM,EAAe,MAAM,GAAgB,CAAC,EAE9E,OAAO3K,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,GAAG6K,EAAO,OAAQE,EAAO,MAAM,EAAG,EAAE,CAAE,CAAE,EAAG,IAAKpL,CAAQ,CAC/F,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,iCAAiC,CAAC,GAAKlB,EAAI,SAAW,OAAQ,CACxG,IAAMkL,EAAU7K,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EACnCK,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCwC,EAAS9B,EAAK,QAAU,UACxB+K,EAAc/K,EAAK,aAAe,aAElCgL,EAAU,SAAS,KAAK,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,MAAM,EAAG,CAAC,CAAC,GACvEC,EAAY,WAAWnJ,CAAM,WAAW0I,CAAO,IAAIQ,CAAO,OAEhE,GAAI,CACF,IAAME,EAAS,MAAMjN,EAAI,SAAS,sBAAsBgN,CAAS,EACjE,OAAOlL,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,OAAAmL,EAAQ,UAAAD,CAAU,CAAE,EAAG,IAAKvL,CAAQ,CAC3E,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CAChG,CACF,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,6BAA6B,CAAC,GAAKlB,EAAI,SAAW,OAAQ,CACpG,IAAMkL,EAAU7K,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EACnCK,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCwC,EAAS9B,EAAK,QAAU,UACxBiL,EAAYjL,EAAK,UACjBmL,EAAUnL,EAAK,QAErB,GAAI,CAACiL,EACH,OAAOlL,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAAS,oBAAqB,CAAE,EAAG,IAAKL,CAAQ,EAI7G,IAAMgL,EAAgB,WAAW5I,CAAM,WAAW0I,CAAO,SACnDM,EAAW,MAAM7M,EAAI,SAAS,IAAIyM,EAAe,MAAM,GAAgB,CAAC,EACxEU,EAAQ,CAAE,IAAKH,EAAW,GAAI,KAAK,IAAI,EAAG,QAAAE,CAAQ,EACxDL,EAAO,KAAKM,CAAK,EACjB,MAAMnN,EAAI,SAAS,IAAIyM,EAAe,KAAK,UAAUI,CAAM,CAAC,EAG5D,IAAML,EAAW,WAAW3I,CAAM,gBAC5B6I,EAAW,MAAM1M,EAAI,SAAS,IAAIwM,EAAU,MAAM,GAAgB,CAAC,EACnEG,EAAQD,EAAO,KAAME,IAAMA,GAAE,UAAYL,CAAO,EACtD,OAAII,IACFA,EAAM,MAAQE,EAAO,OACrBF,EAAM,UAAY,KAAK,IAAI,EACtBA,EAAM,WAAUA,EAAM,SAAWK,GACtC,MAAMhN,EAAI,SAAS,IAAIwM,EAAU,KAAK,UAAUE,CAAM,CAAC,GAGlD5K,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,SAAUkL,CAAU,CAAE,EAAG,IAAKvL,CAAQ,CAC7E,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,6BAA6B,CAAC,GAAKlB,EAAI,SAAW,MAAO,CACnG,IAAMkL,EAAU7K,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EACnCmC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UAC3C2K,EAAS3K,EAAI,aAAa,IAAI,QAAQ,GAAK,IAE3C+K,EAAgB,WAAW5I,CAAM,WAAW0I,CAAO,SACnDM,EAAW,MAAM7M,EAAI,SAAS,IAAIyM,EAAe,MAAM,GAAgB,CAAC,EAExEb,EAAS,SAASS,EAAQ,EAAE,EAC5B7F,EAAQ,GACR4G,EAAOP,EAAO,MAAMjB,EAAQA,EAASpF,CAAK,EAG1C6G,EAAe,MAAM,QAAQ,IACjCD,EAAK,IAAI,MAAOE,GAAW,CACzB,GAAI,CAEF,OADY,MAAMtN,EAAI,SAAS,IAAIsN,EAAE,GAAG,EAIjC,CAAE,GAAGA,EAAG,IAAK,QAAQ/K,CAAC,gBAAgB,mBAAmB+K,EAAE,GAAG,CAAC,EAAG,EAHxD,CAAE,GAAGA,EAAG,IAAK,IAAK,CAIrC,MAAY,CACV,MAAO,CAAE,GAAGA,EAAG,IAAK,IAAK,CAC3B,CACF,CAAC,CACH,EAEMC,EAAa3B,EAASwB,EAAK,OAASP,EAAO,OAAS,OAAOjB,EAASpF,CAAK,EAAI,KAEnF,OAAO1E,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,OAAQuL,EAAc,WAAAE,CAAW,CAAE,EAAG,IAAK9L,CAAQ,CAC1F,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,gBAAgB,CAAC,GAAKlB,EAAI,SAAW,SAAU,CACzF,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMuL,EAAY,mBAAmBtL,EAAI,SAAS,MAAM,gBAAgB,EAAE,CAAC,CAAC,EACtEmC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UAEjD,GAAI,CACF,aAAM1B,EAAI,SAAS,OAAOgN,CAAS,EAE5BlL,EAAK,CAAE,QAAS,EAAK,EAAG,IAAKL,CAAQ,CAC9C,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CAChG,CACF,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,eAAe,CAAC,GAAKlB,EAAI,SAAW,MAAO,CACrF,IAAM2L,EAAY,mBAAmBtL,EAAI,SAAS,MAAM,eAAe,EAAE,CAAC,CAAC,EAE3E,GAAI,CACF,IAAM8L,EAAM,MAAMxN,EAAI,SAAS,IAAIgN,CAAS,EAC5C,GAAI,CAACQ,EACH,OAAO,IAAI,SAAS,YAAa,CAAE,OAAQ,GAAI,CAAC,EAElD,IAAMrN,EAAUQ,GAAac,EAAU,CACrC,eAAgB+L,EAAI,cAAc,aAAe,aACjD,gBAAiB,sBACnB,CAAC,EACD,OAAO,IAAI,SAASA,EAAI,KAAMrM,GAAa,CAAE,OAAQ,IAAK,QAAAhB,CAAQ,CAAC,CAAC,CACtE,OAAS4F,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CAChG,CACF,CAKA,GAAIC,EAAI,WAAa,QAAQa,CAAC,yBAA2BlB,EAAI,SAAW,OAAQ,CAC9E,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMM,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxC,CAAE,OAAAwC,EAAQ,OAAAqG,EAAQ,KAAAuD,EAAM,QAAAC,EAAS,YAAAjG,CAAY,EAAI1F,EACvD,GAAI,CACF,IAAMc,EAAS,MAAc8K,GAAa3N,EAAK,CAC7C,OAAA6D,EACA,OAAAqG,EACA,KAAAuD,EACA,QAAAC,EACA,YAAAjG,EACA,UAAWzB,EAAK,QAAU,OAC5B,CAAC,EACD,OAAOlE,EAAKe,EAAQ,IAAKpB,CAAQ,CACnC,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,eAAgB,QAASiE,EAAE,OAAQ,CAAE,EAAGA,EAAE,QAAU,IAAKtE,CAAQ,CAChH,CACF,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,uBAAuB,CAAC,GAAKlB,EAAI,SAAW,MAAO,CAC7F,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMW,EAAQV,EAAI,SAAS,MAAM,GAAG,EAAE,IAAI,EAC1C,GAAI,CACF,IAAMkM,EAAS,MAAcC,GAAU7N,EAAKoC,CAAK,EACjD,OAAON,EAAK,CAAE,GAAI,GAAM,OAAA8L,CAAO,EAAG,IAAKnM,CAAQ,CACjD,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,eAAgB,QAASiE,EAAE,OAAQ,CAAE,EAAGA,EAAE,QAAU,IAAKtE,CAAQ,CAChH,CACF,CAGA,GAAIC,EAAI,WAAa,QAAQa,CAAC,oBAAsBlB,EAAI,SAAW,OAAQ,CACzE,IAAMU,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxC,CAAE,MAAAe,EAAO,MAAA0L,EAAO,KAAAzI,CAAK,EAAItD,EAC/B,GAAI,CACF,IAAM6L,EAAS,MAAcG,GAAc/N,EAAKoC,CAAK,EAGrD,OAAON,EAAK,CAAE,GAAI,GAAM,OAAA8L,CAAO,EAAG,IAAKnM,CAAQ,CACjD,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,eAAgB,QAASiE,EAAE,OAAQ,CAAE,EAAGA,EAAE,QAAU,IAAKtE,CAAQ,CAChH,CACF,CAKA,GAAIC,EAAI,WAAa,QAAQa,CAAC,gBAAkBlB,EAAI,SAAW,OAAQ,CACrE,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMM,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxC,CAAE,OAAAwC,EAAQ,OAAAqG,EAAQ,KAAA7E,EAAM,SAAA2I,CAAS,EAAIjM,EAC3C,GAAI,CACF,IAAMsF,EAAO,MAAY4G,GAAWjO,EAAK,CAAE,OAAA6D,EAAQ,OAAAqG,EAAQ,KAAA7E,EAAM,SAAA2I,CAAS,CAAC,EAC3E,OAAOlM,EAAK,CAAE,GAAI,GAAM,KAAAuF,CAAK,EAAG,IAAK5F,CAAQ,CAC/C,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAASiE,EAAE,OAAQ,CAAE,EAAGA,EAAE,QAAU,IAAKtE,CAAQ,CAC9G,CACF,CAGA,GAAIC,EAAI,WAAa,QAAQa,CAAC,UAAYlB,EAAI,SAAW,MAAO,CAE9D,GAAI,CADS,MAAMmD,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EAEtD,OAAO8B,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,cAAe,CAAE,EAAG,IAAKL,CAAQ,EAEhF,IAAMoC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UACjD,GAAI,CACF,IAAMwM,EAAQ,MAAYC,GAAUnO,EAAK6D,CAAM,EAC/C,OAAO/B,EAAK,CAAE,GAAI,GAAM,MAAAoM,CAAM,EAAG,IAAKzM,CAAQ,CAChD,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CAClG,CACF,CAKA,GAAIC,EAAI,WAAa,QAAQa,CAAC,qBAAuBlB,EAAI,SAAW,OAAQ,CAC1E,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMM,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxC,CAAE,OAAAwC,EAAQ,OAAAoI,EAAQ,OAAA/B,EAAQ,KAAAtB,CAAK,EAAI7G,EACzC,GAAI,CACF,IAAMqM,EAAO,MAAaC,GAAWrO,EAAK,CAAE,OAAA6D,EAAQ,OAAAoI,EAAQ,OAAA/B,EAAQ,KAAAtB,CAAK,CAAC,EAC1E,OAAO9G,EAAK,CAAE,GAAI,GAAM,KAAAsM,CAAK,EAAG,IAAK3M,CAAQ,CAC/C,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAASiE,EAAE,OAAQ,CAAE,EAAGA,EAAE,QAAU,IAAKtE,CAAQ,CAC9G,CACF,CAGA,GAAIC,EAAI,WAAa,QAAQa,CAAC,eAAiBlB,EAAI,SAAW,MAAO,CAEnE,GAAI,CADS,MAAMmD,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EAEtD,OAAO8B,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,cAAe,CAAE,EAAG,IAAKL,CAAQ,EAEhF,IAAMoC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UAC3CwI,EAASxI,EAAI,aAAa,IAAI,QAAQ,GAAK,OACjD,GAAI,CAEF,IAAM4M,EAAQ,MAAaC,GAAUvO,EAAK6D,EAAQqG,CAAM,EACxD,OAAOpI,EAAK,CAAE,GAAI,GAAM,MAAAwM,CAAM,EAAG,IAAK7M,CAAQ,CAChD,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CAClG,CACF,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,6BAA6B,CAAC,GAAKlB,EAAI,SAAW,OAAQ,CACpG,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,EACH,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,cAAe,CAAE,EAAG,IAAKL,CAAQ,EAEhF,IAAMwK,EAASvK,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EAClCK,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxC,CAAE,OAAAwC,EAAQ,KAAA2K,CAAK,EAAIzM,EACzB,GAAI,CAEF,IAAM0M,EAAM,MAAaC,GAAW1O,EAAK,CAAE,OAAA6D,EAAQ,OAAAoI,EAAQ,OAAQjG,EAAK,QAAU,YAAa,KAAAwI,CAAK,CAAC,EACrG,OAAO1M,EAAK,CAAE,GAAI,GAAM,IAAA2M,CAAI,EAAG,IAAKhN,CAAQ,CAC9C,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAASiE,EAAE,OAAQ,CAAE,EAAGA,EAAE,QAAU,IAAKtE,CAAQ,CAC9G,CACF,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,6BAA6B,CAAC,GAAKlB,EAAI,SAAW,MAAO,CAEnG,GAAI,CADS,MAAMmD,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EAEtD,OAAO8B,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,cAAe,CAAE,EAAG,IAAKL,CAAQ,EAEhF,IAAMwK,EAASvK,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EAClCmC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UACjD,GAAI,CACF,IAAMiN,EAAW,MAAaC,GAAa5O,EAAK,CAAE,OAAA6D,EAAQ,OAAAoI,EAAQ,MAAO,GAAI,CAAC,EAC9E,OAAOnK,EAAK,CAAE,GAAI,GAAM,SAAA6M,CAAS,EAAG,IAAKlN,CAAQ,CACnD,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CAClG,CACF,CAMA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,+BAA+B,CAAC,GAAKlB,EAAI,SAAW,MAAO,CACrG,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMoN,EAAQnN,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,+BAA+B,CAAC,EAChFkB,EAAWoL,EAAQA,EAAM,CAAC,EAAI,GACpC,GAAI,CACF,IAAM1K,EAAM,MAAM2K,GAAgB9O,EAAKyD,CAAQ,EAC/C,GAAI,CAACU,EACH,OAAOrC,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,YAAa,QAAS,kBAAmB,CAAE,EAAG,IAAKL,CAAQ,EAG1G,IAAMsN,EAAa,CACjB,GAAI5K,EAAI,GACR,KAAMA,EAAI,KACV,MAAOA,EAAI,OAAS,CAAC,EACrB,eAAgBA,EAAI,eAAiB,mBAAqB,OAC1D,UAAWA,EAAI,SACjB,EACA,OAAOrC,EAAK,CAAE,QAAS,GAAM,KAAMiN,CAAW,EAAG,IAAKtN,CAAQ,CAChE,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CAChG,CACF,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,0CAA0C,CAAC,GAAKlB,EAAI,SAAW,MAAO,CAChH,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMoN,EAAQnN,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,0CAA0C,CAAC,EAC3FkB,EAAWoL,EAAQA,EAAM,CAAC,EAAI,GACpC,GAAI,CACF,IAAMP,EAAQ,MAAaC,GAAUvO,EAAKyD,CAAQ,EAClD,OAAO3B,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,OAAQ2B,EAAU,MAAA6K,CAAM,CAAE,EAAG,IAAK7M,CAAQ,CACjF,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CAChG,CACF,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,6CAA6C,CAAC,GAAKlB,EAAI,SAAW,MAAO,CACnH,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMoN,EAAQnN,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,6CAA6C,CAAC,EAC9FkB,EAAWoL,EAAQA,EAAM,CAAC,EAAI,GACpC,GAAI,CACF,IAAMnC,EAAS,MAAgBsC,GAAWhP,EAAKyD,CAAQ,EACvD,OAAO3B,EAAK,CAAE,QAAS,GAAM,KAAM,CAAE,OAAQ2B,EAAU,OAAAiJ,CAAO,CAAE,EAAG,IAAKjL,CAAQ,CAClF,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CAChG,CACF,CAKA,GAAIC,EAAI,WAAa,QAAQa,CAAC,yBAA2BlB,EAAI,SAAW,OAAQ,CAC9E,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMM,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxC,CAAE,OAAAwC,EAAQ,MAAAyI,EAAO,OAAApC,EAAQ,QAAAd,CAAQ,EAAIrH,EAC3C,GAAI,CACF,IAAM4K,EAAQ,MAAgBsC,GAAYjP,EAAK,CAC7C,OAAA6D,EACA,MAAAyI,EACA,OAAApC,EACA,QAAAd,EACA,UAAWpD,EAAK,QAAU,OAC5B,CAAC,EACD,OAAOlE,EAAK,CAAE,GAAI,GAAM,MAAA6K,CAAM,EAAG,IAAKlL,CAAQ,CAChD,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,gBAAiB,QAASiE,EAAE,OAAQ,CAAE,EAAGA,EAAE,QAAU,IAAKtE,CAAQ,CACjH,CACF,CAGA,GAAIC,EAAI,WAAa,QAAQa,CAAC,mBAAqBlB,EAAI,SAAW,MAAO,CAEvE,GAAI,CADS,MAAMmD,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EAEtD,OAAO8B,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,cAAe,CAAE,EAAG,IAAKL,CAAQ,EAEhF,IAAMoC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UAC3CwI,EAASxI,EAAI,aAAa,IAAI,QAAQ,GAAK,OACjD,GAAI,CACF,IAAMgL,EAAS,MAAgBsC,GAAWhP,EAAK6D,EAAQqG,CAAM,EAC7D,OAAOpI,EAAK,CAAE,GAAI,GAAM,OAAA4K,CAAO,EAAG,IAAKjL,CAAQ,CACjD,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,gBAAiB,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CACrG,CACF,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,+BAA+B,CAAC,GAAKlB,EAAI,SAAW,OAAQ,CAEtG,GAAI,CADS,MAAMmD,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EAEtD,OAAO8B,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,cAAe,CAAE,EAAG,IAAKL,CAAQ,EAEhF,IAAM8K,EAAU7K,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EACnCmC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UAEjD,GAAI,EADOL,EAAI,QAAQ,IAAI,cAAc,GAAK,IACtC,WAAW,qBAAqB,EACtC,OAAOS,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAAS,oBAAqB,CAAE,EAAG,IAAKL,CAAQ,EAE7G,GAAI,CAEF,IAAMyN,GADO,MAAM7N,EAAI,SAAS,GACd,IAAI,MAAM,EAC5B,GAAI,EAAE6N,aAAgB,MACpB,OAAOpN,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAAS,cAAe,CAAE,EAAG,IAAKL,CAAQ,EAEvG,IAAM0N,EAAM,MAAMD,EAAK,YAAY,EAC7B,CAAE,MAAA3D,CAAM,EAAI,MAAgB6D,GAAapP,EAAK,CAAE,OAAA6D,EAAQ,QAAA0I,EAAS,KAAM4C,EAAK,YAAaD,EAAK,IAAK,CAAC,EAC1G,OAAOpN,EAAK,CAAE,GAAI,GAAM,MAAAyJ,CAAM,EAAG,IAAK9J,CAAQ,CAChD,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,gBAAiB,QAASiE,EAAE,OAAQ,CAAE,EAAGA,EAAE,QAAU,IAAKtE,CAAQ,CACjH,CACF,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,+BAA+B,CAAC,GAAKlB,EAAI,SAAW,OAAQ,CACtG,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,EACH,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,cAAe,CAAE,EAAG,IAAKL,CAAQ,EAEhF,IAAM8K,EAAU7K,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EACnCK,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxC,CAAE,OAAAwC,EAAQ,MAAA0H,EAAO,WAAA8D,EAAY,aAAAC,CAAa,EAAIvN,EACpD,GAAI,CACF,IAAMwN,EAAQ,MAAgBC,GAAYxP,EAAK,CAC7C,OAAA6D,EACA,QAAA0I,EACA,MAAAhB,EACA,WAAYvF,EAAK,QAAU,YAC3B,WAAAqJ,EACA,aAAAC,CACF,CAAC,EACD,OAAOxN,EAAK,CAAE,GAAI,GAAM,MAAAyN,CAAM,EAAG,IAAK9N,CAAQ,CAChD,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,gBAAiB,QAASiE,EAAE,OAAQ,CAAE,EAAGA,EAAE,QAAU,IAAKtE,CAAQ,CACjH,CACF,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,wBAAwB,CAAC,GAAKlB,EAAI,SAAW,MAAO,CAE9F,GAAI,CADS,MAAMmD,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EAEtD,OAAO8B,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,cAAe,CAAE,EAAG,IAAKL,CAAQ,EAEhF,IAAM8K,EAAU7K,EAAI,SAAS,MAAM,GAAG,EAAE,CAAC,EACnCmC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UACjD,GAAI,CACF,IAAM6N,EAAQ,MAAgBE,GAAUzP,EAAK,CAAE,OAAA6D,EAAQ,QAAA0I,EAAS,eAAgB,EAAK,CAAC,EACtF,OAAOzK,EAAK,CAAE,GAAI,GAAM,MAAAyN,CAAM,EAAG,IAAK9N,CAAQ,CAChD,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,gBAAiB,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CACrG,CACF,CAGA,GAAIC,EAAI,WAAa,QAAQa,CAAC,iBAAmBlB,EAAI,SAAW,MAAO,CAErE,GAAI,CADS,MAAMmD,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EAEtD,OAAO8B,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,cAAe,CAAE,EAAG,IAAKL,CAAQ,EAEhF,IAAMT,EAAMU,EAAI,aAAa,IAAI,KAAK,EACtC,GAAI,CAACV,EACH,OAAOc,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAAS,cAAe,CAAE,EAAG,IAAKL,CAAQ,EAEvG,GAAI,CACF,IAAM+L,EAAM,MAAMxN,EAAI,SAAS,IAAIgB,CAAG,EACtC,GAAI,CAACwM,EACH,OAAO1L,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMtB,EAAUQ,GAAac,EAAU,CACrC,eAAgB+L,EAAI,cAAc,aAAe,aACjD,gBAAiB,sBACnB,CAAC,EACD,OAAO,IAAI,SAASA,EAAI,KAAMrM,GAAa,CAAE,OAAQ,IAAK,QAAAhB,CAAQ,CAAC,CAAC,CACtE,OAAS4F,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CAChG,CACF,CAKA,GAAIC,EAAI,WAAa,QAAQa,CAAC,wBAA0BlB,EAAI,SAAW,OAAQ,CAC7E,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMM,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCwC,EAAS9B,EAAK,QAAU,UAE9B,GAAI,CACF,GAAM,CAAE,kBAAA2N,CAAkB,EAAI,KAAM,uCAC9BC,EAAQ,MAAMD,EAAkB1P,EAAK6D,EAAQ,CACjD,SAAU9B,EAAK,SACf,WAAYA,EAAK,WACjB,KAAMA,EAAK,KACX,SAAUA,EAAK,SACf,MAAOA,EAAK,MACZ,WAAYiE,EAAK,QAAU,QAC3B,SAAUjE,EAAK,QACjB,CAAC,EACD,OAAOD,EAAK,CAAE,QAAS,GAAM,KAAM6N,CAAM,EAAG,IAAKlO,CAAQ,CAC3D,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,qBAAsB,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CAC1G,CACF,CAGA,GAAIC,EAAI,WAAa,QAAQa,CAAC,wBAA0BlB,EAAI,SAAW,MAAO,CAC5E,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMoC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UAC3CkO,EAAWlO,EAAI,aAAa,IAAI,UAAU,GAAK,OAC/CkH,EAAOlH,EAAI,aAAa,IAAI,MAAM,EAExC,GAAI,CACF,GAAM,CAAE,iBAAAmO,CAAiB,EAAI,KAAM,uCAC7BC,EAAS,MAAMD,EAAiB7P,EAAK6D,EAAQ,CAAE,SAAA+L,EAAU,KAAAhH,CAAK,CAAC,EACrE,OAAO9G,EAAK,CAAE,QAAS,GAAM,KAAMgO,CAAO,EAAG,IAAKrO,CAAQ,CAC5D,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,qBAAsB,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CAC1G,CACF,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,6BAA6B,CAAC,GAAKlB,EAAI,SAAW,MAAO,CACnG,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMsO,EAAUrO,EAAI,SAAS,MAAM,GAAG,EAAE,IAAI,EACtCmC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UAEjD,GAAI,CACF,GAAM,CAAE,eAAAsO,CAAe,EAAI,KAAM,uCAC3BL,EAAQ,MAAMK,EAAehQ,EAAK6D,EAAQkM,CAAO,EACvD,OAAKJ,EAGE7N,EAAK,CAAE,QAAS,GAAM,KAAM6N,CAAM,EAAG,IAAKlO,CAAQ,EAFhDK,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,CAG/E,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,qBAAsB,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CAC1G,CACF,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,6BAA6B,CAAC,GAAKlB,EAAI,SAAW,QAAS,CACrG,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMsO,EAAUrO,EAAI,SAAS,MAAM,GAAG,EAAE,IAAI,EACtCK,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCwC,EAAS9B,EAAK,QAAU,UAE9B,GAAI,CACF,GAAM,CAAE,kBAAAkO,CAAkB,EAAI,KAAM,uCAC9BN,EAAQ,MAAMM,EAAkBjQ,EAAK6D,EAAQkM,EAAShO,CAAI,EAChE,OAAK4N,EAGE7N,EAAK,CAAE,QAAS,GAAM,KAAM6N,CAAM,EAAG,IAAKlO,CAAQ,EAFhDK,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,CAG/E,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,qBAAsB,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CAC1G,CACF,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,6BAA6B,CAAC,GAAKlB,EAAI,SAAW,SAAU,CACtG,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMsO,EAAUrO,EAAI,SAAS,MAAM,GAAG,EAAE,IAAI,EACtCmC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UAEjD,GAAI,CACF,GAAM,CAAE,kBAAAwO,CAAkB,EAAI,KAAM,uCAEpC,OADgB,MAAMA,EAAkBlQ,EAAK6D,EAAQkM,CAAO,EAIrDjO,EAAK,CAAE,QAAS,EAAK,EAAG,IAAKL,CAAQ,EAFnCK,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,CAG/E,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,qBAAsB,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CAC1G,CACF,CAKA,GAAIC,EAAI,WAAa,QAAQa,CAAC,4BAA8BlB,EAAI,SAAW,MAAO,CAChF,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMoC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UAEjD,GAAI,CACF,GAAM,CAAE,mBAAAyO,CAAmB,EAAI,KAAM,uCAC/BC,EAAS,MAAMD,EAAmBnQ,EAAK6D,CAAM,EACnD,OAAO/B,EAAK,CAAE,QAAS,GAAM,KAAMsO,CAAO,EAAG,IAAK3O,CAAQ,CAC5D,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,eAAgB,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CACpG,CACF,CAGA,GAAIC,EAAI,WAAa,QAAQa,CAAC,4BAA8BlB,EAAI,SAAW,MAAO,CAChF,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMM,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCwC,EAAS9B,EAAK,QAAU,UAE9B,GAAI,CACF,GAAM,CAAE,sBAAAsO,CAAsB,EAAI,KAAM,uCAClCD,EAAS,MAAMC,EAAsBrQ,EAAK6D,EAAQ9B,EAAK,MAAM,EACnE,OAAOD,EAAK,CAAE,QAAS,GAAM,KAAMsO,CAAO,EAAG,IAAK3O,CAAQ,CAC5D,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,eAAgB,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CACpG,CACF,CAGA,GAAIC,EAAI,WAAa,QAAQa,CAAC,kCAAoClB,EAAI,SAAW,OAAQ,CACvF,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAG7E,IAAMoC,GADO,MAAMxC,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,GAC1B,QAAU,UAE9B,GAAI,CACF,GAAM,CAAE,qBAAAiP,CAAqB,EAAI,KAAM,uCACjCF,EAAS,MAAME,EAAqBtQ,EAAK6D,CAAM,EACrD,OAAO/B,EAAK,CAAE,QAAS,GAAM,KAAMsO,CAAO,EAAG,IAAK3O,CAAQ,CAC5D,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,eAAgB,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CACpG,CACF,CAKA,GAAIC,EAAI,WAAa,QAAQa,CAAC,UAAYlB,EAAI,SAAW,MAAO,CAC9D,IAAMwC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAKL,EAAI,QAAQ,IAAI,UAAU,GAAK,UAEhF,GAAI,CACF,GAAM,CAAE,SAAAkP,CAAS,EAAI,KAAM,uCACrBC,EAAQ,MAAMD,EAASvQ,EAAK6D,CAAM,EACxC,OAAO/B,EAAK,CAAE,QAAS,GAAM,KAAM0O,CAAM,EAAG,IAAK/O,CAAQ,CAC3D,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,cAAe,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CACnG,CACF,CAGA,GAAIC,EAAI,WAAa,QAAQa,CAAC,UAAYlB,EAAI,SAAW,OAAQ,CAC/D,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAG7E,IAAMM,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCwC,EAAS9B,EAAK,QAAUV,EAAI,QAAQ,IAAI,UAAU,GAAKK,EAAI,aAAa,IAAI,QAAQ,GAAK,UAE/F,GAAI,CACF,GAAM,CAAE,SAAA+O,CAAS,EAAI,KAAM,uCACrBD,EAAQ,MAAMC,EAASzQ,EAAK6D,EAAQ9B,CAAI,EAC9C,OAAOD,EAAK,CAAE,QAAS,GAAM,KAAM0O,CAAM,EAAG,IAAK/O,CAAQ,CAC3D,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,cAAe,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CACnG,CACF,CAKA,GAAIC,EAAI,WAAa,QAAQa,CAAC,sBAAwBlB,EAAI,SAAW,MAAO,CAC1E,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMoC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UAEjD,GAAI,CACF,GAAM,CAAE,cAAAgP,CAAc,EAAI,KAAM,uCAC1BC,EAAS,MAAMD,EAAc1Q,EAAK6D,CAAM,EAC9C,OAAO/B,EAAK,CAAE,QAAS,GAAM,KAAM6O,CAAO,EAAG,IAAKlP,CAAQ,CAC5D,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,eAAgB,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CACpG,CACF,CAGA,GAAIC,EAAI,WAAa,QAAQa,CAAC,sBAAwBlB,EAAI,SAAW,MAAO,CAC1E,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMM,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCwC,EAAS9B,EAAK,QAAU,UAE9B,GAAI,CACF,GAAM,CAAE,iBAAA6O,CAAiB,EAAI,KAAM,uCAC7BD,EAAS,MAAMC,EAAiB5Q,EAAK6D,EAAQ9B,EAAK,MAAM,EAC9D,OAAOD,EAAK,CAAE,QAAS,GAAM,KAAM6O,CAAO,EAAG,IAAKlP,CAAQ,CAC5D,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,eAAgB,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CACpG,CACF,CAGA,GAAIC,EAAI,SAAS,MAAM,IAAI,OAAO,SAASa,CAAC,2BAA2B,CAAC,GAAKlB,EAAI,SAAW,QAAS,CACnG,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMoP,EAAUnP,EAAI,SAAS,MAAM,GAAG,EAAE,IAAI,EACtCK,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,KAAO,CAAC,EAAE,EACxCwC,EAAS9B,EAAK,QAAU,UAE9B,GAAI,CACF,GAAM,CAAE,wBAAA+O,CAAwB,EAAI,KAAM,uCACpCH,EAAS,MAAMG,EAAwB9Q,EAAK6D,EAAQgN,EAAgB9O,EAAK,IAAI,EACnF,OAAOD,EAAK,CAAE,QAAS,GAAM,KAAM6O,CAAO,EAAG,IAAKlP,CAAQ,CAC5D,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,eAAgB,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CACpG,CACF,CAGA,GAAIC,EAAI,WAAa,QAAQa,CAAC,mCAAqClB,EAAI,SAAW,OAAQ,CACxF,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMoC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UAEjD,GAAI,EADOL,EAAI,QAAQ,IAAI,cAAc,GAAK,IACtC,WAAW,qBAAqB,EACtC,OAAOS,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAAS,oBAAqB,CAAE,EAAG,IAAKL,CAAQ,EAG7G,GAAI,CAEF,IAAMyN,GADO,MAAM7N,EAAI,SAAS,GACd,IAAI,MAAM,EAC5B,GAAI,EAAE6N,aAAgB,MACpB,OAAOpN,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAAS,cAAe,CAAE,EAAG,IAAKL,CAAQ,EAEvG,IAAM0N,EAAM,MAAMD,EAAK,YAAY,EAC7B,CAAE,gBAAA6B,CAAgB,EAAI,KAAM,uCAC5BlO,EAAS,MAAMkO,EAAgB/Q,EAAK6D,EAAQsL,EAAKD,EAAK,IAAI,EAChE,OAAOpN,EAAK,CAAE,QAAS,GAAM,KAAMe,CAAO,EAAG,IAAKpB,CAAQ,CAC5D,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,eAAgB,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CACpG,CACF,CAGA,GAAIC,EAAI,WAAa,QAAQa,CAAC,qCAAuClB,EAAI,SAAW,OAAQ,CAC1F,IAAM2E,EAAO,MAAMxB,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EACxD,GAAI,CAACgG,GAAQ,CAACC,EAAQD,EAAM,OAAO,EACjC,OAAOlE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,CAAE,EAAG,IAAKL,CAAQ,EAE7E,IAAMoC,EAASnC,EAAI,aAAa,IAAI,QAAQ,GAAK,UAEjD,GAAI,EADOL,EAAI,QAAQ,IAAI,cAAc,GAAK,IACtC,WAAW,qBAAqB,EACtC,OAAOS,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAAS,oBAAqB,CAAE,EAAG,IAAKL,CAAQ,EAG7G,GAAI,CAEF,IAAMyN,GADO,MAAM7N,EAAI,SAAS,GACd,IAAI,MAAM,EAC5B,GAAI,EAAE6N,aAAgB,MACpB,OAAOpN,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAAS,cAAe,CAAE,EAAG,IAAKL,CAAQ,EAEvG,IAAM0N,EAAM,MAAMD,EAAK,YAAY,EAC7B,CAAE,kBAAA8B,CAAkB,EAAI,KAAM,uCAC9BnO,EAAS,MAAMmO,EAAkBhR,EAAK6D,EAAQsL,EAAKD,EAAK,IAAI,EAClE,OAAOpN,EAAK,CAAE,QAAS,GAAM,KAAMe,CAAO,EAAG,IAAKpB,CAAQ,CAC5D,OAASsE,EAAQ,CACf,OAAOjE,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,eAAgB,QAASiE,EAAE,OAAQ,CAAE,EAAG,IAAKtE,CAAQ,CACpG,CACF,CAGA,GAAIC,EAAI,WAAa,QAAQa,CAAC,SAAWlB,EAAI,SAAW,OAAQ,CAG9D,GAAI,CADS,MAAMmD,EAAWnD,EAAKrB,CAAG,EAAE,MAAM,IAAM,IAAI,EAC7C,OAAO8B,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,cAAe,CAAE,EAAG,IAAKL,CAAQ,EAGzF,IAAMM,EAAO,MAAMV,EAAI,KAAK,EAAE,MAAM,IAAM,IAAI,EACxC8D,EAASpD,EAAOkP,GAAc,UAAUlP,CAAI,EAAI,CAAE,QAAS,GAAO,MAAO,CAAE,QAAS,cAAe,CAAE,EAC3G,GAAI,EAAE,YAAaoD,IAAW,CAACA,EAAO,QACpC,OAAOrD,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,aAAc,QAAUqD,EAAe,OAAO,SAAW,SAAU,CAAE,EAAG,IAAK1D,CAAQ,EAIpI,IAAMmD,EAAaC,GAAmBxD,CAAG,EACnCyD,EAAO,MAAMC,GAAiB/E,EAAKmF,EAAO,KAAK,OAAQA,EAAO,KAAMP,GAAc,MAAS,EACjG,GAAIE,EAAK,IAAK,OAAOhD,EAAKgD,EAAK,SAAU,IAAKrD,CAAQ,EAGtD,MAAMzB,EAAI,WAAW,KAAK,CACxB,OAAQmF,EAAO,KAAK,OACpB,SAAUA,EAAO,KAAK,SACtB,SAAUA,EAAO,KAAK,SACtB,KAAMA,EAAO,KAAK,KAClB,UAAW,KAAK,IAAI,EACpB,QAASL,EAAK,GAChB,CAAC,EAGD,IAAMoM,EAAO,CAAE,QAAS,GAAM,KAAM,CAAE,OAAQ,EAAK,CAAE,EACrD,aAAMpM,EAAK,MAAMoM,CAAI,EACdpP,EAAKoP,EAAM,IAAKzP,CAAQ,CACjC,CAGA,OAAAwD,EAAQ,OAAQhF,EAAW,CACzB,QAAS,kBACT,OAAQoB,EAAI,OACZ,SAAUK,GAAK,SACf,OAAQA,GAAK,MACf,CAAC,EACMI,EAAK,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,YAAa,QAAS,iBAAkB,CAAE,EAAG,IAAKL,CAAQ,CACvG,OAASa,EAAU,CACjB,IAAM6O,EAAK,KAAK,IAAI,EAAI5P,EACxB,GAAIe,aAAe,SAAU,CAC3B,IAAM8O,EAAUnQ,GAAgBqB,EAAKb,CAAQ,EAC7C,OAAAwD,EAAQ,CACN,MAAO,QACP,IAAK3C,EAAI,YAAc,iBACvB,UAAArC,EACA,KAAMyB,GAAK,SACX,OAAQ0P,EAAQ,OAChB,GAAAD,CACF,CAAC,EACMC,CACT,CACA,OAAAnM,EAAQ,CACN,MAAO,QACP,IAAK3C,GAAK,SAAW,YACrB,UAAArC,EACA,KAAMyB,GAAK,SACX,OAAQ,IACR,GAAAyP,CACF,CAAC,EACMrP,EACL,CAAE,QAAS,GAAO,MAAO,CAAE,KAAM,WAAY,QAAS,kBAAmB,CAAE,EAC3E,IACAL,CACF,EAEA,IAAMtB,EAAUQ,GAAac,EAAU,CAAE,eAAgB,kBAAmB,CAAC,EAC7E,OAAO,IAAI,SAAS,KAAK,UAAU,CAAE,MAAO,CAAE,KAAM,WAAY,UAAAxB,CAAU,CAAE,CAAC,EAAGkB,GAAa,CAAE,OAAQ,IAAK,QAAAhB,CAAQ,CAAC,CAAC,CACxH,QAAE,CACA,IAAMgR,EAAK,KAAK,IAAI,EAAI5P,EACxB0D,EAAQ,CAAE,MAAO,OAAQ,IAAK,cAAe,UAAAhF,EAAW,KAAMyB,GAAK,SAAU,GAAAyP,CAAG,CAAC,CACnF,CACF,EAGA,MAAOE,GAAY,MAGnB,MAAM,UAAUC,EAAiCtR,EAAUuR,EAAuB,CAChFtM,EAAQ,CAAE,MAAO,OAAQ,IAAK,YAAa,KAAM,YAAa,GAAI,KAAK,IAAI,EAAIqM,EAAW,aAAc,CAAC,CAQ3G,CACF",
  "names": ["createNotImplementedError", "name", "notImplemented", "__name", "notImplementedClass", "init_utils", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "_timeOrigin", "_performanceNow", "nodeTiming", "PerformanceEntry", "PerformanceMark", "PerformanceMeasure", "PerformanceResourceTiming", "PerformanceObserverEntryList", "Performance", "PerformanceObserver", "performance", "init_performance", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_utils", "__name", "name", "options", "_name", "_type", "type", "_fn", "_options", "createNotImplementedError", "markName", "e", "measureName", "entry", "startOrMeasureOptions", "endMark", "start", "end", "maxSize", "listener", "event", "callback", "fn", "thisArg", "args", "init_perf_hooks", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_performance", "__esmMin", "init_perf_hooks", "performance", "Performance", "PerformanceEntry", "PerformanceMark", "PerformanceMeasure", "PerformanceObserver", "PerformanceObserverEntryList", "PerformanceResourceTiming", "noop_default", "init_noop", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "Writable", "_console", "_ignoreErrors", "_stderr", "_stdout", "log", "info", "trace", "debug", "table", "error", "warn", "createTask", "clear", "count", "countReset", "dir", "dirxml", "group", "groupEnd", "groupCollapsed", "profile", "profileEnd", "time", "timeEnd", "timeLog", "timeStamp", "Console", "_times", "_stdoutErrorHandler", "_stderrErrorHandler", "init_console", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_noop", "init_utils", "noop_default", "notImplemented", "notImplementedClass", "workerdConsole", "assert", "clear", "context", "count", "countReset", "createTask", "debug", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "profile", "profileEnd", "table", "time", "timeEnd", "timeLog", "timeStamp", "trace", "warn", "console_default", "init_console", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "Console", "_ignoreErrors", "_stderr", "_stderrErrorHandler", "_stdout", "_stdoutErrorHandler", "_times", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "__esmMin", "init_console", "console_default", "hrtime", "init_hrtime", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "__name", "startTime", "now", "seconds", "nanos", "diffSeconds", "diffNanos", "ReadStream", "init_read_stream", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "__name", "fd", "mode", "WriteStream", "init_write_stream", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "__name", "fd", "dir", "callback", "x", "y", "dx", "dy", "env", "count", "str", "encoding", "cb", "init_tty", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_read_stream", "init_write_stream", "NODE_VERSION", "init_node_version", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "EventEmitter", "Process", "init_process", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_tty", "init_utils", "init_node_version", "_Process", "__name", "impl", "prop", "value", "warning", "type", "code", "args", "eventName", "#stdin", "#stdout", "#stderr", "ReadStream", "WriteStream", "#cwd", "cwd", "NODE_VERSION", "createNotImplementedError", "notImplemented", "globalProcess", "getBuiltinModule", "workerdProcess", "isWorkerdProcessV2", "unenvProcess", "exit", "features", "platform", "env", "hrtime", "nextTick", "_channel", "_disconnect", "_events", "_eventsCount", "_handleQueue", "_maxListeners", "_pendingMessage", "_send", "assert", "disconnect", "mainModule", "_debugEnd", "_debugProcess", "_exiting", "_fatalException", "_getActiveHandles", "_getActiveRequests", "_kill", "_linkedBinding", "_preload_modules", "_rawDebug", "_startProfilerIdleNotifier", "_stopProfilerIdleNotifier", "_tickCallback", "abort", "addListener", "allowedNodeEnvironmentFlags", "arch", "argv", "argv0", "availableMemory", "binding", "channel", "chdir", "config", "connected", "constrainedMemory", "cpuUsage", "cwd", "debugPort", "dlopen", "domain", "emit", "emitWarning", "eventNames", "execArgv", "execPath", "exitCode", "finalization", "getActiveResourcesInfo", "getegid", "geteuid", "getgid", "getgroups", "getMaxListeners", "getuid", "hasUncaughtExceptionCaptureCallback", "initgroups", "kill", "listenerCount", "listeners", "loadEnvFile", "memoryUsage", "moduleLoadList", "off", "on", "once", "openStdin", "permission", "pid", "ppid", "prependListener", "prependOnceListener", "rawListeners", "reallyExit", "ref", "release", "removeAllListeners", "removeListener", "report", "resourceUsage", "send", "setegid", "seteuid", "setgid", "setgroups", "setMaxListeners", "setSourceMapsEnabled", "setuid", "setUncaughtExceptionCaptureCallback", "sourceMapsEnabled", "stderr", "stdin", "stdout", "throwDeprecation", "title", "traceDeprecation", "umask", "unref", "uptime", "version", "versions", "_process", "process_default", "init_process", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_hrtime", "Process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "__esmMin", "init_process", "process_default", "util", "objectUtil", "ZodParsedType", "getParsedType", "init_util", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "_", "assertIs", "_arg", "__name", "assertNever", "_x", "items", "obj", "item", "validKeys", "k", "filtered", "e", "object", "keys", "key", "arr", "checker", "val", "joinValues", "array", "separator", "value", "first", "second", "data", "ZodIssueCode", "quotelessJson", "ZodError", "init_ZodError", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_util", "util", "__name", "obj", "_ZodError", "issues", "sub", "subs", "actualProto", "_mapper", "mapper", "issue", "fieldErrors", "processError", "error", "curr", "i", "el", "value", "formErrors", "firstEl", "errorMap", "en_default", "init_en", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_ZodError", "init_util", "__name", "issue", "_ctx", "message", "ZodIssueCode", "ZodParsedType", "util", "setErrorMap", "map", "overrideErrorMap", "getErrorMap", "init_errors", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_en", "en_default", "__name", "addIssueToContext", "ctx", "issueData", "overrideMap", "getErrorMap", "issue", "makeIssue", "en_default", "x", "EMPTY_PATH", "ParseStatus", "INVALID", "DIRTY", "OK", "isAborted", "isDirty", "isValid", "isAsync", "init_parseUtil", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_errors", "init_en", "__name", "params", "data", "path", "errorMaps", "fullPath", "fullIssue", "errorMessage", "maps", "m", "map", "_ParseStatus", "status", "results", "arrayValue", "s", "pairs", "syncPairs", "pair", "key", "value", "finalObject", "init_typeAliases", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "errorUtil", "init_errorUtil", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "message", "processCreateParams", "params", "errorMap", "invalid_type_error", "required_error", "description", "__name", "iss", "ctx", "message", "timeRegexSource", "args", "secondsRegexSource", "secondsQuantifier", "timeRegex", "datetimeRegex", "regex", "dateRegexSource", "opts", "isValidIP", "ip", "version", "ipv4Regex", "ipv6Regex", "isValidJWT", "jwt", "alg", "jwtRegex", "header", "base64", "decoded", "isValidCidr", "ipv4CidrRegex", "ipv6CidrRegex", "floatSafeRemainder", "val", "step", "valDecCount", "stepDecCount", "decCount", "valInt", "stepInt", "deepPartialify", "schema", "ZodObject", "newShape", "key", "fieldSchema", "ZodOptional", "ZodArray", "ZodNullable", "ZodTuple", "item", "mergeValues", "a", "b", "aType", "getParsedType", "bType", "ZodParsedType", "bKeys", "util", "sharedKeys", "newObj", "sharedValue", "newArray", "index", "itemA", "itemB", "createZodEnum", "values", "ZodEnum", "ZodFirstPartyTypeKind", "cleanParams", "data", "p", "custom", "check", "_params", "fatal", "ZodAny", "r", "_fatal", "ParseInputLazyPath", "handleResult", "ZodType", "cuidRegex", "cuid2Regex", "ulidRegex", "uuidRegex", "nanoidRegex", "durationRegex", "emailRegex", "_emojiRegex", "emojiRegex", "base64Regex", "base64urlRegex", "dateRegex", "ZodString", "ZodNumber", "ZodBigInt", "ZodBoolean", "ZodDate", "ZodSymbol", "ZodUndefined", "ZodNull", "ZodUnknown", "ZodNever", "ZodVoid", "ZodUnion", "getDiscriminator", "ZodDiscriminatedUnion", "ZodIntersection", "ZodRecord", "ZodMap", "ZodSet", "ZodFunction", "ZodLazy", "ZodLiteral", "ZodNativeEnum", "ZodPromise", "ZodEffects", "ZodDefault", "ZodCatch", "ZodNaN", "BRAND", "ZodBranded", "ZodPipeline", "ZodReadonly", "late", "instanceOfType", "stringType", "numberType", "nanType", "bigIntType", "booleanType", "dateType", "symbolType", "undefinedType", "nullType", "anyType", "unknownType", "neverType", "voidType", "arrayType", "objectType", "strictObjectType", "unionType", "discriminatedUnionType", "intersectionType", "tupleType", "recordType", "mapType", "setType", "functionType", "lazyType", "literalType", "enumType", "nativeEnumType", "promiseType", "effectsType", "optionalType", "nullableType", "preprocessType", "pipelineType", "ostring", "onumber", "oboolean", "coerce", "NEVER", "init_types", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_ZodError", "init_errors", "init_errorUtil", "init_parseUtil", "init_util", "parent", "value", "path", "result", "isValid", "error", "ZodError", "input", "ParseStatus", "isAsync", "err", "maybeAsyncResult", "getIssueProperties", "setError", "ZodIssueCode", "refinementData", "refinement", "def", "option", "incoming", "transform", "defaultValueFunc", "catchValueFunc", "This", "target", "_ZodString", "addIssueToContext", "INVALID", "status", "tooBig", "tooSmall", "validation", "errorUtil", "options", "minLength", "maxLength", "len", "ch", "min", "max", "_ZodNumber", "kind", "inclusive", "_ZodBigInt", "OK", "_ZodDate", "minDate", "maxDate", "_ZodArray", "i", "_ZodObject", "shape", "keys", "shapeKeys", "extraKeys", "pairs", "keyValidator", "unknownKeys", "catchall", "syncPairs", "pair", "issue", "defaultError", "augmentation", "merging", "mask", "newField", "handleResults", "results", "unionErrors", "childCtx", "dirty", "issues", "types", "type", "_ZodDiscriminatedUnion", "discriminator", "discriminatorValue", "optionsMap", "discriminatorValues", "handleParsed", "parsedLeft", "parsedRight", "isAborted", "merged", "isDirty", "left", "right", "_ZodTuple", "items", "itemIndex", "x", "rest", "schemas", "_ZodRecord", "keyType", "valueType", "first", "second", "third", "finalMap", "_ZodSet", "finalizeSet", "elements", "parsedSet", "element", "minSize", "maxSize", "size", "_ZodFunction", "makeArgsIssue", "makeIssue", "getErrorMap", "en_default", "makeReturnsIssue", "returns", "fn", "me", "parsedArgs", "e", "parsedReturns", "returnType", "func", "getter", "_ZodEnum", "expectedValues", "enumValues", "newDef", "opt", "nativeEnumValues", "promisified", "effect", "checkCtx", "arg", "processed", "DIRTY", "executeRefinement", "acc", "inner", "base", "preprocess", "newCtx", "_ZodPipeline", "inResult", "freeze", "cls", "external_exports", "__export", "BRAND", "DIRTY", "EMPTY_PATH", "INVALID", "NEVER", "OK", "ParseStatus", "ZodType", "ZodAny", "ZodArray", "ZodBigInt", "ZodBoolean", "ZodBranded", "ZodCatch", "ZodDate", "ZodDefault", "ZodDiscriminatedUnion", "ZodEffects", "ZodEnum", "ZodError", "ZodFirstPartyTypeKind", "ZodFunction", "ZodIntersection", "ZodIssueCode", "ZodLazy", "ZodLiteral", "ZodMap", "ZodNaN", "ZodNativeEnum", "ZodNever", "ZodNull", "ZodNullable", "ZodNumber", "ZodObject", "ZodOptional", "ZodParsedType", "ZodPipeline", "ZodPromise", "ZodReadonly", "ZodRecord", "ZodSet", "ZodString", "ZodSymbol", "ZodTuple", "ZodUndefined", "ZodUnion", "ZodUnknown", "ZodVoid", "addIssueToContext", "anyType", "arrayType", "bigIntType", "booleanType", "coerce", "custom", "dateType", "datetimeRegex", "en_default", "discriminatedUnionType", "effectsType", "enumType", "functionType", "getErrorMap", "getParsedType", "instanceOfType", "intersectionType", "isAborted", "isAsync", "isDirty", "isValid", "late", "lazyType", "literalType", "makeIssue", "mapType", "nanType", "nativeEnumType", "neverType", "nullType", "nullableType", "numberType", "objectType", "objectUtil", "oboolean", "onumber", "optionalType", "ostring", "pipelineType", "preprocessType", "promiseType", "quotelessJson", "recordType", "setType", "setErrorMap", "strictObjectType", "stringType", "symbolType", "tupleType", "undefinedType", "unionType", "unknownType", "util", "voidType", "init_external", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_errors", "init_parseUtil", "init_typeAliases", "init_util", "init_types", "init_ZodError", "init_zod", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_external", "promoCodes_exports", "__export", "PromoCodeService", "init_promoCodes", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "__name", "env", "promoCode", "cleanCode", "fullPromoCode", "error", "code", "data", "tenantId", "validation", "redemption", "discount", "list", "promoCodes", "key", "b", "rewardMonths", "referralCode", "result", "signJWT", "claims", "privateKey", "encodedHeader", "base64UrlEncode", "encodedClaims", "signingInput", "cryptoKey", "importPrivateKey", "data", "signature", "encodedSignature", "pem", "pemContents", "binaryDer", "keyData", "i", "input", "base64", "bytes", "binary", "byte", "getAccessToken", "serviceAccountKey", "scopes", "now", "jwt", "response", "errorText", "parseServiceAccountKey", "base64Key", "jsonString", "error", "getGoogleAPIHeaders", "serviceAccountKeyBase64", "init_googleAuth", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "__name", "appsScriptDeployer_exports", "__export", "AppsScriptDeployer", "deployAppsScriptForTenant", "env", "tenantId", "tenantName", "automationJWT", "deployer", "backendUrl", "init_appsScriptDeployer", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_googleAuth", "__name", "scriptId", "versionNumber", "webAppUrl", "scriptUrl", "error", "scopes", "getGoogleAPIHeaders", "templateContent", "response", "content", "configFile", "f", "initFile", "source", "functionName", "playerImages_exports", "__export", "createPlayerImage", "deletePlayerImage", "getPlayerImage", "getPlayerImageUploadUrl", "listPlayerImages", "updatePlayerImage", "env", "tenant", "data", "id", "image", "imageKey", "indexKey", "existing", "updated", "img", "imageId", "filters", "images", "updates", "updatedIndex", "err", "playerId", "type", "contentType", "r2Key", "PlayerImageSchema", "init_playerImages", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_zod", "external_exports", "__name", "autoPostsMatrix_exports", "__export", "getAutoPostsMatrix", "getDefaultAutoPostsMatrix", "resetAutoPostsMatrix", "shouldPostToChannel", "togglePostTypeChannel", "updateAutoPostsMatrix", "updatePostTypeConfig", "defaultChannels", "postTypes", "matrix", "type", "env", "tenant", "key", "stored", "postType", "config", "channel", "defaultMatrix", "ChannelConfigSchema", "AutoPostConfigSchema", "AutoPostsMatrixSchema", "init_autoPostsMatrix", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_zod", "external_exports", "__name", "clubConfig_exports", "__export", "getClubConfig", "getDefaultClubConfig", "updateClubConfig", "updateClubConfigSection", "updateFeatureFlags", "uploadClubBadge", "uploadSponsorLogo", "clubName", "shortName", "env", "tenant", "key", "stored", "tenantKey", "tenantConfig", "config", "section", "data", "flags", "file", "contentType", "r2Key", "url", "ClubConfigSchema", "init_clubConfig", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_zod", "external_exports", "__name", "brand_exports", "__export", "BrandKitSchema", "getBrand", "setBrand", "getContrastTextColor", "hexColor", "hex", "r", "g", "b", "env", "tenant", "config", "getClubConfig", "payload", "validated", "updateClubConfigSection", "init_brand", "__esmMin", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_zod", "init_clubConfig", "external_exports", "__name", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_zod", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "encoder", "decoder", "MAX_INT32", "concat", "buffers", "size", "acc", "length", "buf", "i", "buffer", "__name", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "encodeBase64", "input", "CHUNK_SIZE", "arr", "i", "__name", "decodeBase64", "encoded", "binary", "bytes", "decode", "input", "decoder", "encoded", "decodeBase64", "__name", "encode", "unencoded", "encoder", "encodeBase64", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "JOSEError", "__name", "message", "options", "JWTClaimValidationFailed", "payload", "claim", "reason", "JWTExpired", "JOSEAlgNotAllowed", "JOSENotSupported", "JWSInvalid", "JOSEError", "__name", "JWTInvalid", "JWSSignatureVerificationFailed", "JOSEError", "__name", "message", "options", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "unusable", "name", "prop", "__name", "isAlgorithm", "algorithm", "getHashLength", "hash", "getNamedCurve", "alg", "checkUsage", "key", "usage", "checkSigCryptoKey", "expected", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "message", "msg", "actual", "types", "last", "__name", "invalid_key_input_default", "withAlg", "alg", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "isCryptoKey", "key", "__name", "isKeyObject", "is_key_like_default", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "is_disjoint_default", "__name", "headers", "sources", "acc", "header", "parameters", "parameter", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "isObjectLike", "value", "__name", "is_object_default", "input", "proto", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "check_key_length_default", "__name", "alg", "key", "modulusLength", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "subtleMapping", "jwk", "algorithm", "keyUsages", "JOSENotSupported", "__name", "jwk_to_key_default", "keyData", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "validate_crit_default", "__name", "Err", "recognizedDefault", "recognizedOption", "protectedHeader", "joseHeader", "input", "recognized", "parameter", "JOSENotSupported", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "validate_algorithms_default", "__name", "option", "algorithms", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "isJWK", "key", "is_object_default", "__name", "isPrivateJWK", "isPublicJWK", "isSecretJWK", "cache", "handleJWK", "__name", "key", "jwk", "alg", "freeze", "cached", "cryptoKey", "jwk_to_key_default", "handleKeyObject", "keyObject", "isPublic", "extractable", "hash", "namedCurve", "normalize_key_default", "isCryptoKey", "isKeyObject", "err", "isJWK", "decode", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "tag", "__name", "key", "jwkMatchesOp", "alg", "usage", "expected", "expectedKeyOp", "symmetricTypeCheck", "isJWK", "isSecretJWK", "is_key_like_default", "withAlg", "asymmetricTypeCheck", "isPrivateJWK", "isPublicJWK", "check_key_type_default", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "subtle_dsa_default", "__name", "alg", "algorithm", "hash", "JOSENotSupported", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "get_sign_verify_key_default", "__name", "alg", "key", "usage", "invalid_key_input_default", "checkSigCryptoKey", "verify_default", "__name", "alg", "key", "signature", "data", "cryptoKey", "get_sign_verify_key_default", "check_key_length_default", "algorithm", "subtle_dsa_default", "flattenedVerify", "jws", "key", "options", "is_object_default", "JWSInvalid", "parsedProt", "protectedHeader", "decode", "decoder", "is_disjoint_default", "joseHeader", "extensions", "validate_crit_default", "b64", "alg", "algorithms", "validate_algorithms_default", "JOSEAlgNotAllowed", "resolvedKey", "check_key_type_default", "data", "concat", "encoder", "signature", "k", "normalize_key_default", "verify_default", "JWSSignatureVerificationFailed", "payload", "result", "__name", "compactVerify", "jws", "key", "options", "decoder", "JWSInvalid", "protectedHeader", "payload", "signature", "length", "verified", "flattenedVerify", "result", "__name", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "epoch_default", "__name", "date", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "REGEX", "secs_default", "__name", "str", "matched", "value", "unit", "numericDate", "validateInput", "label", "input", "__name", "normalizeTyp", "value", "checkAudiencePresence", "audPayload", "audOption", "validateClaimsSet", "protectedHeader", "encodedPayload", "options", "payload", "decoder", "is_object_default", "JWTInvalid", "typ", "JWTClaimValidationFailed", "requiredClaims", "issuer", "subject", "audience", "maxTokenAge", "presenceCheck", "claim", "tolerance", "secs_default", "currentDate", "now", "epoch_default", "JWTExpired", "age", "max", "JWTClaimsBuilder", "#payload", "encoder", "jwtVerify", "jwt", "key", "options", "verified", "compactVerify", "JWTInvalid", "result", "validateClaimsSet", "__name", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "sign_default", "__name", "alg", "key", "data", "cryptoKey", "get_sign_verify_key_default", "check_key_length_default", "signature", "subtle_dsa_default", "FlattenedSign", "__name", "#payload", "#protectedHeader", "#unprotectedHeader", "payload", "protectedHeader", "unprotectedHeader", "key", "options", "JWSInvalid", "is_disjoint_default", "joseHeader", "extensions", "validate_crit_default", "b64", "alg", "check_key_type_default", "encoder", "encode", "data", "concat", "k", "normalize_key_default", "signature", "sign_default", "jws", "decoder", "CompactSign", "__name", "#flattened", "payload", "FlattenedSign", "protectedHeader", "key", "options", "jws", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "SignJWT", "__name", "#protectedHeader", "#jwt", "payload", "JWTClaimsBuilder", "issuer", "subject", "audience", "jwtId", "input", "protectedHeader", "key", "options", "sig", "CompactSign", "JWTInvalid", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_zod", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "CONNECT_SRC", "securityHeaders", "withSecurity", "init", "h", "k", "v", "__name", "PostReqSchema", "external_exports", "json", "body", "status", "headers", "finalHeaders", "value", "key", "requestId", "release", "payload", "original", "changed", "updated", "err", "normalizedError", "meta", "normalizedMeta", "bodyText", "withSecurity", "__name", "readIdempotencyKey", "req", "__name", "assert", "cond", "msg", "badReq", "message", "nowMs", "expMs", "ttlMinutes", "id", "nanoid", "size", "alphabet", "bytes", "i", "kvGetJSON", "kv", "key", "kvPutJSON", "value", "opts", "kvListJSON", "prefix", "list", "k", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "normalizeClaims", "c", "roles", "tenantId", "__name", "getJwtSecret", "env", "raw", "verifyAndNormalize", "token", "secret", "payload", "jwtVerify", "requireAdminClaims", "claims", "issueTenantAdminJWT", "env", "args", "secret", "getJwtSecret", "now", "exp", "SignJWT", "__name", "generateServiceJWT", "ttlSeconds", "verifyServiceJWT", "token", "payload", "jwtVerify", "normalizeClaims", "error", "getBearer", "req", "hdr", "token", "__name", "forbidden", "requireJWT", "env", "verifyAndNormalize", "e", "requireAdmin", "claims", "requireAdminClaims", "hasRole", "user", "requiredRole", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "ensureIdempotent", "env", "tenantId", "body", "explicitKey", "key", "hashKey", "existing", "__name", "resp", "setFinalIdempotent", "txt", "digest", "b", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "key", "__name", "tenant", "getTenantConfig", "env", "raw", "putTenantConfig", "cfg", "ensureTenant", "existing", "fresh", "updateFlags", "flags", "setMakeWebhook", "url", "setTenantFlags", "env", "tenant", "patch", "cfg", "ensureTenant", "putTenantConfig", "__name", "setChannelWebhook", "env", "tenant", "channel", "url", "cfg", "ensureTenant", "putTenantConfig", "__name", "setYouTubeBYOGoogle", "client_id", "client_secret", "isAllowedWebhookHost", "host", "allowedCsv", "raw", "items", "s", "h", "item", "suf", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "publishViaMake", "env", "tenant", "template", "data", "url", "res", "__name", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "publishYouTube", "env", "tenant", "template", "data", "creds", "getTenantYouTubeCreds", "accessToken", "getGoogleAccessToken", "privacy", "startTime", "title", "description", "broadcast", "createLiveBroadcast", "stream", "createLiveStream", "bindBroadcast", "__name", "tenantId", "raw", "params", "res", "json", "o", "body", "broadcastId", "streamId", "url", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "publishFacebook", "p", "tenant", "job", "env", "fetchImpl", "makeWebhook", "payload", "r", "fbCreds", "__name", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "publishInstagram", "p", "tenant", "job", "env", "fetchImpl", "makeWebhook", "payload", "r", "igCreds", "__name", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "publishTikTok", "p", "tenant", "job", "env", "fetchImpl", "makeWebhook", "payload", "r", "tiktokCreds", "__name", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "publishX", "p", "tenant", "job", "env", "fetchImpl", "makeWebhook", "payload", "r", "xCreds", "__name", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "getCounterKey", "__name", "tenant", "channel", "today", "DEFAULT_LIMITS", "shouldDefer", "env", "key", "countStr", "count", "limit", "incrementCounter", "queue_consumer_default", "batch", "env", "msg", "job", "cfg", "getTenantConfig", "useMake", "hook", "results", "ch", "publishViaMake", "setFinalIdempotent", "fallbacks", "shouldDefer", "params", "publishYouTube", "publishFacebook", "publishInstagram", "publishTikTok", "publishX", "incrementCounter", "err", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "putEvent", "env", "tenant", "ev", "key", "idxKey", "existing", "next", "r", "__name", "getEvent", "eventId", "deleteEvent", "listEvents", "setRsvp", "userId", "rsvp", "addCheckin", "env", "tenant", "eventId", "userId", "key", "list", "__name", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "registerDevice", "env", "tenant", "userId", "platform", "token", "key", "filtered", "d", "__name", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "INVITES", "__name", "token", "createInvite", "env", "args", "assert", "normalizedRole", "nanoid", "invite", "expMs", "nowMs", "inviteUrl", "getInvite", "kvGetJSON", "badReq", "consumeInvite", "key", "kvPutJSON", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "TEAM_KEY", "__name", "tenant", "teamId", "TEAM_PREFIX", "createTeam", "env", "args", "assert", "key", "existing", "kvGetJSON", "team", "kvPutJSON", "listTeams", "env", "tenant", "kvListJSON", "TEAM_PREFIX", "__name", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "ROOM_KEY", "__name", "tenant", "roomId", "ROOM_PREFIX", "MSG_PREFIX", "createRoom", "env", "args", "assert", "key", "exists", "kvGetJSON", "room", "kvPutJSON", "listRooms", "teamId", "rooms", "kvListJSON", "r", "addMessage", "msg", "id", "listMessages", "prefix", "entries", "k", "a", "b", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "ALBUM_KEY", "__name", "tenant", "albumId", "ALBUM_PREFIX", "OBJ_KEY", "id", "OBJ_PREFIX", "createAlbum", "env", "args", "assert", "album", "kvPutJSON", "listAlbums", "teamId", "all", "kvListJSON", "a", "uploadBinary", "env", "args", "key", "id", "__name", "commitMedia", "m", "kvPutJSON", "OBJ_KEY", "listMedia", "kvListJSON", "OBJ_PREFIX", "b", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "provisionTenant", "env", "request", "tenantId", "sanitizeTenantId", "finalPlan", "promoCodeApplied", "PromoCodeService", "promoResult", "flags", "determineFlagsForPlan", "tenantConfig", "putTenantConfig", "adminJWT", "issueTenantAdminJWT", "automationJWT", "baseUrl", "setupToken", "generateSetupToken", "setupUrl", "adminConsoleUrl", "sendWelcomeEmail", "appsScriptDeployment", "deployAppsScriptForTenant", "error", "__name", "input", "plan", "token", "expiresAt", "data", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "ALLOWED", "corsHeaders", "origin", "h", "allow", "__name", "isPreflight", "req", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "logJSON", "event", "__name", "newRequestId", "DEFAULT_LIMIT", "DEFAULT_WINDOW", "DEFAULT_SCOPE", "rateLimit", "request", "env", "options", "kv", "limit", "windowSeconds", "scope", "requestId", "path", "ip", "key", "stored", "remaining", "retryAfter", "logJSON", "nextRemaining", "__name", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "RequestValidationError", "__name", "issues", "status", "isValidationError", "error", "parse", "schema", "value", "result", "issue", "json", "data", "headers", "hdrs", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "healthz", "__name", "readyz", "_env", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "init_zod", "StartSchema", "external_exports", "BrandSchema", "MakeSchema", "queueProvisioning", "env", "tenantId", "serviceJWT", "generateServiceJWT", "baseUrl", "error", "__name", "signupStart", "req", "requestId", "corsHdrs", "body", "data", "parse", "json", "promoId", "discount", "comped", "promo", "trialEndsAt", "redemptionId", "jwt", "issueTenantAdminJWT", "err", "isValidationError", "logJSON", "signupBrand", "claims", "requireJWT", "signupStarterMake", "tenant", "webhookHost", "isAllowedWebhookHost", "connId", "signupProConfirm", "autoId", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "handleMagicStart", "req", "env", "body", "email", "tenantId", "json", "now", "token", "SignJWT", "link", "__name", "handleMagicVerify", "payload", "jwtVerify", "session", "hdrs", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "handleProvisionQueue", "request", "env", "authHeader", "token", "verifyServiceJWT", "body", "tenant", "provisionerId", "provisioner", "result", "error", "__name", "handleProvisionStatus", "tenantId", "handleTenantOverview", "currentMonth", "actionCount", "limit", "fixturesCount", "resultsCount", "postsCount", "makeConnection", "proAutomation", "handleProvisionRetry", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "TenantRateLimiter", "__name", "state", "req", "url", "bucket", "now", "windowMs", "burst", "key", "used", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "VotingRoom", "__name", "state", "env", "tenant", "matchId", "local", "snapKV", "settings", "openSettings", "c", "candidateId", "userHash", "limit", "lastWrite", "req", "url", "s", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "MatchRoom", "__name", "state", "env", "tenant", "matchId", "local", "snapKV", "eventType", "text", "now", "tokensKey", "tokens", "e", "data", "evt", "id", "ts", "fullEvent", "lastKVFlush", "pushText", "req", "url", "body", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "ChatRoom", "__name", "state", "env", "tenant", "roomId", "local", "snapKV", "snapshot", "indexKey", "existing", "next", "r", "data", "badWords", "filtered", "word", "id", "ts", "msg", "lastKVFlush", "limit", "messages", "cursorTs", "m", "a", "b", "page", "nextCursor", "now", "userId", "expiryTs", "req", "url", "body", "cursor", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "GeoFenceManager", "__name", "state", "env", "stored", "toStore", "data", "location", "tokens", "venue", "token", "userLoc", "distance", "lat1", "lon1", "lat2", "lon2", "\u03C61", "\u03C62", "\u0394\u03C6", "\u0394\u03BB", "a", "now", "maxAge", "loc", "req", "url", "body", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_process", "init_virtual_unenv_global_polyfill_cloudflare_unenv_preset_node_console", "init_performance", "COMMON", "ORDER_STARTER", "ORDER_PRO", "Provisioner", "__name", "state", "env", "tenantId", "plan", "stored", "order", "checkpoints", "step", "s", "cp", "err", "t", "nextWeek", "row", "ts", "sig", "res", "kvNamespace", "job", "tenant", "token", "link", "e", "secret", "data", "enc", "key", "b", "email", "header", "payload", "b64", "req", "url", "DEV_DEFAULT_CORS", "SignupSchema", "external_exports", "PostEventSchema", "buildRateLimitScope", "pathname", "segments", "__name", "buildCorsHeaders", "origin", "env", "requestId", "release", "headers", "corsHeaders", "envAllowed", "o", "allowList", "allowHeaders", "h", "hdr", "mergeHeaders", "base", "extra", "merged", "value", "key", "respondWithCors", "res", "withSecurity", "src_default", "req", "_ctx", "t0", "newRequestId", "corsHdrs", "url", "isPreflight", "healthz", "readyz", "json", "body", "data", "secret", "now", "exp", "token", "SignJWT", "err", "v", "method", "scope", "limitResult", "rateLimit", "parse", "result", "provisionTenant", "isValidationError", "signupStart", "signupBrand", "signupStarterMake", "signupProConfirm", "handleMagicStart", "handleMagicVerify", "handleProvisionQueue", "handleProvisionRetry", "provisionStatusMatch", "tenantId", "handleProvisionStatus", "overviewMatch", "handleTenantOverview", "tenant", "ym", "kvKey", "planKey", "current", "count", "cfg", "ensureTenant", "isPro", "comped", "claims", "requireJWT", "event_type", "channels", "template", "idemHeader", "readIdempotencyKey", "idem", "ensureIdempotent", "job", "logJSON", "requireAdmin", "parsed", "id", "name", "locale", "tz", "putTenantConfig", "make_webhook_url", "u", "allowedCsv", "isAllowedWebhookHost", "updated", "setMakeWebhook", "e", "user", "hasRole", "refreshUrl", "r", "ok", "fixtures", "synced", "fixture", "limit", "status", "query", "params", "nextFixture", "matchId", "updateId", "createdAt", "liveUpdate", "validStatuses", "removed", "competition", "standings", "team", "PromoCodeService", "promoCodes", "code", "ttl_minutes", "issueTenantAdminJWT", "setup_url", "updateFlags", "cid", "redirect", "authUrl", "cs", "tok", "managed", "setTenantFlags", "channel", "webhookUrl", "setChannelWebhook", "client_id", "client_secret", "setYouTubeBYOGoogle", "masked", "evt", "type", "plan", "stub", "voteBody", "ip", "ua", "userHash", "putEvent", "eventId", "cur", "getEvent", "next", "deleteEvent", "list", "listEvents", "ev", "userId", "rsvp", "setRsvp", "addCheckin", "platform", "registerDevice", "teamId", "tokensKey", "existing", "teamKey", "teamTokens", "leagueId", "season", "upstreamUrl", "matchBody", "tokens", "tokenMetaKey", "latitude", "longitude", "timestamp", "locationKey", "venueLatitude", "venueLongitude", "geoBody", "formData", "videoFile", "videoId", "r2Key", "arrayBuffer", "videoMetadata", "videoListKey", "videoList", "offset", "videoIds", "videos", "metadata", "updatedList", "roomId", "rateLimitKey", "limitId", "chatBody", "cursor", "title", "albumId", "indexKey", "albumIndexKey", "albums", "album", "a", "photos", "contentType", "photoId", "objectKey", "putUrl", "caption", "photo", "page", "signedPhotos", "p", "nextCursor", "obj", "role", "maxUses", "createInvite", "invite", "getInvite", "email", "consumeInvite", "ageGroup", "createTeam", "teams", "listTeams", "room", "createRoom", "rooms", "listRooms", "text", "msg", "addMessage", "messages", "listMessages", "match", "getTenantConfig", "exportData", "listAlbums", "createAlbum", "file", "buf", "uploadBinary", "playerTags", "consentCheck", "media", "commitMedia", "listMedia", "createPlayerImage", "image", "playerId", "listPlayerImages", "images", "imageId", "getPlayerImage", "updatePlayerImage", "deletePlayerImage", "getAutoPostsMatrix", "matrix", "updateAutoPostsMatrix", "resetAutoPostsMatrix", "getBrand", "brand", "setBrand", "getClubConfig", "config", "updateClubConfig", "section", "updateClubConfigSection", "uploadClubBadge", "uploadSponsorLogo", "PostReqSchema", "resp", "ms", "secured", "queue_consumer_default", "controller", "ctx"]
}
