name: Documentation Bundle Check

on:
  push:
    branches: [main]
  pull_request:

jobs:
  docs:
    name: Validate documentation bundle
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure required documentation files exist
        shell: bash
        run: |
          set -euo pipefail
          files=(
            'AGENT.md'
            'README.md'
            'CONTRIBUTING.md'
            'PRIVACY.md'
            'API_CONTRACT.md'
            'CODEX_INSTRUCTIONS.md'
            'CODEX_STEPS.md'
            'SECURITY.md'
            'i18n/README.md'
            'openapi.yaml'
          )
          missing=()
          for file in "${files[@]}"; do
            if [ ! -s "$file" ]; then
              echo "Missing or empty required documentation file: $file"
              missing+=("$file")
            fi
          done
          if [ "${#missing[@]}" -ne 0 ]; then
            echo "Documentation bundle validation failed." >&2
            exit 1
          fi
          echo "All required docs present."

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install PyYAML
        run: python -m pip install --upgrade pip pyyaml

      - name: Verify OpenAPI version bump on spec changes
        shell: bash
        run: |
          set -euo pipefail
          # Determine base SHA depending on event
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
          else
            BASE_SHA="${{ github.event.before }}"
          fi

          # If we can't determine a base, skip
          if [ -z "${BASE_SHA:-}" ] || [ "$BASE_SHA" = "0000000000000000000000000000000000000000" ]; then
            echo "No base revision available; skipping OpenAPI version check."
            exit 0
          fi

          # If openapi.yaml didn't change, we're done
          if git diff --quiet "$BASE_SHA"..HEAD -- openapi.yaml; then
            echo "No OpenAPI changes detected."
            exit 0
          fi

          # Try to read previous version of the spec
          if ! git show "$BASE_SHA:openapi.yaml" > /tmp/base_openapi.yaml 2>/dev/null; then
            echo "Base openapi.yaml not found; skipping version check."
            exit 0
          fi

          CURRENT_VERSION=$(python -c "import yaml; print(yaml.safe_load(open('openapi.yaml'))['info']['version'])")
          PREVIOUS_VERSION=$(python -c "import yaml; print(yaml.safe_load(open('/tmp/base_openapi.yaml'))['info']['version'])")

          echo "Base: $PREVIOUS_VERSION, Current: $CURRENT_VERSION"
          if [ "$CURRENT_VERSION" = "$PREVIOUS_VERSION" ]; then
            echo "openapi.yaml changed but info.version was not bumped." >&2
            exit 1
          fi
          echo "âœ… OpenAPI version bumped from $PREVIOUS_VERSION to $CURRENT_VERSION."
