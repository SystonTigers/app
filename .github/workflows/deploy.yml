name: Deploy Workers
on:
  push:
    branches: [ main ]

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  verify:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install
        run: npm ci

      - name: Build
        run: npm run build
      - run: npm ci --workspaces
      - run: npm run -ws build

  deploy:
    needs: verify
    runs-on: ubuntu-latest
    permissions:
      contents: read
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'   # keep 20 if you prefer, 22 matches your local
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install Wrangler v4 (global)
        run: npm install -g wrangler@4

      - name: Install deps (backend)
        run: npm ci

      - name: Build backend
        run: npm run build

      - name: Publish backend
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
        run: wrangler deploy --minify

      # --- Fixtures
      - name: Publish fixtures
        working-directory: workers/fixtures
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
        run: wrangler deploy --minify

      # --- Admin
      - name: Publish admin console
        working-directory: admin
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
        run: wrangler deploy --minify

      # --- Setup
      - name: Publish setup console
        working-directory: setup
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
        run: wrangler deploy --minify
