version: '3.8'

services:
  football-highlights-processor:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: football-highlights-prod
    restart: unless-stopped
    ports:
      - "${PORT:-8080}:8080"
    environment:
      - NODE_ENV=production
      - PORT=8080
      - REDIS_URL=redis://redis:6379
      - GOOGLE_APPLICATION_CREDENTIALS=/app/secrets/google-credentials.json
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - MAX_CONCURRENT_JOBS=${MAX_CONCURRENT_JOBS:-3}
      - WEBHOOK_URL=${WEBHOOK_URL}
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
      - DRIVE_FOLDER_ID=${DRIVE_FOLDER_ID}
    volumes:
      - video_uploads:/tmp/uploads
      - video_processing:/tmp/processing
      - video_outputs:/tmp/outputs
      - app_logs:/app/logs
      - app_data:/app/data
      - ./secrets:/app/secrets:ro
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - football-network
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 2m

  redis:
    image: redis:7-alpine
    container_name: football-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - football-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'

  nginx:
    image: nginx:alpine
    container_name: football-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - football-highlights-processor
    networks:
      - football-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  monitoring:
    image: prom/prometheus:latest
    container_name: football-monitoring
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - football-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'

volumes:
  video_uploads:
    driver: local
  video_processing:
    driver: local
  video_outputs:
    driver: local
  app_logs:
    driver: local
  app_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  football-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16